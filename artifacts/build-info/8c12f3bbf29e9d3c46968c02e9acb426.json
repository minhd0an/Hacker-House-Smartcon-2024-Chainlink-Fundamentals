{
	"id": "8c12f3bbf29e9d3c46968c02e9acb426",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-a9e49ce8b8.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract MyToken is ERC20, ERC20Permit {\n    constructor() ERC20(\"MyToken\", \"MTK\") ERC20Permit(\"MyToken\") {}\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/Nonces.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.1.0/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.1.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts@5.1.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2166,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2168,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1014,
								"contract": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/Nonces.sol": {
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1014,
								"contract": "@openzeppelin/contracts@5.1.0/utils/Nonces.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f041fb26d5f297c9fafa0f6815d1369ee4ee47ce804e07c96fe986124484de7b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f041fb26d5f297c9fafa0f6815d1369ee4ee47ce804e07c96fe986124484de7b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE COINBASE 0xFB 0x26 0xD5 CALLCODE SWAP8 0xC9 STATICCALL STATICCALL 0xF PUSH9 0x15D1369EE4EE47CE80 0x4E SMOD 0xC9 PUSH16 0xE986124484DE7B64736F6C634300081C STOP CALLER ",
							"sourceMap": "657:1315:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f041fb26d5f297c9fafa0f6815d1369ee4ee47ce804e07c96fe986124484de7b64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE COINBASE 0xFB 0x26 0xD5 CALLCODE SWAP8 0xC9 STATICCALL STATICCALL 0xF PUSH9 0x15D1369EE4EE47CE80 0x4E SMOD 0xC9 PUSH16 0xE986124484DE7B64736F6C634300081C STOP CALLER ",
							"sourceMap": "657:1315:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f041fb26d5f297c9fafa0f6815d1369ee4ee47ce804e07c96fe986124484de7b64736f6c634300081c0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1255:4281  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1255:4281  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b7d632c351617898da8be85fb349a2076ae5f4cfc9e45183eec592aa484d6c064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b7d632c351617898da8be85fb349a2076ae5f4cfc9e45183eec592aa484d6c064736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x7D632C351617898DA8BE85FB CALLVALUE SWAP11 KECCAK256 PUSH23 0xAE5F4CFC9E45183EEC592AA484D6C064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "1255:3026:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3026:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b7d632c351617898da8be85fb349a2076ae5f4cfc9e45183eec592aa484d6c064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x7D632C351617898DA8BE85FB CALLVALUE SWAP11 KECCAK256 PUSH23 0xAE5F4CFC9E45183EEC592AA484D6C064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "1255:3026:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1255,
									"end": 4281,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b7d632c351617898da8be85fb349a2076ae5f4cfc9e45183eec592aa484d6c064736f6c634300081c0033",
									".code": [
										{
											"begin": 1255,
											"end": 4281,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4281,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201c0bb7dfc24334c54d28d1cf12ec93a7632905e01dfcb9a6147d18162c6d640764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201c0bb7dfc24334c54d28d1cf12ec93a7632905e01dfcb9a6147d18162c6d640764736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SIGNEXTEND 0xB7 0xDF 0xC2 NUMBER CALLVALUE 0xC5 0x4D 0x28 0xD1 0xCF SLT 0xEC SWAP4 0xA7 PUSH4 0x2905E01D 0xFC 0xB9 0xA6 EQ PUSH30 0x18162C6D640764736F6C634300081C003300000000000000000000000000 ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201c0bb7dfc24334c54d28d1cf12ec93a7632905e01dfcb9a6147d18162c6d640764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SIGNEXTEND 0xB7 0xDF 0xC2 NUMBER CALLVALUE 0xC5 0x4D 0x28 0xD1 0xCF SLT 0xEC SWAP4 0xA7 PUSH4 0x2905E01D 0xFC 0xB9 0xA6 EQ PUSH30 0x18162C6D640764736F6C634300081C003300000000000000000000000000 ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c0bb7dfc24334c54d28d1cf12ec93a7632905e01dfcb9a6147d18162c6d640764736f6c634300081c0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":251:3931  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":251:3931  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122003e6ab999ac09fd9ab474f705a9c2a6ec21e4e32c0261222eed80b1e6536bd4b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122003e6ab999ac09fd9ab474f705a9c2a6ec21e4e32c0261222eed80b1e6536bd4b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xE6 0xAB SWAP10 SWAP11 0xC0 SWAP16 0xD9 0xAB SELFBALANCE 0x4F PUSH17 0x5A9C2A6EC21E4E32C0261222EED80B1E65 CALLDATASIZE 0xBD 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "251:3680:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:3680:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122003e6ab999ac09fd9ab474f705a9c2a6ec21e4e32c0261222eed80b1e6536bd4b64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xE6 0xAB SWAP10 SWAP11 0xC0 SWAP16 0xD9 0xAB SELFBALANCE 0x4F PUSH17 0x5A9C2A6EC21E4E32C0261222EED80B1E65 CALLDATASIZE 0xBD 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "251:3680:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toChecksumHexString(address)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003e6ab999ac09fd9ab474f705a9c2a6ec21e4e32c0261222eed80b1e6536bd4b64736f6c634300081c0033",
									".code": [
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220ca20f853a33cecf50e5ec2d322553041e1ebc49ab684bcc28a0cbc85a6b90d5264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220ca20f853a33cecf50e5ec2d322553041e1ebc49ab684bcc28a0cbc85a6b90d5264736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA KECCAK256 0xF8 MSTORE8 LOG3 EXTCODECOPY 0xEC CREATE2 0xE MCOPY 0xC2 0xD3 0x22 SSTORE ADDRESS COINBASE 0xE1 0xEB 0xC4 SWAP11 0xB6 DUP5 0xBC 0xC2 DUP11 0xC 0xBC DUP6 0xA6 0xB9 0xD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "344:7470:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220ca20f853a33cecf50e5ec2d322553041e1ebc49ab684bcc28a0cbc85a6b90d5264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA KECCAK256 0xF8 MSTORE8 LOG3 EXTCODECOPY 0xEC CREATE2 0xE MCOPY 0xC2 0xD3 0x22 SSTORE ADDRESS COINBASE 0xE1 0xEB 0xC4 SWAP11 0xB6 DUP5 0xBC 0xC2 DUP11 0xC 0xBC DUP6 0xA6 0xB9 0xD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "344:7470:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca20f853a33cecf50e5ec2d322553041e1ebc49ab684bcc28a0cbc85a6b90d5264736f6c634300081c0033",
									".code": [
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2166,
								"contract": "@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2168,
								"contract": "@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":521:3702  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":521:3702  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f4207ee18713a185e6d6893b7abb9ff46ee9be239674171311e4ad6bb84f4d4564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f4207ee18713a185e6d6893b7abb9ff46ee9be239674171311e4ad6bb84f4d4564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL KECCAK256 PUSH31 0xE18713A185E6D6893B7ABB9FF46EE9BE239674171311E4AD6BB84F4D456473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "521:3181:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f4207ee18713a185e6d6893b7abb9ff46ee9be239674171311e4ad6bb84f4d4564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL KECCAK256 PUSH31 0xE18713A185E6D6893B7ABB9FF46EE9BE239674171311E4AD6BB84F4D456473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "521:3181:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4207ee18713a185e6d6893b7abb9ff46ee9be239674171311e4ad6bb84f4d4564736f6c634300081c0033",
									".code": [
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fc72dbacda830cee4d70f51fd9a0d147a15c12afdaea7f9259cfba2ca6cc5f3d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fc72dbacda830cee4d70f51fd9a0d147a15c12afdaea7f9259cfba2ca6cc5f3d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH19 0xDBACDA830CEE4D70F51FD9A0D147A15C12AFDA 0xEA PUSH32 0x9259CFBA2CA6CC5F3D64736F6C634300081C0033000000000000000000000000 ",
							"sourceMap": "281:28026:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fc72dbacda830cee4d70f51fd9a0d147a15c12afdaea7f9259cfba2ca6cc5f3d64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH19 0xDBACDA830CEE4D70F51FD9A0D147A15C12AFDA 0xEA PUSH32 0x9259CFBA2CA6CC5F3D64736F6C634300081C0033000000000000000000000000 ",
							"sourceMap": "281:28026:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc72dbacda830cee4d70f51fd9a0d147a15c12afdaea7f9259cfba2ca6cc5f3d64736f6c634300081c0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203ee61fd4b6c341120d017dfbed68292525b26b17aa1365c6634252a8547222e164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203ee61fd4b6c341120d017dfbed68292525b26b17aa1365c6634252a8547222e164736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xE6 0x1F 0xD4 0xB6 0xC3 COINBASE SLT 0xD ADD PUSH30 0xFBED68292525B26B17AA1365C6634252A8547222E164736F6C634300081C STOP CALLER ",
							"sourceMap": "769:34173:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203ee61fd4b6c341120d017dfbed68292525b26b17aa1365c6634252a8547222e164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0xE6 0x1F 0xD4 0xB6 0xC3 COINBASE SLT 0xD ADD PUSH30 0xFBED68292525B26B17AA1365C6634252A8547222E164736F6C634300081C STOP CALLER ",
							"sourceMap": "769:34173:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ee61fd4b6c341120d017dfbed68292525b26b17aa1365c6634252a8547222e164736f6c634300081c0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220dd322d550e46f4edbe6be694f8743eacd09ea60badb3bb7706ed5d886c0206a164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220dd322d550e46f4edbe6be694f8743eacd09ea60badb3bb7706ed5d886c0206a164736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD ORIGIN 0x2D SSTORE 0xE CHAINID DELEGATECALL 0xED 0xBE PUSH12 0xE694F8743EACD09EA60BADB3 0xBB PUSH24 0x6ED5D886C0206A164736F6C634300081C00330000000000 ",
							"sourceMap": "258:2354:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220dd322d550e46f4edbe6be694f8743eacd09ea60badb3bb7706ed5d886c0206a164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD ORIGIN 0x2D SSTORE 0xE CHAINID DELEGATECALL 0xED 0xBE PUSH12 0xE694F8743EACD09EA60BADB3 0xBB PUSH24 0x6ED5D886C0206A164736F6C634300081C00330000000000 ",
							"sourceMap": "258:2354:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"ternary(bool,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd322d550e46f4edbe6be694f8743eacd09ea60badb3bb7706ed5d886c0206a164736f6c634300081c0033",
									".code": [
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract-a9e49ce8b8.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-a9e49ce8b8.sol\":249:359  contract MyToken is ERC20, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"contract-a9e49ce8b8.sol\":294:357  constructor() ERC20(\"MyToken\", \"MTK\") ERC20Permit(\"MyToken\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1577:1629  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1616:1620  name */\n  dup1\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_11\n  swap2\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  tag_12\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_13\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup2\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  tag_12\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup2\n  mload\n  swap1\n  dup3\n  add\n  keccak256\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_14\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x40\n  dup1\n  mload\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x20\n  dup3\n  add\n    /* \"#utility.yul\":2914:2939   */\n  mstore\n    /* \"#utility.yul\":2955:2973   */\n  swap1\n  dup2\n  add\n    /* \"#utility.yul\":2948:2982   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":2998:3016   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":2991:3025   */\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"#utility.yul\":3041:3059   */\n  0x80\n  dup3\n  add\n    /* \"#utility.yul\":3034:3068   */\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"#utility.yul\":3084:3103   */\n  0xa0\n  dup3\n  add\n    /* \"#utility.yul\":3077:3138   */\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n  swap1\n    /* \"#utility.yul\":2886:2905   */\n  0xc0\n  add\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\ntag_14:\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xc0\n  mstore\n  pop\n    /* \"contract-a9e49ce8b8.sol\":249:359  contract MyToken is ERC20, ERC20Permit {... */\n  jump(tag_42)\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2887:3227  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2983:2994  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3032:3034  32 */\n  0x20\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3016:3021  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3010:3029  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3010:3034  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3006:3221  if (bytes(value).length < 32) {... */\n  iszero\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3057:3077  toShortString(value) */\n  tag_21\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3071:3076  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3057:3070  toShortString */\n  tag_22\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3057:3077  toShortString(value) */\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3050:3077  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_23)\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3006:3221  if (bytes(value).length < 32) {... */\ntag_20:\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3134:3139  store */\n  dup2\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3108:3154  StorageSlot.getStringSlot(store).value = value */\n  tag_26\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3149:3154  value */\n  dup5\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3134:3139  store */\n  dup3\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3108:3154  StorageSlot.getStringSlot(store).value = value */\n  tag_8\n  jump\t// in\ntag_26:\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3006:3221  if (bytes(value).length < 32) {... */\ntag_23:\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2887:3227  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_22:\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  0x00\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  shl(0xe0, 0x305a27a9)\n  dup2\n  mstore\n  0x04\n  add\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_31:\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_34\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup3\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n  swap4\n    /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_37:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_38:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_45:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_46:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_40:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_50:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_51:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_49:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_8:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_57\n  tag_37\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1555:1652   */\n  tag_58\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_59\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_38\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_40\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_62\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_62:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_53)\n    /* \"#utility.yul\":1744:2393   */\ntag_61:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_65:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_68:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":3149:3567   */\ntag_33:\n    /* \"#utility.yul\":3298:3300   */\n  0x20\n    /* \"#utility.yul\":3287:3296   */\n  dup2\n    /* \"#utility.yul\":3280:3301   */\n  mstore\n    /* \"#utility.yul\":3261:3265   */\n  0x00\n    /* \"#utility.yul\":3330:3336   */\n  dup3\n    /* \"#utility.yul\":3324:3337   */\n  mload\n    /* \"#utility.yul\":3373:3379   */\n  dup1\n    /* \"#utility.yul\":3368:3370   */\n  0x20\n    /* \"#utility.yul\":3357:3366   */\n  dup5\n    /* \"#utility.yul\":3353:3371   */\n  add\n    /* \"#utility.yul\":3346:3380   */\n  mstore\n    /* \"#utility.yul\":3432:3438   */\n  dup1\n    /* \"#utility.yul\":3427:3429   */\n  0x20\n    /* \"#utility.yul\":3419:3425   */\n  dup6\n    /* \"#utility.yul\":3415:3430   */\n  add\n    /* \"#utility.yul\":3410:3412   */\n  0x40\n    /* \"#utility.yul\":3399:3408   */\n  dup6\n    /* \"#utility.yul\":3395:3413   */\n  add\n    /* \"#utility.yul\":3389:3439   */\n  mcopy\n    /* \"#utility.yul\":3488:3489   */\n  0x00\n    /* \"#utility.yul\":3483:3485   */\n  0x40\n    /* \"#utility.yul\":3474:3480   */\n  dup3\n    /* \"#utility.yul\":3463:3472   */\n  dup6\n    /* \"#utility.yul\":3459:3481   */\n  add\n    /* \"#utility.yul\":3455:3486   */\n  add\n    /* \"#utility.yul\":3448:3490   */\n  mstore\n    /* \"#utility.yul\":3558:3560   */\n  0x40\n    /* \"#utility.yul\":3551:3553   */\n  0x1f\n    /* \"#utility.yul\":3547:3554   */\n  not\n    /* \"#utility.yul\":3542:3544   */\n  0x1f\n    /* \"#utility.yul\":3534:3540   */\n  dup4\n    /* \"#utility.yul\":3530:3545   */\n  add\n    /* \"#utility.yul\":3526:3555   */\n  and\n    /* \"#utility.yul\":3515:3524   */\n  dup5\n    /* \"#utility.yul\":3511:3556   */\n  add\n    /* \"#utility.yul\":3507:3561   */\n  add\n    /* \"#utility.yul\":3499:3561   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":3149:3567   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3869   */\ntag_35:\n    /* \"#utility.yul\":3690:3702   */\n  dup1\n  mload\n    /* \"#utility.yul\":3737:3741   */\n  0x20\n    /* \"#utility.yul\":3726:3742   */\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":3720:3743   */\n  mload\n  swap2\n    /* \"#utility.yul\":3690:3702   */\n  swap1\n    /* \"#utility.yul\":3755:3771   */\n  dup2\n  lt\n    /* \"#utility.yul\":3752:3863   */\n  iszero\n  tag_46\n  jumpi\n  not(0x00)\n    /* \"#utility.yul\":3829:3833   */\n  0x20\n    /* \"#utility.yul\":3825:3842   */\n  swap2\n  swap1\n  swap2\n  sub\n    /* \"#utility.yul\":3822:3823   */\n  0x03\n    /* \"#utility.yul\":3818:3843   */\n  shl\n    /* \"#utility.yul\":3814:3852   */\n  shl\n    /* \"#utility.yul\":3803:3853   */\n  and\n  swap2\n    /* \"#utility.yul\":3572:3869   */\n  swap1\n  pop\n  jump\t// out\ntag_42:\n    /* \"contract-a9e49ce8b8.sol\":249:359  contract MyToken is ERC20, ERC20Permit {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x46535caba61b96b9bbaced247f0433b8117f4099d037697e700f4bb93f70f0b6\")\n  0x00\n  assignImmutable(\"0x8faaad59c9ef375cca97d73dc56ec8d9d5b9b29b8d5089c1c4abb128f0dea112\")\n  0x00\n  assignImmutable(\"0x5c62bd4929e0460c337d8a16034b1b5732640cfc088393d346766a65365dd73f\")\n  0x00\n  assignImmutable(\"0xdc87b691b0302dee626bda07b9e9b084f7d5765b17a541a71826cc6c7a8bcd5b\")\n  0x00\n  assignImmutable(\"0x816de1cd0358a921f259ce8c96019a74b807f8eec9b8d7e7458da51476eb0863\")\n  0x00\n  assignImmutable(\"0xc076a490c87d079f2b5182f58b5ae631f8857071029de9ec890bad7ae4d2f907\")\n  0x00\n  assignImmutable(\"0xc9be7da8bed12c69017945c7fabae6d76cd58eb576cc6b3754054c2443fb3440\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract-a9e49ce8b8.sol\":249:359  contract MyToken is ERC20, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1181:1195   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1174:1196   */\n      iszero\n        /* \"#utility.yul\":1156:1197   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":1016:1203   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1354:1379   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":1911:1947   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1899:1901   */\n      0x20\n        /* \"#utility.yul\":1884:1902   */\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1769:1953   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2659:2771  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_28\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2409:2552  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_10:\n      tag_28\n      tag_51\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_11:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_20\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_62\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1683:2355  function permit(... */\n    tag_14:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_28\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_76\n      jump\t// in\n    tag_77:\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_79\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_78)\n    tag_79:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_80:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_80\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_84\n        /* \"@openzeppelin/contracts@5.1.0/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_85\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_81:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_89\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_90\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_91\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_91:\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2659:2771  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2718:2725  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2744:2764  _domainSeparatorV4() */\n      tag_95\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2744:2762  _domainSeparatorV4 */\n      tag_96\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2744:2764  _domainSeparatorV4() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2737:2764  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2659:2771  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2409:2552  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":624:638  _nonces[owner] */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2500:2507  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":624:638  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":624:631  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2526:2545  super.nonces(owner) */\n      tag_81\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_55:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_102\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_103\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_104\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_105\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      shl(0xf8, 0x0f)\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      swap12\n      swap4\n      swap11\n      pop\n      swap2\n      swap9\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n      swap8\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n      swap7\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      swap5\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_84\n        /* \"@openzeppelin/contracts@5.1.0/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1683:2355  function permit(... */\n    tag_68:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1904:1912  deadline */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1886:1901  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1886:1912  block.timestamp > deadline */\n      gt\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1882:1979  if (block.timestamp > deadline) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1935:1968  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      shl(0xe1, 0x313c8981)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1354:1379   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1935:1968  ERC2612ExpiredSignature(deadline) */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1882:1979  if (block.timestamp > deadline) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1989:2007  bytes32 structHash */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1024:1119  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2048:2053  owner */\n      dup9\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2055:2062  spender */\n      dup9\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2064:2069  value */\n      dup9\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2071:2087  _useNonce(owner) */\n      tag_122\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2081:2086  owner */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      and\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":819:826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":1121:1128  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":1121:1137  _nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      swap1\n        /* \"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2071:2087  _useNonce(owner) */\n    tag_122:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2020:2098  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":5551:5576   */\n      swap7\n      swap1\n      swap7\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5612:5644   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":5592:5610   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5585:5645   */\n      mstore\n        /* \"#utility.yul\":5681:5713   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5661:5679   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":5654:5714   */\n      mstore\n        /* \"#utility.yul\":5730:5748   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":5723:5757   */\n      mstore\n        /* \"#utility.yul\":5773:5792   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":5766:5801   */\n      mstore\n        /* \"#utility.yul\":5817:5836   */\n      0xc0\n      dup2\n      add\n        /* \"#utility.yul\":5810:5845   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":5523:5542   */\n      0xe0\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2020:2098  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2010:2099  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1989:2099  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2110:2122  bytes32 hash */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2125:2153  _hashTypedDataV4(structHash) */\n      tag_126\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2142:2152  structHash */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2125:2141  _hashTypedDataV4 */\n      tag_127\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2125:2153  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2110:2153  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2164:2178  address signer */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2181:2209  ECDSA.recover(hash, v, r, s) */\n      tag_128\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2195:2199  hash */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2201:2202  v */\n      dup8\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2204:2205  r */\n      dup8\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2207:2208  s */\n      dup8\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2181:2194  ECDSA.recover */\n      tag_129\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2181:2209  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2164:2209  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2233:2238  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2223:2238  signer != owner */\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2223:2229  signer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2223:2238  signer != owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2219:2307  if (signer != owner) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2261:2296  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      shl(0xe1, 0x25c00723)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6048:6080   */\n      dup1\n      dup4\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2261:2296  ERC2612InvalidSigner(signer, owner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6030:6081   */\n      mstore\n        /* \"#utility.yul\":6117:6149   */\n      dup12\n      and\n        /* \"#utility.yul\":6097:6115   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6090:6150   */\n      mstore\n        /* \"#utility.yul\":6003:6021   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2261:2296  ERC2612InvalidSigner(signer, owner) */\n      tag_121\n        /* \"#utility.yul\":5856:6156   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2219:2307  if (signer != owner) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2317:2348  _approve(owner, spender, value) */\n      tag_133\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2326:2331  owner */\n      dup11\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2333:2340  spender */\n      dup11\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2342:2347  value */\n      dup11\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2317:2325  _approve */\n      tag_85\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":2317:2348  _approve(owner, spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1872:2355  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":1683:2355  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_85:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_137\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_138\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6381:6413   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6363:6414   */\n      mstore\n        /* \"#utility.yul\":6430:6448   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6423:6457   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6473:6491   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6466:6500   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6336:6354   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_121\n        /* \"#utility.yul\":6161:6506   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_145\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_138\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6657:6708   */\n      mstore\n        /* \"#utility.yul\":6630:6648   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_121\n        /* \"#utility.yul\":6511:6714   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6657:6708   */\n      mstore\n        /* \"#utility.yul\":6630:6648   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_121\n        /* \"#utility.yul\":6511:6714   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_137\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_153\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0x816de1cd0358a921f259ce8c96019a74b807f8eec9b8d7e7458da51476eb0863\")\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0xc076a490c87d079f2b5182f58b5ae631f8857071029de9ec890bad7ae4d2f907\")\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_155:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0xc9be7da8bed12c69017945c7fabae6d76cd58eb576cc6b3754054c2443fb3440\")\n      swap1\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_95\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":7205:7230   */\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0xdc87b691b0302dee626bda07b9e9b084f7d5765b17a541a71826cc6c7a8bcd5b\")\n        /* \"#utility.yul\":7246:7264   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":7239:7273   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0x5c62bd4929e0460c337d8a16034b1b5732640cfc088393d346766a65365dd73f\")\n        /* \"#utility.yul\":7289:7307   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":7282:7316   */\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"#utility.yul\":7332:7350   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":7325:7359   */\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"#utility.yul\":7375:7394   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":7368:7429   */\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":7177:7196   */\n      0xc0\n      add\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_95\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0x8faaad59c9ef375cca97d73dc56ec8d9d5b9b29b8d5089c1c4abb128f0dea112\")\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_163\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_95\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0x46535caba61b96b9bbaced247f0433b8117f4099d037697e700f4bb93f70f0b6\")\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_163\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_81\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_169\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_96\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3501:3505  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3495:3506  mload(0x40) */\n      mload\n      shl(0xf0, 0x1901)\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3519:3542  mstore(ptr, hex\"19_01\") */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3571:3575  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3562:3576  add(ptr, 0x02) */\n      dup2\n      add\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3555:3594  mstore(add(ptr, 0x02), domainSeparator) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3623:3627  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3614:3628  add(ptr, 0x22) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3607:3641  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3679:3683  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3664:3684  keccak256(ptr, 0x42) */\n      swap1\n      keccak256\n      swap1\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":3326:3700  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6887:7147  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6972:6979  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6992:7009  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7011:7029  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7031:7047  bytes32 errorArg */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7051:7076  tryRecover(hash, v, r, s) */\n      tag_172\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7062:7066  hash */\n      dup9\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7068:7069  v */\n      dup9\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7071:7072  r */\n      dup9\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7074:7075  s */\n      dup9\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7051:7061  tryRecover */\n      tag_173\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7051:7076  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6991:7076  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7086:7114  _throwError(error, errorArg) */\n      tag_174\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7098:7103  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7105:7113  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7086:7097  _throwError */\n      tag_175\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7086:7114  _throwError(error, errorArg) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7131:7140  recovered */\n      swap1\n      swap7\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6887:7147  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6657:6708   */\n      mstore\n        /* \"#utility.yul\":6630:6648   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_121\n        /* \"#utility.yul\":6511:6714   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6657:6708   */\n      mstore\n        /* \"#utility.yul\":6630:6648   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_121\n        /* \"#utility.yul\":6511:6714   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_182\n      swap2\n        /* \"#utility.yul\":1354:1379   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n      swap1\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_187\n      swap1\n      pop\n      jump\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6381:6413   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6363:6414   */\n      mstore\n        /* \"#utility.yul\":6430:6448   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6423:6457   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6473:6491   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6466:6500   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6336:6354   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_121\n        /* \"#utility.yul\":6161:6506   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_191)\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_192\n      swap2\n        /* \"#utility.yul\":1354:1379   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n      swap1\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3358:3625  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3452:3465  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3481:3527  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      dup4\n      eq\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3477:3619  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3550:3565  toString(value) */\n      tag_198\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3559:3564  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3550:3558  toString */\n      tag_199\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3550:3565  toString(value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3543:3565  return toString(value) */\n      swap1\n      pop\n      jump(tag_81)\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3477:3619  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3603:3608  store */\n      dup2\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":3596:3608  return store */\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_76\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_76\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      jump(tag_81)\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_173:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":5329:5346  address recovered */\n      0x00\n      dup1\n      dup1\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6283:6349  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6270:6349  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6381:6382  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6385:6415  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6417:6418  s */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_207)\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6524:6538  address signer */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":7667:7692   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":7740:7744   */\n      0xff\n        /* \"#utility.yul\":7728:7745   */\n      dup10\n      and\n        /* \"#utility.yul\":7708:7726   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":7701:7746   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7762:7780   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":7755:7789   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":7805:7823   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":7798:7832   */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":7639:7658   */\n      0xa0\n      add\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n      tag_213\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6631:6632  0 */\n      0x00\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6635:6664  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6631:6632  0 */\n      dup3\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_207)\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6706:6712  signer */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":6714:6734  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_207:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_175:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7375:7395  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7366:7371  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_219\n      tag_217\n      jump\t// in\n    tag_219:\n      sub\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7471:7500  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7462:7467  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_225\n      tag_217\n      jump\t// in\n    tag_225:\n      sub\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7523:7546  ECDSAInvalidSignature() */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7567:7572  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_231\n      tag_217\n      jump\t// in\n    tag_231:\n      sub\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1354:1379   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      tag_121\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7710:7740  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7701:7706  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_238\n      jumpi\n      tag_238\n      tag_217\n      jump\t// in\n    tag_238:\n      sub\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1354:1379   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      tag_121\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2078:2456  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_242\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_243\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap2\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      swap1\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2363:2379  mstore(str, len) */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2408:2412  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2399:2413  add(str, 0x20) */\n      dup2\n      add\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2392:2420  mstore(add(str, 0x20), sstr) */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2363:2379  mstore(str, len) */\n      swap1\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2078:2456  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2528:2773  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2589:2596  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2661:2665  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2625:2665  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2688:2690  31 */\n      0x1f\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2679:2690  result > 31 */\n      dup2\n      gt\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2675:2744  if (result > 31) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":2713:2733  InvalidShortString() */\n      mload(0x40)\n      shl(0xe2, 0x2cd44ac3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:303   */\n    tag_249:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":177:183   */\n      dup1\n        /* \"#utility.yul\":170:174   */\n      0x20\n        /* \"#utility.yul\":163:168   */\n      dup5\n        /* \"#utility.yul\":159:175   */\n      add\n        /* \"#utility.yul\":152:156   */\n      0x20\n        /* \"#utility.yul\":147:150   */\n      dup7\n        /* \"#utility.yul\":143:157   */\n      add\n        /* \"#utility.yul\":137:184   */\n      mcopy\n        /* \"#utility.yul\":229:230   */\n      0x00\n        /* \"#utility.yul\":222:226   */\n      0x20\n        /* \"#utility.yul\":213:219   */\n      dup3\n        /* \"#utility.yul\":208:211   */\n      dup7\n        /* \"#utility.yul\":204:220   */\n      add\n        /* \"#utility.yul\":200:227   */\n      add\n        /* \"#utility.yul\":193:231   */\n      mstore\n        /* \"#utility.yul\":292:296   */\n      0x20\n        /* \"#utility.yul\":285:287   */\n      0x1f\n        /* \"#utility.yul\":281:288   */\n      not\n        /* \"#utility.yul\":276:278   */\n      0x1f\n        /* \"#utility.yul\":268:274   */\n      dup4\n        /* \"#utility.yul\":264:279   */\n      add\n        /* \"#utility.yul\":260:289   */\n      and\n        /* \"#utility.yul\":255:258   */\n      dup6\n        /* \"#utility.yul\":251:290   */\n      add\n        /* \"#utility.yul\":247:297   */\n      add\n        /* \"#utility.yul\":240:297   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":308:528   */\n    tag_21:\n        /* \"#utility.yul\":457:459   */\n      0x20\n        /* \"#utility.yul\":446:455   */\n      dup2\n        /* \"#utility.yul\":439:460   */\n      mstore\n        /* \"#utility.yul\":420:424   */\n      0x00\n        /* \"#utility.yul\":477:522   */\n      tag_254\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":507:516   */\n      dup4\n        /* \"#utility.yul\":503:521   */\n      add\n        /* \"#utility.yul\":495:501   */\n      dup5\n        /* \"#utility.yul\":477:522   */\n      tag_249\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":469:522   */\n      swap4\n        /* \"#utility.yul\":308:528   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":533:706   */\n    tag_250:\n        /* \"#utility.yul\":601:621   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":650:681   */\n      dup2\n      and\n        /* \"#utility.yul\":640:682   */\n      dup2\n      eq\n        /* \"#utility.yul\":630:700   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":696:697   */\n      0x00\n        /* \"#utility.yul\":693:694   */\n      0x00\n        /* \"#utility.yul\":686:698   */\n      revert\n        /* \"#utility.yul\":630:700   */\n    tag_256:\n        /* \"#utility.yul\":533:706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":711:1011   */\n    tag_24:\n        /* \"#utility.yul\":779:785   */\n      0x00\n        /* \"#utility.yul\":787:793   */\n      0x00\n        /* \"#utility.yul\":840:842   */\n      0x40\n        /* \"#utility.yul\":828:837   */\n      dup4\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":815:838   */\n      sub\n        /* \"#utility.yul\":811:843   */\n      slt\n        /* \"#utility.yul\":808:860   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":856:857   */\n      0x00\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":846:858   */\n      revert\n        /* \"#utility.yul\":808:860   */\n    tag_258:\n        /* \"#utility.yul\":879:908   */\n      tag_259\n        /* \"#utility.yul\":898:907   */\n      dup4\n        /* \"#utility.yul\":879:908   */\n      tag_250\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":869:908   */\n      swap5\n        /* \"#utility.yul\":977:979   */\n      0x20\n        /* \"#utility.yul\":962:980   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":949:981   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":711:1011   */\n      jump\t// out\n        /* \"#utility.yul\":1390:1764   */\n    tag_34:\n        /* \"#utility.yul\":1467:1473   */\n      0x00\n        /* \"#utility.yul\":1475:1481   */\n      0x00\n        /* \"#utility.yul\":1483:1489   */\n      0x00\n        /* \"#utility.yul\":1536:1538   */\n      0x60\n        /* \"#utility.yul\":1524:1533   */\n      dup5\n        /* \"#utility.yul\":1515:1522   */\n      dup7\n        /* \"#utility.yul\":1511:1534   */\n      sub\n        /* \"#utility.yul\":1507:1539   */\n      slt\n        /* \"#utility.yul\":1504:1556   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      0x00\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1504:1556   */\n    tag_263:\n        /* \"#utility.yul\":1575:1604   */\n      tag_264\n        /* \"#utility.yul\":1594:1603   */\n      dup5\n        /* \"#utility.yul\":1575:1604   */\n      tag_250\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1565:1604   */\n      swap3\n      pop\n        /* \"#utility.yul\":1623:1661   */\n      tag_265\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1646:1655   */\n      dup6\n        /* \"#utility.yul\":1642:1660   */\n      add\n        /* \"#utility.yul\":1623:1661   */\n      tag_250\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1390:1764   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1613:1661   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1730:1732   */\n      0x40\n        /* \"#utility.yul\":1715:1733   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1702:1734   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1390:1764   */\n      jump\t// out\n        /* \"#utility.yul\":2140:2326   */\n    tag_47:\n        /* \"#utility.yul\":2199:2205   */\n      0x00\n        /* \"#utility.yul\":2252:2254   */\n      0x20\n        /* \"#utility.yul\":2240:2249   */\n      dup3\n        /* \"#utility.yul\":2231:2238   */\n      dup5\n        /* \"#utility.yul\":2227:2250   */\n      sub\n        /* \"#utility.yul\":2223:2255   */\n      slt\n        /* \"#utility.yul\":2220:2272   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2265:2266   */\n      0x00\n        /* \"#utility.yul\":2258:2270   */\n      revert\n        /* \"#utility.yul\":2220:2272   */\n    tag_269:\n        /* \"#utility.yul\":2291:2320   */\n      tag_254\n        /* \"#utility.yul\":2310:2319   */\n      dup3\n        /* \"#utility.yul\":2291:2320   */\n      tag_250\n      jump\t// in\n        /* \"#utility.yul\":2331:3569   */\n    tag_57:\n        /* \"#utility.yul\":2737:2740   */\n      0xff\n        /* \"#utility.yul\":2732:2735   */\n      0xf8\n        /* \"#utility.yul\":2728:2741   */\n      shl\n        /* \"#utility.yul\":2720:2726   */\n      dup9\n        /* \"#utility.yul\":2716:2742   */\n      and\n        /* \"#utility.yul\":2705:2714   */\n      dup2\n        /* \"#utility.yul\":2698:2743   */\n      mstore\n        /* \"#utility.yul\":2779:2782   */\n      0xe0\n        /* \"#utility.yul\":2774:2776   */\n      0x20\n        /* \"#utility.yul\":2763:2772   */\n      dup3\n        /* \"#utility.yul\":2759:2777   */\n      add\n        /* \"#utility.yul\":2752:2783   */\n      mstore\n        /* \"#utility.yul\":2679:2683   */\n      0x00\n        /* \"#utility.yul\":2806:2852   */\n      tag_272\n        /* \"#utility.yul\":2847:2850   */\n      0xe0\n        /* \"#utility.yul\":2836:2845   */\n      dup4\n        /* \"#utility.yul\":2832:2851   */\n      add\n        /* \"#utility.yul\":2824:2830   */\n      dup10\n        /* \"#utility.yul\":2806:2852   */\n      tag_249\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2900:2909   */\n      dup3\n        /* \"#utility.yul\":2892:2898   */\n      dup2\n        /* \"#utility.yul\":2888:2910   */\n      sub\n        /* \"#utility.yul\":2883:2885   */\n      0x40\n        /* \"#utility.yul\":2872:2881   */\n      dup5\n        /* \"#utility.yul\":2868:2886   */\n      add\n        /* \"#utility.yul\":2861:2911   */\n      mstore\n        /* \"#utility.yul\":2934:2967   */\n      tag_273\n        /* \"#utility.yul\":2960:2966   */\n      dup2\n        /* \"#utility.yul\":2952:2958   */\n      dup10\n        /* \"#utility.yul\":2934:2967   */\n      tag_249\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2998:3000   */\n      0x60\n        /* \"#utility.yul\":2983:3001   */\n      dup5\n      add\n        /* \"#utility.yul\":2976:3010   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3047:3079   */\n      dup8\n      and\n        /* \"#utility.yul\":3041:3044   */\n      0x80\n        /* \"#utility.yul\":3026:3045   */\n      dup6\n      add\n        /* \"#utility.yul\":3019:3080   */\n      mstore\n        /* \"#utility.yul\":3067:3070   */\n      0xa0\n        /* \"#utility.yul\":3096:3115   */\n      dup5\n      add\n        /* \"#utility.yul\":3089:3124   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":3161:3183   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":3155:3158   */\n      0xc0\n        /* \"#utility.yul\":3140:3159   */\n      dup6\n      add\n        /* \"#utility.yul\":3133:3184   */\n      mstore\n        /* \"#utility.yul\":3233:3246   */\n      dup5\n      mload\n        /* \"#utility.yul\":3255:3277   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3305:3307   */\n      0x20\n        /* \"#utility.yul\":3331:3346   */\n      dup1\n      dup8\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":3293:3308   */\n      swap1\n      swap2\n      add\n      swap1\n      0x00\n        /* \"#utility.yul\":3374:3543   */\n    tag_274:\n        /* \"#utility.yul\":3388:3394   */\n      dup2\n        /* \"#utility.yul\":3385:3386   */\n      dup2\n        /* \"#utility.yul\":3382:3395   */\n      lt\n        /* \"#utility.yul\":3374:3543   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3449:3462   */\n      dup4\n      mload\n        /* \"#utility.yul\":3437:3463   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3492:3494   */\n      0x20\n        /* \"#utility.yul\":3518:3533   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":3483:3495   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":3410:3411   */\n      0x01\n        /* \"#utility.yul\":3403:3412   */\n      add\n        /* \"#utility.yul\":3374:3543   */\n      jump(tag_274)\n    tag_276:\n      pop\n        /* \"#utility.yul\":3560:3563   */\n      swap1\n      swap12\n        /* \"#utility.yul\":2331:3569   */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3574:4477   */\n    tag_67:\n        /* \"#utility.yul\":3685:3691   */\n      0x00\n        /* \"#utility.yul\":3693:3699   */\n      0x00\n        /* \"#utility.yul\":3701:3707   */\n      0x00\n        /* \"#utility.yul\":3709:3715   */\n      0x00\n        /* \"#utility.yul\":3717:3723   */\n      0x00\n        /* \"#utility.yul\":3725:3731   */\n      0x00\n        /* \"#utility.yul\":3733:3739   */\n      0x00\n        /* \"#utility.yul\":3786:3789   */\n      0xe0\n        /* \"#utility.yul\":3774:3783   */\n      dup9\n        /* \"#utility.yul\":3765:3772   */\n      dup11\n        /* \"#utility.yul\":3761:3784   */\n      sub\n        /* \"#utility.yul\":3757:3790   */\n      slt\n        /* \"#utility.yul\":3754:3807   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3803:3804   */\n      0x00\n        /* \"#utility.yul\":3800:3801   */\n      0x00\n        /* \"#utility.yul\":3793:3805   */\n      revert\n        /* \"#utility.yul\":3754:3807   */\n    tag_278:\n        /* \"#utility.yul\":3826:3855   */\n      tag_279\n        /* \"#utility.yul\":3845:3854   */\n      dup9\n        /* \"#utility.yul\":3826:3855   */\n      tag_250\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3816:3855   */\n      swap7\n      pop\n        /* \"#utility.yul\":3874:3912   */\n      tag_280\n        /* \"#utility.yul\":3908:3910   */\n      0x20\n        /* \"#utility.yul\":3897:3906   */\n      dup10\n        /* \"#utility.yul\":3893:3911   */\n      add\n        /* \"#utility.yul\":3874:3912   */\n      tag_250\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3864:3912   */\n      swap6\n      pop\n        /* \"#utility.yul\":3981:3983   */\n      0x40\n        /* \"#utility.yul\":3966:3984   */\n      dup9\n      add\n        /* \"#utility.yul\":3953:3985   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4082:4084   */\n      0x60\n        /* \"#utility.yul\":4067:4085   */\n      dup9\n      add\n        /* \"#utility.yul\":4054:4086   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4164:4167   */\n      0x80\n        /* \"#utility.yul\":4149:4168   */\n      dup9\n      add\n        /* \"#utility.yul\":4136:4169   */\n      calldataload\n        /* \"#utility.yul\":4213:4217   */\n      0xff\n        /* \"#utility.yul\":4200:4218   */\n      dup2\n      and\n        /* \"#utility.yul\":4188:4219   */\n      dup2\n      eq\n        /* \"#utility.yul\":4178:4237   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4233:4234   */\n      0x00\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4223:4235   */\n      revert\n        /* \"#utility.yul\":4178:4237   */\n    tag_281:\n        /* \"#utility.yul\":3574:4477   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":4256:4263   */\n      swap5\n        /* \"#utility.yul\":4336:4339   */\n      0xa0\n        /* \"#utility.yul\":4321:4340   */\n      dup5\n      add\n        /* \"#utility.yul\":4308:4341   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4440:4443   */\n      0xc0\n        /* \"#utility.yul\":4425:4444   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4412:4445   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":3574:4477   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4482:4742   */\n    tag_71:\n        /* \"#utility.yul\":4550:4556   */\n      0x00\n        /* \"#utility.yul\":4558:4564   */\n      0x00\n        /* \"#utility.yul\":4611:4613   */\n      0x40\n        /* \"#utility.yul\":4599:4608   */\n      dup4\n        /* \"#utility.yul\":4590:4597   */\n      dup6\n        /* \"#utility.yul\":4586:4609   */\n      sub\n        /* \"#utility.yul\":4582:4614   */\n      slt\n        /* \"#utility.yul\":4579:4631   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":4627:4628   */\n      0x00\n        /* \"#utility.yul\":4624:4625   */\n      0x00\n        /* \"#utility.yul\":4617:4629   */\n      revert\n        /* \"#utility.yul\":4579:4631   */\n    tag_283:\n        /* \"#utility.yul\":4650:4679   */\n      tag_284\n        /* \"#utility.yul\":4669:4678   */\n      dup4\n        /* \"#utility.yul\":4650:4679   */\n      tag_250\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4640:4679   */\n      swap2\n      pop\n        /* \"#utility.yul\":4698:4736   */\n      tag_285\n        /* \"#utility.yul\":4732:4734   */\n      0x20\n        /* \"#utility.yul\":4721:4730   */\n      dup5\n        /* \"#utility.yul\":4717:4735   */\n      add\n        /* \"#utility.yul\":4698:4736   */\n      tag_250\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4688:4736   */\n      swap1\n      pop\n        /* \"#utility.yul\":4482:4742   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4747:5127   */\n    tag_76:\n        /* \"#utility.yul\":4826:4827   */\n      0x01\n        /* \"#utility.yul\":4822:4834   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4869:4881   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4890:4951   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":4944:4948   */\n      0x7f\n        /* \"#utility.yul\":4936:4942   */\n      dup3\n        /* \"#utility.yul\":4932:4949   */\n      and\n        /* \"#utility.yul\":4922:4949   */\n      swap2\n      pop\n        /* \"#utility.yul\":4890:4951   */\n    tag_287:\n        /* \"#utility.yul\":4997:4999   */\n      0x20\n        /* \"#utility.yul\":4989:4995   */\n      dup3\n        /* \"#utility.yul\":4986:5000   */\n      lt\n        /* \"#utility.yul\":4966:4984   */\n      dup2\n        /* \"#utility.yul\":4963:5001   */\n      sub\n        /* \"#utility.yul\":4960:5121   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5043:5053   */\n      0x4e487b71\n        /* \"#utility.yul\":5038:5041   */\n      0xe0\n        /* \"#utility.yul\":5034:5054   */\n      shl\n        /* \"#utility.yul\":5031:5032   */\n      0x00\n        /* \"#utility.yul\":5024:5055   */\n      mstore\n        /* \"#utility.yul\":5078:5082   */\n      0x22\n        /* \"#utility.yul\":5075:5076   */\n      0x04\n        /* \"#utility.yul\":5068:5083   */\n      mstore\n        /* \"#utility.yul\":5106:5110   */\n      0x24\n        /* \"#utility.yul\":5103:5104   */\n      0x00\n        /* \"#utility.yul\":5096:5111   */\n      revert\n        /* \"#utility.yul\":4960:5121   */\n    tag_288:\n      pop\n        /* \"#utility.yul\":4747:5127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:6941   */\n    tag_186:\n        /* \"#utility.yul\":6784:6793   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6805:6815   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6802:6935   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":6857:6867   */\n      0x4e487b71\n        /* \"#utility.yul\":6852:6855   */\n      0xe0\n        /* \"#utility.yul\":6848:6868   */\n      shl\n        /* \"#utility.yul\":6845:6846   */\n      0x00\n        /* \"#utility.yul\":6838:6869   */\n      mstore\n        /* \"#utility.yul\":6892:6896   */\n      0x11\n        /* \"#utility.yul\":6889:6890   */\n      0x04\n        /* \"#utility.yul\":6882:6897   */\n      mstore\n        /* \"#utility.yul\":6920:6924   */\n      0x24\n        /* \"#utility.yul\":6917:6918   */\n      0x00\n        /* \"#utility.yul\":6910:6925   */\n      revert\n        /* \"#utility.yul\":7843:7970   */\n    tag_217:\n        /* \"#utility.yul\":7904:7914   */\n      0x4e487b71\n        /* \"#utility.yul\":7899:7902   */\n      0xe0\n        /* \"#utility.yul\":7895:7915   */\n      shl\n        /* \"#utility.yul\":7892:7893   */\n      0x00\n        /* \"#utility.yul\":7885:7916   */\n      mstore\n        /* \"#utility.yul\":7935:7939   */\n      0x21\n        /* \"#utility.yul\":7932:7933   */\n      0x04\n        /* \"#utility.yul\":7925:7940   */\n      mstore\n        /* \"#utility.yul\":7959:7963   */\n      0x24\n        /* \"#utility.yul\":7956:7957   */\n      0x00\n        /* \"#utility.yul\":7949:7964   */\n      revert\n\n    auxdata: 0xa2646970667358221220dcec420d9f7c50382e2b77a3c31c3372d4d7ca63b0c3f541ccff297131ef5c7864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2226": {
									"entryPoint": null,
									"id": 2226,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_5964": {
									"entryPoint": null,
									"id": 5964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_803": {
									"entryPoint": null,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2273": {
									"entryPoint": null,
									"id": 2273,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_1438": {
									"entryPoint": null,
									"id": 1438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1278": {
									"entryPoint": 350,
									"id": 1278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_1180": {
									"entryPoint": 400,
									"id": 1180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3871:20",
										"nodeType": "YulBlock",
										"src": "0:3871:20",
										"statements": [
											{
												"nativeSrc": "6:3:20",
												"nodeType": "YulBlock",
												"src": "6:3:20",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:20",
													"nodeType": "YulBlock",
													"src": "46:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:20",
																		"nodeType": "YulLiteral",
																		"src": "63:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:20",
																				"nodeType": "YulLiteral",
																				"src": "70:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:20",
																				"nodeType": "YulLiteral",
																				"src": "75:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:20"
																		},
																		"nativeSrc": "66:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:20"
																},
																"nativeSrc": "56:31:20",
																"nodeType": "YulFunctionCall",
																"src": "56:31:20"
															},
															"nativeSrc": "56:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:20",
																		"nodeType": "YulLiteral",
																		"src": "103:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:20",
																		"nodeType": "YulLiteral",
																		"src": "106:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:20"
																},
																"nativeSrc": "96:15:20",
																"nodeType": "YulFunctionCall",
																"src": "96:15:20"
															},
															"nativeSrc": "96:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:20",
																		"nodeType": "YulLiteral",
																		"src": "127:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:20",
																		"nodeType": "YulLiteral",
																		"src": "130:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:20"
																},
																"nativeSrc": "120:15:20",
																"nodeType": "YulFunctionCall",
																"src": "120:15:20"
															},
															"nativeSrc": "120:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:20",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:20"
											},
											{
												"body": {
													"nativeSrc": "201:325:20",
													"nodeType": "YulBlock",
													"src": "201:325:20",
													"statements": [
														{
															"nativeSrc": "211:22:20",
															"nodeType": "YulAssignment",
															"src": "211:22:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:20",
																		"nodeType": "YulLiteral",
																		"src": "225:1:20",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:20"
																},
																"nativeSrc": "221:12:20",
																"nodeType": "YulFunctionCall",
																"src": "221:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:20"
																}
															]
														},
														{
															"nativeSrc": "242:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:20",
																		"nodeType": "YulLiteral",
																		"src": "278:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:20"
																},
																"nativeSrc": "268:12:20",
																"nodeType": "YulFunctionCall",
																"src": "268:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:20",
																	"nodeType": "YulTypedName",
																	"src": "246:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:20",
																"nodeType": "YulBlock",
																"src": "319:31:20",
																"statements": [
																	{
																		"nativeSrc": "321:27:20",
																		"nodeType": "YulAssignment",
																		"src": "321:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:20",
																					"nodeType": "YulLiteral",
																					"src": "343:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:20"
																			},
																			"nativeSrc": "331:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:20"
																},
																"nativeSrc": "292:26:20",
																"nodeType": "YulFunctionCall",
																"src": "292:26:20"
															},
															"nativeSrc": "289:61:20",
															"nodeType": "YulIf",
															"src": "289:61:20"
														},
														{
															"body": {
																"nativeSrc": "409:111:20",
																"nodeType": "YulBlock",
																"src": "409:111:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:20",
																					"nodeType": "YulLiteral",
																					"src": "430:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:20",
																							"nodeType": "YulLiteral",
																							"src": "437:3:20",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:20",
																							"nodeType": "YulLiteral",
																							"src": "442:10:20",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:20"
																					},
																					"nativeSrc": "433:20:20",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:20"
																			},
																			"nativeSrc": "423:31:20",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:20"
																		},
																		"nativeSrc": "423:31:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:20",
																					"nodeType": "YulLiteral",
																					"src": "474:1:20",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:20",
																					"nodeType": "YulLiteral",
																					"src": "477:4:20",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:20"
																			},
																			"nativeSrc": "467:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:20"
																		},
																		"nativeSrc": "467:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:20",
																					"nodeType": "YulLiteral",
																					"src": "502:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:20",
																					"nodeType": "YulLiteral",
																					"src": "505:4:20",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:20"
																			},
																			"nativeSrc": "495:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:20"
																		},
																		"nativeSrc": "495:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:20",
																				"nodeType": "YulLiteral",
																				"src": "396:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:20"
																		},
																		"nativeSrc": "385:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:20"
																},
																"nativeSrc": "362:38:20",
																"nodeType": "YulFunctionCall",
																"src": "362:38:20"
															},
															"nativeSrc": "359:161:20",
															"nodeType": "YulIf",
															"src": "359:161:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:20",
														"nodeType": "YulTypedName",
														"src": "181:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:20",
														"nodeType": "YulTypedName",
														"src": "190:6:20",
														"type": ""
													}
												],
												"src": "146:380:20"
											},
											{
												"body": {
													"nativeSrc": "587:65:20",
													"nodeType": "YulBlock",
													"src": "587:65:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:20",
																		"nodeType": "YulLiteral",
																		"src": "604:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:20"
																},
																"nativeSrc": "597:14:20",
																"nodeType": "YulFunctionCall",
																"src": "597:14:20"
															},
															"nativeSrc": "597:14:20",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:20"
														},
														{
															"nativeSrc": "620:26:20",
															"nodeType": "YulAssignment",
															"src": "620:26:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:20",
																		"nodeType": "YulLiteral",
																		"src": "638:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:20",
																		"nodeType": "YulLiteral",
																		"src": "641:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:20"
																},
																"nativeSrc": "628:18:20",
																"nodeType": "YulFunctionCall",
																"src": "628:18:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:20",
														"nodeType": "YulTypedName",
														"src": "570:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:20",
														"nodeType": "YulTypedName",
														"src": "578:4:20",
														"type": ""
													}
												],
												"src": "531:121:20"
											},
											{
												"body": {
													"nativeSrc": "738:437:20",
													"nodeType": "YulBlock",
													"src": "738:437:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:20",
																"nodeType": "YulBlock",
																"src": "771:398:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:20",
																					"nodeType": "YulLiteral",
																					"src": "792:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:20"
																			},
																			"nativeSrc": "785:16:20",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:20"
																		},
																		"nativeSrc": "785:16:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:20"
																	},
																	{
																		"nativeSrc": "814:30:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:20",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:20",
																					"nodeType": "YulLiteral",
																					"src": "836:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:20",
																					"nodeType": "YulLiteral",
																					"src": "839:4:20",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:20"
																			},
																			"nativeSrc": "826:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:20"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:20",
																				"nodeType": "YulTypedName",
																				"src": "818:4:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:20"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:20",
																							"nodeType": "YulLiteral",
																							"src": "890:1:20",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:20",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:20"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:20",
																									"nodeType": "YulLiteral",
																									"src": "909:2:20",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:20"
																							},
																							"nativeSrc": "893:19:20",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:20"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:20"
																					},
																					"nativeSrc": "886:27:20",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:20"
																			},
																			"nativeSrc": "876:38:20",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:20"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:20",
																				"nodeType": "YulTypedName",
																				"src": "861:11:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:20",
																			"nodeType": "YulBlock",
																			"src": "951:23:20",
																			"statements": [
																				{
																					"nativeSrc": "953:19:20",
																					"nodeType": "YulAssignment",
																					"src": "953:19:20",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:20"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:20",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:20"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:20",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:20",
																					"nodeType": "YulLiteral",
																					"src": "945:4:20",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:20"
																			},
																			"nativeSrc": "930:20:20",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:20"
																		},
																		"nativeSrc": "927:47:20",
																		"nodeType": "YulIf",
																		"src": "927:47:20"
																	},
																	{
																		"nativeSrc": "987:41:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:20"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:20",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:20",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:20"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:20",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:20",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:20"
																							},
																							"nativeSrc": "1014:12:20",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:20"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:20"
																					},
																					"nativeSrc": "1007:20:20",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:20"
																			},
																			"nativeSrc": "997:31:20",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:20",
																				"nodeType": "YulTypedName",
																				"src": "991:2:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:20",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:20",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:20"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:20",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:20",
																			"nodeType": "YulBlock",
																			"src": "1139:20:20",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:20",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:20",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:20",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:20"
																						},
																						"nativeSrc": "1141:16:20",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:20"
																					},
																					"nativeSrc": "1141:16:20",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:20"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:20"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:20"
																			},
																			"nativeSrc": "1086:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:20"
																		},
																		"nativeSrc": "1078:81:20",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:20",
																			"nodeType": "YulBlock",
																			"src": "1100:26:20",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:20",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:20",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:20",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:20",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:20"
																						},
																						"nativeSrc": "1111:13:20",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:20"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:20",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:20"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:20",
																			"nodeType": "YulBlock",
																			"src": "1082:3:20",
																			"statements": []
																		},
																		"src": "1078:81:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:20",
																		"nodeType": "YulLiteral",
																		"src": "759:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:20"
																},
																"nativeSrc": "751:11:20",
																"nodeType": "YulFunctionCall",
																"src": "751:11:20"
															},
															"nativeSrc": "748:421:20",
															"nodeType": "YulIf",
															"src": "748:421:20"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:20",
														"nodeType": "YulTypedName",
														"src": "710:5:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:20",
														"nodeType": "YulTypedName",
														"src": "717:3:20",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:20",
														"nodeType": "YulTypedName",
														"src": "722:10:20",
														"type": ""
													}
												],
												"src": "657:518:20"
											},
											{
												"body": {
													"nativeSrc": "1265:81:20",
													"nodeType": "YulBlock",
													"src": "1265:81:20",
													"statements": [
														{
															"nativeSrc": "1275:65:20",
															"nodeType": "YulAssignment",
															"src": "1275:65:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:20",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:20",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:20"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:20"
																								},
																								"nativeSrc": "1304:11:20",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:20"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:20",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:20",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:20"
																								},
																								"nativeSrc": "1317:6:20",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:20"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:20"
																						},
																						"nativeSrc": "1300:24:20",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:20"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:20"
																				},
																				"nativeSrc": "1296:29:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:20"
																		},
																		"nativeSrc": "1286:40:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:20",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:20"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:20"
																		},
																		"nativeSrc": "1328:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:20"
																},
																"nativeSrc": "1283:57:20",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:20"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:20"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:20",
														"nodeType": "YulTypedName",
														"src": "1242:4:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:20",
														"nodeType": "YulTypedName",
														"src": "1248:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:20",
														"nodeType": "YulTypedName",
														"src": "1256:4:20",
														"type": ""
													}
												],
												"src": "1180:166:20"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:20",
													"nodeType": "YulBlock",
													"src": "1447:1203:20",
													"statements": [
														{
															"nativeSrc": "1457:24:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:20",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:20"
																},
																"nativeSrc": "1471:10:20",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:20"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:20",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:20",
																"nodeType": "YulBlock",
																"src": "1524:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:20"
																			},
																			"nativeSrc": "1526:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:20"
																		},
																		"nativeSrc": "1526:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:20",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:20",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:20",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:20"
																				},
																				"nativeSrc": "1508:10:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:20",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:20"
																		},
																		"nativeSrc": "1504:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:20"
																},
																"nativeSrc": "1493:30:20",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:20"
															},
															"nativeSrc": "1490:56:20",
															"nodeType": "YulIf",
															"src": "1490:56:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:20"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:20"
																				},
																				"nativeSrc": "1631:11:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:20"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:20",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:20"
																		},
																		"nativeSrc": "1605:38:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:20"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:20"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:20"
																},
																"nativeSrc": "1555:97:20",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:20"
															},
															"nativeSrc": "1555:97:20",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:20"
														},
														{
															"nativeSrc": "1661:18:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:20",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:20",
																"nodeType": "YulLiteral",
																"src": "1678:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:20",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:20",
															"nodeType": "YulAssignment",
															"src": "1688:17:20",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:20",
																"nodeType": "YulLiteral",
																"src": "1701:4:20",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:20"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:20",
																		"nodeType": "YulBlock",
																		"src": "1751:642:20",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:20"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:20",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:20",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:20"
																							},
																							"nativeSrc": "1792:7:20",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:20"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:20"
																					},
																					"nativeSrc": "1780:20:20",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:20"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:20",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:20"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:20",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:20"
																					},
																					"nativeSrc": "1827:35:20",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:20"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:20",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:20",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:20",
																					"nodeType": "YulBlock",
																					"src": "1955:165:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:20",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:20"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:20",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:20"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:20"
																												},
																												"nativeSrc": "1994:19:20",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:20"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:20",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:20"
																										},
																										"nativeSrc": "1988:26:20",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:20"
																								},
																								"nativeSrc": "1973:42:20",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:20"
																							},
																							"nativeSrc": "1973:42:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:20"
																						},
																						{
																							"nativeSrc": "2032:24:20",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:20",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:20"
																								},
																								"nativeSrc": "2042:14:20",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:20"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:20"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:20",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:20",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:20",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:20",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:20"
																								},
																								"nativeSrc": "2086:20:20",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:20"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:20",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:20"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:20"
																					},
																					"nativeSrc": "1906:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:20"
																				},
																				"nativeSrc": "1898:222:20",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:20",
																					"nodeType": "YulBlock",
																					"src": "1921:21:20",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:20",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:20",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:20",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:20",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:20"
																								},
																								"nativeSrc": "1928:12:20",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:20"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:20"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:20",
																					"nodeType": "YulBlock",
																					"src": "1902:3:20",
																					"statements": []
																				},
																				"src": "1898:222:20"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:20",
																					"nodeType": "YulBlock",
																					"src": "2168:166:20",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:20",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:20"
																										},
																										"nativeSrc": "2209:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:20"
																								},
																								"nativeSrc": "2203:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:20"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:20",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:20",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:20"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:20",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:20",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:20",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:20"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:20",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:20"
																																		},
																																		"nativeSrc": "2288:14:20",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:20"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:20",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:20",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:20",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:20"
																																},
																																"nativeSrc": "2284:24:20",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:20"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:20",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:20",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:20",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:20"
																																},
																																"nativeSrc": "2310:6:20",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:20"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:20",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:20"
																														},
																														"nativeSrc": "2280:37:20",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:20"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:20"
																												},
																												"nativeSrc": "2276:42:20",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:20"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:20"
																										},
																										"nativeSrc": "2261:58:20",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:20"
																								},
																								"nativeSrc": "2246:74:20",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:20"
																							},
																							"nativeSrc": "2246:74:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:20"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:20"
																					},
																					"nativeSrc": "2136:19:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:20"
																				},
																				"nativeSrc": "2133:201:20",
																				"nodeType": "YulIf",
																				"src": "2133:201:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:20",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:20",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:20"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:20"
																									},
																									"nativeSrc": "2364:14:20",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:20"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:20",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:20",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:20"
																							},
																							"nativeSrc": "2360:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:20"
																					},
																					"nativeSrc": "2347:36:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:20"
																				},
																				"nativeSrc": "2347:36:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:20"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:20",
																	"nodeType": "YulCase",
																	"src": "1744:649:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:20",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:20",
																		"nodeType": "YulBlock",
																		"src": "2410:234:20",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:20",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:20",
																					"nodeType": "YulBlock",
																					"src": "2473:67:20",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:20",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:20"
																										},
																										"nativeSrc": "2506:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:20"
																								},
																								"nativeSrc": "2500:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:20"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:20"
																				},
																				"nativeSrc": "2451:89:20",
																				"nodeType": "YulIf",
																				"src": "2451:89:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:20"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:20"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:20",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:20"
																							},
																							"nativeSrc": "2566:67:20",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:20"
																					},
																					"nativeSrc": "2553:81:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:20"
																				},
																				"nativeSrc": "2553:81:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:20"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:20",
																	"nodeType": "YulCase",
																	"src": "2402:242:20",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:20"
																},
																"nativeSrc": "1721:14:20",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:20"
															},
															"nativeSrc": "1714:930:20",
															"nodeType": "YulSwitch",
															"src": "1714:930:20"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:20",
														"nodeType": "YulTypedName",
														"src": "1432:4:20",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:20",
														"nodeType": "YulTypedName",
														"src": "1438:3:20",
														"type": ""
													}
												],
												"src": "1351:1299:20"
											},
											{
												"body": {
													"nativeSrc": "2868:276:20",
													"nodeType": "YulBlock",
													"src": "2868:276:20",
													"statements": [
														{
															"nativeSrc": "2878:27:20",
															"nodeType": "YulAssignment",
															"src": "2878:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2890:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2890:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2901:3:20",
																		"nodeType": "YulLiteral",
																		"src": "2901:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2886:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2886:3:20"
																},
																"nativeSrc": "2886:19:20",
																"nodeType": "YulFunctionCall",
																"src": "2886:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2878:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2878:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2921:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2921:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2932:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2932:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2914:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2914:6:20"
																},
																"nativeSrc": "2914:25:20",
																"nodeType": "YulFunctionCall",
																"src": "2914:25:20"
															},
															"nativeSrc": "2914:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "2914:25:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2959:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2959:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2970:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2970:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2955:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:20"
																		},
																		"nativeSrc": "2955:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2955:18:20"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2975:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2975:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2948:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:20"
																},
																"nativeSrc": "2948:34:20",
																"nodeType": "YulFunctionCall",
																"src": "2948:34:20"
															},
															"nativeSrc": "2948:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "2948:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3002:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3002:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3013:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3013:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2998:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2998:3:20"
																		},
																		"nativeSrc": "2998:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2998:18:20"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3018:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3018:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2991:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:20"
																},
																"nativeSrc": "2991:34:20",
																"nodeType": "YulFunctionCall",
																"src": "2991:34:20"
															},
															"nativeSrc": "2991:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "2991:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3045:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3045:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3056:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3056:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3041:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3041:3:20"
																		},
																		"nativeSrc": "3041:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3041:18:20"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3061:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3034:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:20"
																},
																"nativeSrc": "3034:34:20",
																"nodeType": "YulFunctionCall",
																"src": "3034:34:20"
															},
															"nativeSrc": "3034:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "3034:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3088:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3088:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3099:3:20",
																				"nodeType": "YulLiteral",
																				"src": "3099:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3084:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3084:3:20"
																		},
																		"nativeSrc": "3084:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3084:19:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "3109:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3125:3:20",
																								"nodeType": "YulLiteral",
																								"src": "3125:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3130:1:20",
																								"nodeType": "YulLiteral",
																								"src": "3130:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3121:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "3121:3:20"
																						},
																						"nativeSrc": "3121:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "3121:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3134:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3134:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3117:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3117:3:20"
																				},
																				"nativeSrc": "3117:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3117:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3105:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3105:3:20"
																		},
																		"nativeSrc": "3105:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3105:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:20"
																},
																"nativeSrc": "3077:61:20",
																"nodeType": "YulFunctionCall",
																"src": "3077:61:20"
															},
															"nativeSrc": "3077:61:20",
															"nodeType": "YulExpressionStatement",
															"src": "3077:61:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "2655:489:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2805:9:20",
														"nodeType": "YulTypedName",
														"src": "2805:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2816:6:20",
														"nodeType": "YulTypedName",
														"src": "2816:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2824:6:20",
														"nodeType": "YulTypedName",
														"src": "2824:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2832:6:20",
														"nodeType": "YulTypedName",
														"src": "2832:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2840:6:20",
														"nodeType": "YulTypedName",
														"src": "2840:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2848:6:20",
														"nodeType": "YulTypedName",
														"src": "2848:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2859:4:20",
														"nodeType": "YulTypedName",
														"src": "2859:4:20",
														"type": ""
													}
												],
												"src": "2655:489:20"
											},
											{
												"body": {
													"nativeSrc": "3270:297:20",
													"nodeType": "YulBlock",
													"src": "3270:297:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3287:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3287:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3298:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3298:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3280:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:20"
																},
																"nativeSrc": "3280:21:20",
																"nodeType": "YulFunctionCall",
																"src": "3280:21:20"
															},
															"nativeSrc": "3280:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "3280:21:20"
														},
														{
															"nativeSrc": "3310:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3310:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3330:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3330:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3324:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3324:5:20"
																},
																"nativeSrc": "3324:13:20",
																"nodeType": "YulFunctionCall",
																"src": "3324:13:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3314:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3314:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3357:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3368:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3368:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3353:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:20"
																		},
																		"nativeSrc": "3353:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3353:18:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3373:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3373:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3346:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3346:6:20"
																},
																"nativeSrc": "3346:34:20",
																"nodeType": "YulFunctionCall",
																"src": "3346:34:20"
															},
															"nativeSrc": "3346:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "3346:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3399:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3399:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3410:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3410:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3395:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3395:3:20"
																		},
																		"nativeSrc": "3395:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3419:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3419:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3427:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3427:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:20"
																		},
																		"nativeSrc": "3415:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:15:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3432:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3432:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3389:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3389:5:20"
																},
																"nativeSrc": "3389:50:20",
																"nodeType": "YulFunctionCall",
																"src": "3389:50:20"
															},
															"nativeSrc": "3389:50:20",
															"nodeType": "YulExpressionStatement",
															"src": "3389:50:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3463:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "3463:9:20"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3474:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "3474:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3459:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3459:3:20"
																				},
																				"nativeSrc": "3459:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3459:22:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3483:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3483:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3455:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:20"
																		},
																		"nativeSrc": "3455:31:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:31:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3488:1:20",
																		"nodeType": "YulLiteral",
																		"src": "3488:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3448:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:20"
																},
																"nativeSrc": "3448:42:20",
																"nodeType": "YulFunctionCall",
																"src": "3448:42:20"
															},
															"nativeSrc": "3448:42:20",
															"nodeType": "YulExpressionStatement",
															"src": "3448:42:20"
														},
														{
															"nativeSrc": "3499:62:20",
															"nodeType": "YulAssignment",
															"src": "3499:62:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3515:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3515:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3534:6:20",
																								"nodeType": "YulIdentifier",
																								"src": "3534:6:20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3542:2:20",
																								"nodeType": "YulLiteral",
																								"src": "3542:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3530:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "3530:3:20"
																						},
																						"nativeSrc": "3530:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "3530:15:20"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3551:2:20",
																								"nodeType": "YulLiteral",
																								"src": "3551:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3547:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "3547:3:20"
																						},
																						"nativeSrc": "3547:7:20",
																						"nodeType": "YulFunctionCall",
																						"src": "3547:7:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3526:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3526:3:20"
																				},
																				"nativeSrc": "3526:29:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3526:29:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3511:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:20"
																		},
																		"nativeSrc": "3511:45:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3511:45:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3558:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3558:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3507:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:20"
																},
																"nativeSrc": "3507:54:20",
																"nodeType": "YulFunctionCall",
																"src": "3507:54:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3499:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3499:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3149:418:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3239:9:20",
														"nodeType": "YulTypedName",
														"src": "3239:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3250:6:20",
														"nodeType": "YulTypedName",
														"src": "3250:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3261:4:20",
														"nodeType": "YulTypedName",
														"src": "3261:4:20",
														"type": ""
													}
												],
												"src": "3149:418:20"
											},
											{
												"body": {
													"nativeSrc": "3666:203:20",
													"nodeType": "YulBlock",
													"src": "3666:203:20",
													"statements": [
														{
															"nativeSrc": "3676:26:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3676:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3696:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3696:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3690:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3690:5:20"
																},
																"nativeSrc": "3690:12:20",
																"nodeType": "YulFunctionCall",
																"src": "3690:12:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3680:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3680:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3711:32:20",
															"nodeType": "YulAssignment",
															"src": "3711:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "3730:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3730:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3737:4:20",
																				"nodeType": "YulLiteral",
																				"src": "3737:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3726:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3726:3:20"
																		},
																		"nativeSrc": "3726:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3726:16:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3720:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3720:5:20"
																},
																"nativeSrc": "3720:23:20",
																"nodeType": "YulFunctionCall",
																"src": "3720:23:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3711:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3711:5:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3780:83:20",
																"nodeType": "YulBlock",
																"src": "3780:83:20",
																"statements": [
																	{
																		"nativeSrc": "3794:59:20",
																		"nodeType": "YulAssignment",
																		"src": "3794:59:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "3807:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "3807:5:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3822:1:20",
																									"nodeType": "YulLiteral",
																									"src": "3822:1:20",
																									"type": "",
																									"value": "3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3829:4:20",
																											"nodeType": "YulLiteral",
																											"src": "3829:4:20",
																											"type": "",
																											"value": "0x20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "3835:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "3835:6:20"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "3825:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "3825:3:20"
																									},
																									"nativeSrc": "3825:17:20",
																									"nodeType": "YulFunctionCall",
																									"src": "3825:17:20"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nativeSrc": "3818:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "3818:3:20"
																							},
																							"nativeSrc": "3818:25:20",
																							"nodeType": "YulFunctionCall",
																							"src": "3818:25:20"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3849:1:20",
																									"nodeType": "YulLiteral",
																									"src": "3849:1:20",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3845:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "3845:3:20"
																							},
																							"nativeSrc": "3845:6:20",
																							"nodeType": "YulFunctionCall",
																							"src": "3845:6:20"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3814:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "3814:3:20"
																					},
																					"nativeSrc": "3814:38:20",
																					"nodeType": "YulFunctionCall",
																					"src": "3814:38:20"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3803:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3803:3:20"
																			},
																			"nativeSrc": "3803:50:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3803:50:20"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "3794:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3794:5:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3758:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3766:4:20",
																		"nodeType": "YulLiteral",
																		"src": "3766:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3755:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3755:2:20"
																},
																"nativeSrc": "3755:16:20",
																"nodeType": "YulFunctionCall",
																"src": "3755:16:20"
															},
															"nativeSrc": "3752:111:20",
															"nodeType": "YulIf",
															"src": "3752:111:20"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "3572:297:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3646:5:20",
														"nodeType": "YulTypedName",
														"src": "3646:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3656:5:20",
														"nodeType": "YulTypedName",
														"src": "3656:5:20",
														"type": ""
													}
												],
												"src": "3572:297:20"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610160604052348015610010575f5ffd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b8152508160039081610097919061026e565b5060046100a4828261026e565b506100b49150839050600561015e565b610120526100c381600661015e565b61014052815160208084019190912060e052815190820120610100524660a05261014f60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250610380565b5f6020835110156101795761017283610190565b905061018a565b81610184848261026e565b5060ff90505b92915050565b5f5f829050601f815111156101c3578260405163305a27a960e01b81526004016101ba9190610328565b60405180910390fd5b80516101ce8261035d565b179392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806101fe57607f821691505b60208210810361021c57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561026957805f5260205f20601f840160051c810160208510156102475750805b601f840160051c820191505b81811015610266575f8155600101610253565b50505b505050565b81516001600160401b03811115610287576102876101d6565b61029b8161029584546101ea565b84610222565b6020601f8211600181146102cd575f83156102b65750848201515b5f19600385901b1c1916600184901b178455610266565b5f84815260208120601f198516915b828110156102fc57878501518255602094850194600190920191016102dc565b508482101561031957868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b8051602080830151919081101561021c575f1960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610e9a6103d15f395f6106e101525f6106b401525f61065d01525f61063501525f61059001525f6105ba01525f6105e40152610e9a5ff3fe608060405234801561000f575f5ffd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a2578063a9059cbb146101aa578063d505accf146101bd578063dd62ed3e146101d2575f5ffd5b806370a082311461014c5780637ecebe001461017457806384b0196e14610187575f5ffd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce567146101355780633644e51514610144575b5f5ffd5b6100d761020a565b6040516100e49190610c16565b60405180910390f35b6101006100fb366004610c4a565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610c72565b6102b3565b604051601281526020016100e4565b6101146102d6565b61011461015a366004610cac565b6001600160a01b03165f9081526020819052604090205490565b610114610182366004610cac565b6102e4565b61018f610301565b6040516100e49796959493929190610cc5565b6100d7610343565b6101006101b8366004610c4a565b610352565b6101d06101cb366004610d5b565b61035f565b005b6101146101e0366004610dc8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461021990610df9565b80601f016020809104026020016040519081016040528092919081815260200182805461024590610df9565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561049a565b60019150505b92915050565b5f336102c08582856104ac565b6102cb858585610527565b506001949350505050565b5f6102df610584565b905090565b6001600160a01b0381165f908152600760205260408120546102ad565b5f6060805f5f5f60606103126106ad565b61031a6106da565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461021990610df9565b5f336102a7818585610527565b834211156103885760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886103d38c6001600160a01b03165f90815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f61042d82610707565b90505f61043c82878787610733565b9050896001600160a01b0316816001600160a01b031614610483576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161037f565b61048e8a8a8a61049a565b50505050505050505050565b6104a7838383600161075f565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610521578181101561051357604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161037f565b61052184848484035f61075f565b50505050565b6001600160a01b03831661055057604051634b637e8f60e11b81525f600482015260240161037f565b6001600160a01b0382166105795760405163ec442f0560e01b81525f600482015260240161037f565b6104a7838383610831565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105dc57507f000000000000000000000000000000000000000000000000000000000000000046145b1561060657507f000000000000000000000000000000000000000000000000000000000000000090565b6102df604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60606102df7f00000000000000000000000000000000000000000000000000000000000000006005610957565b60606102df7f00000000000000000000000000000000000000000000000000000000000000006006610957565b5f6102ad610713610584565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f61074388888888610a00565b9250925092506107538282610ac8565b50909695505050505050565b6001600160a01b0384166107885760405163e602df0560e01b81525f600482015260240161037f565b6001600160a01b0383166107b157604051634a1406b160e11b81525f600482015260240161037f565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561052157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161082391815260200190565b60405180910390a350505050565b6001600160a01b03831661085b578060025f8282546108509190610e31565b909155506108cb9050565b6001600160a01b0383165f90815260208190526040902054818110156108ad5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161037f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108e757600280548290039055610905565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161094a91815260200190565b60405180910390a3505050565b606060ff83146109715761096a83610b84565b90506102ad565b81805461097d90610df9565b80601f01602080910402602001604051908101604052809291908181526020018280546109a990610df9565b80156109f45780601f106109cb576101008083540402835291602001916109f4565b820191905f5260205f20905b8154815290600101906020018083116109d757829003601f168201915b505050505090506102ad565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610a3957505f91506003905082610abe565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610a8a573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116610ab557505f925060019150829050610abe565b92505f91508190505b9450945094915050565b5f826003811115610adb57610adb610e50565b03610ae4575050565b6001826003811115610af857610af8610e50565b03610b165760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610b2a57610b2a610e50565b03610b4b5760405163fce698f760e01b81526004810182905260240161037f565b6003826003811115610b5f57610b5f610e50565b03610b80576040516335e2f38360e21b81526004810182905260240161037f565b5050565b60605f610b9083610bc1565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f60ff8216601f8111156102ad57604051632cd44ac360e21b815260040160405180910390fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c286020830184610be8565b9392505050565b80356001600160a01b0381168114610c45575f5ffd5b919050565b5f5f60408385031215610c5b575f5ffd5b610c6483610c2f565b946020939093013593505050565b5f5f5f60608486031215610c84575f5ffd5b610c8d84610c2f565b9250610c9b60208501610c2f565b929592945050506040919091013590565b5f60208284031215610cbc575f5ffd5b610c2882610c2f565b60ff60f81b8816815260e060208201525f610ce360e0830189610be8565b8281036040840152610cf58189610be8565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b81811015610d4a578351835260209384019390920191600101610d2c565b50909b9a5050505050505050505050565b5f5f5f5f5f5f5f60e0888a031215610d71575f5ffd5b610d7a88610c2f565b9650610d8860208901610c2f565b95506040880135945060608801359350608088013560ff81168114610dab575f5ffd5b9699959850939692959460a0840135945060c09093013592915050565b5f5f60408385031215610dd9575f5ffd5b610de283610c2f565b9150610df060208401610c2f565b90509250929050565b600181811c90821680610e0d57607f821691505b602082108103610e2b57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220dcec420d9f7c50382e2b77a3c31c3372d4d7ca63b0c3f541ccff297131ef5c7864736f6c634300081c0033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x26E JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xA4 DUP3 DUP3 PUSH2 0x26E JUMP JUMPDEST POP PUSH2 0xB4 SWAP2 POP DUP4 SWAP1 POP PUSH1 0x5 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0xC3 DUP2 PUSH1 0x6 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x14F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH2 0x380 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x179 JUMPI PUSH2 0x172 DUP4 PUSH2 0x190 JUMP JUMPDEST SWAP1 POP PUSH2 0x18A JUMP JUMPDEST DUP2 PUSH2 0x184 DUP5 DUP3 PUSH2 0x26E JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x1C3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1CE DUP3 PUSH2 0x35D JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x269 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x247 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x253 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x287 JUMPI PUSH2 0x287 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x295 DUP5 SLOAD PUSH2 0x1EA JUMP JUMPDEST DUP5 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2CD JUMPI PUSH0 DUP4 ISZERO PUSH2 0x2B6 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x266 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2FC JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2DC JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x319 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x21C JUMPI PUSH0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0xE9A PUSH2 0x3D1 PUSH0 CODECOPY PUSH0 PUSH2 0x6E1 ADD MSTORE PUSH0 PUSH2 0x6B4 ADD MSTORE PUSH0 PUSH2 0x65D ADD MSTORE PUSH0 PUSH2 0x635 ADD MSTORE PUSH0 PUSH2 0x590 ADD MSTORE PUSH0 PUSH2 0x5BA ADD MSTORE PUSH0 PUSH2 0x5E4 ADD MSTORE PUSH2 0xE9A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH2 0x1D0 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x527 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DF PUSH2 0x584 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2AD JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 PUSH0 PUSH0 PUSH1 0x60 PUSH2 0x312 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x31A PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x527 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x3D3 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x42D DUP3 PUSH2 0x707 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x43C DUP3 DUP8 DUP8 DUP8 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x48E DUP11 DUP11 DUP11 PUSH2 0x49A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x75F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x521 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x521 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x75F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x4A7 DUP4 DUP4 DUP4 PUSH2 0x831 JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x5DC JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x606 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DF PUSH32 0x0 PUSH1 0x5 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DF PUSH32 0x0 PUSH1 0x6 PUSH2 0x957 JUMP JUMPDEST PUSH0 PUSH2 0x2AD PUSH2 0x713 PUSH2 0x584 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x743 DUP9 DUP9 DUP9 DUP9 PUSH2 0xA00 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x753 DUP3 DUP3 PUSH2 0xAC8 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x521 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x823 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x85B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x850 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8CB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x905 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x971 JUMPI PUSH2 0x96A DUP4 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x97D SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A9 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x2AD JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xA39 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAB5 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xABE JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xADB JUMPI PUSH2 0xADB PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xAE4 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH2 0xB2A PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xB4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB90 DUP4 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC64 DUP4 PUSH2 0xC2F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC8D DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP3 POP PUSH2 0xC9B PUSH1 0x20 DUP6 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC28 DUP3 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xCE3 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0xBE8 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xCF5 DUP2 DUP10 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD4A JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD2C JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xD71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7A DUP9 PUSH2 0xC2F JUMP JUMPDEST SWAP7 POP PUSH2 0xD88 PUSH1 0x20 DUP10 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDE2 DUP4 PUSH2 0xC2F JUMP JUMPDEST SWAP2 POP PUSH2 0xDF0 PUSH1 0x20 DUP5 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE0D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xEC TIMESTAMP 0xD SWAP16 PUSH29 0x50382E2B77A3C31C3372D4D7CA63B0C3F541CCFF297131EF5C7864736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "249:110:19:-:0;;;294:63;;;;;;;;;;1577:52:4;;;;;;;;;;;;;-1:-1:-1;;;1577:52:4;;;1616:4;3328:431:14;;;;;;;;;;;;;-1:-1:-1;;;3328:431:14;;;1601:113:2;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:2;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;3401:45:14;;-1:-1:-1;3401:4:14;;-1:-1:-1;3432:13:14;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;2914:25:20;2955:18;;;2948:34;;;;2998:18;;;2991:34;4255:13:14;3041:18:20;;;3034:34;4278:4:14;3084:19:20;;;3077:61;4168:7:14;;2886:19:20;;4204:80:14;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:14;3725:27;;-1:-1:-1;249:110:19;;2887:340:10;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:10;;-1:-1:-1;3006:215:10;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:10;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:10:o;14:127:20:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:20;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:20;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:20;;;2500:26;2451:89;-1:-1:-1;;1308:1:20;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:20;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:20;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:20;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:20:o;3149:418::-;3298:2;3287:9;3280:21;3261:4;3330:6;3324:13;3373:6;3368:2;3357:9;3353:18;3346:34;3432:6;3427:2;3419:6;3415:15;3410:2;3399:9;3395:18;3389:50;3488:1;3483:2;3474:6;3463:9;3459:22;3455:31;3448:42;3558:2;3551;3547:7;3542:2;3534:6;3530:15;3526:29;3515:9;3511:45;3507:54;3499:62;;;3149:418;;;;:::o;3572:297::-;3690:12;;3737:4;3726:16;;;3720:23;;3690:12;3755:16;;3752:111;;;-1:-1:-1;;3829:4:20;3825:17;;;;3822:1;3818:25;3814:38;3803:50;;3572:297;-1:-1:-1;3572:297:20:o;:::-;249:110:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_907": {
									"entryPoint": 726,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2343": {
									"entryPoint": 1709,
									"id": 2343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2355": {
									"entryPoint": 1754,
									"id": 2355,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_567": {
									"entryPoint": 1178,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 1887,
									"id": 627,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2273": {
									"entryPoint": null,
									"id": 2273,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_domainSeparatorV4_2252": {
									"entryPoint": 1412,
									"id": 2252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2289": {
									"entryPoint": 1799,
									"id": 2289,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_675": {
									"entryPoint": 1196,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2128": {
									"entryPoint": 2760,
									"id": 2128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_406": {
									"entryPoint": 1319,
									"id": 406,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 2097,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_1042": {
									"entryPoint": null,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_327": {
									"entryPoint": 666,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_262": {
									"entryPoint": null,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_1238": {
									"entryPoint": 3009,
									"id": 1238,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_240": {
									"entryPoint": null,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2331": {
									"entryPoint": 769,
									"id": 2331,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@name_222": {
									"entryPoint": 522,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_1027": {
									"entryPoint": null,
									"id": 1027,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_897": {
									"entryPoint": 740,
									"id": 897,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_880": {
									"entryPoint": 863,
									"id": 880,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_2079": {
									"entryPoint": 1843,
									"id": 2079,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_231": {
									"entryPoint": 835,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1305": {
									"entryPoint": 2391,
									"id": 1305,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_1206": {
									"entryPoint": 2948,
									"id": 1206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2429": {
									"entryPoint": null,
									"id": 2429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_249": {
									"entryPoint": null,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 691,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_286": {
									"entryPoint": 850,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_2043": {
									"entryPoint": 2560,
									"id": 2043,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_address": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 3419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7972:20",
										"nodeType": "YulBlock",
										"src": "0:7972:20",
										"statements": [
											{
												"nativeSrc": "6:3:20",
												"nodeType": "YulBlock",
												"src": "6:3:20",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "64:239:20",
													"nodeType": "YulBlock",
													"src": "64:239:20",
													"statements": [
														{
															"nativeSrc": "74:26:20",
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "94:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "88:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:20"
																},
																"nativeSrc": "88:12:20",
																"nodeType": "YulFunctionCall",
																"src": "88:12:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "78:6:20",
																	"nodeType": "YulTypedName",
																	"src": "78:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "116:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "121:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "109:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:20"
																},
																"nativeSrc": "109:19:20",
																"nodeType": "YulFunctionCall",
																"src": "109:19:20"
															},
															"nativeSrc": "109:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "109:19:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "147:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "147:3:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "152:4:20",
																				"nodeType": "YulLiteral",
																				"src": "152:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "143:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:20"
																		},
																		"nativeSrc": "143:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "143:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "163:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "163:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "170:4:20",
																				"nodeType": "YulLiteral",
																				"src": "170:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "159:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "159:3:20"
																		},
																		"nativeSrc": "159:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "159:16:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "177:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "177:6:20"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "137:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "137:5:20"
																},
																"nativeSrc": "137:47:20",
																"nodeType": "YulFunctionCall",
																"src": "137:47:20"
															},
															"nativeSrc": "137:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "137:47:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "208:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "208:3:20"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "213:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "213:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "204:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:20"
																				},
																				"nativeSrc": "204:16:20",
																				"nodeType": "YulFunctionCall",
																				"src": "204:16:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "222:4:20",
																				"nodeType": "YulLiteral",
																				"src": "222:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "200:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "200:3:20"
																		},
																		"nativeSrc": "200:27:20",
																		"nodeType": "YulFunctionCall",
																		"src": "200:27:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "229:1:20",
																		"nodeType": "YulLiteral",
																		"src": "229:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "193:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "193:6:20"
																},
																"nativeSrc": "193:38:20",
																"nodeType": "YulFunctionCall",
																"src": "193:38:20"
															},
															"nativeSrc": "193:38:20",
															"nodeType": "YulExpressionStatement",
															"src": "193:38:20"
														},
														{
															"nativeSrc": "240:57:20",
															"nodeType": "YulAssignment",
															"src": "240:57:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "255:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "255:3:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "268:6:20",
																								"nodeType": "YulIdentifier",
																								"src": "268:6:20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "276:2:20",
																								"nodeType": "YulLiteral",
																								"src": "276:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "264:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "264:3:20"
																						},
																						"nativeSrc": "264:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "264:15:20"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "285:2:20",
																								"nodeType": "YulLiteral",
																								"src": "285:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "281:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:20"
																						},
																						"nativeSrc": "281:7:20",
																						"nodeType": "YulFunctionCall",
																						"src": "281:7:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "260:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "260:3:20"
																				},
																				"nativeSrc": "260:29:20",
																				"nodeType": "YulFunctionCall",
																				"src": "260:29:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "251:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "251:3:20"
																		},
																		"nativeSrc": "251:39:20",
																		"nodeType": "YulFunctionCall",
																		"src": "251:39:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "292:4:20",
																		"nodeType": "YulLiteral",
																		"src": "292:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "247:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:20"
																},
																"nativeSrc": "247:50:20",
																"nodeType": "YulFunctionCall",
																"src": "247:50:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "240:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "240:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "14:289:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "41:5:20",
														"nodeType": "YulTypedName",
														"src": "41:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "48:3:20",
														"nodeType": "YulTypedName",
														"src": "48:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "56:3:20",
														"nodeType": "YulTypedName",
														"src": "56:3:20",
														"type": ""
													}
												],
												"src": "14:289:20"
											},
											{
												"body": {
													"nativeSrc": "429:99:20",
													"nodeType": "YulBlock",
													"src": "429:99:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "446:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "446:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "457:2:20",
																		"nodeType": "YulLiteral",
																		"src": "457:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "439:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:20"
																},
																"nativeSrc": "439:21:20",
																"nodeType": "YulFunctionCall",
																"src": "439:21:20"
															},
															"nativeSrc": "439:21:20",
															"nodeType": "YulExpressionStatement",
															"src": "439:21:20"
														},
														{
															"nativeSrc": "469:53:20",
															"nodeType": "YulAssignment",
															"src": "469:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "495:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "507:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "518:2:20",
																				"nodeType": "YulLiteral",
																				"src": "518:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "503:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:20"
																		},
																		"nativeSrc": "503:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "503:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "477:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "477:17:20"
																},
																"nativeSrc": "477:45:20",
																"nodeType": "YulFunctionCall",
																"src": "477:45:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "469:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "469:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "308:220:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "398:9:20",
														"nodeType": "YulTypedName",
														"src": "398:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "409:6:20",
														"nodeType": "YulTypedName",
														"src": "409:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "420:4:20",
														"nodeType": "YulTypedName",
														"src": "420:4:20",
														"type": ""
													}
												],
												"src": "308:220:20"
											},
											{
												"body": {
													"nativeSrc": "582:124:20",
													"nodeType": "YulBlock",
													"src": "582:124:20",
													"statements": [
														{
															"nativeSrc": "592:29:20",
															"nodeType": "YulAssignment",
															"src": "592:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "614:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "614:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "601:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "601:12:20"
																},
																"nativeSrc": "601:20:20",
																"nodeType": "YulFunctionCall",
																"src": "601:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "592:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "684:16:20",
																"nodeType": "YulBlock",
																"src": "684:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "693:1:20",
																					"nodeType": "YulLiteral",
																					"src": "693:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "696:1:20",
																					"nodeType": "YulLiteral",
																					"src": "696:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "686:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "686:6:20"
																			},
																			"nativeSrc": "686:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "686:12:20"
																		},
																		"nativeSrc": "686:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "686:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "643:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "643:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "654:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "654:5:20"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "669:3:20",
																										"nodeType": "YulLiteral",
																										"src": "669:3:20",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "674:1:20",
																										"nodeType": "YulLiteral",
																										"src": "674:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "665:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "665:3:20"
																								},
																								"nativeSrc": "665:11:20",
																								"nodeType": "YulFunctionCall",
																								"src": "665:11:20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "678:1:20",
																								"nodeType": "YulLiteral",
																								"src": "678:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "661:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "661:3:20"
																						},
																						"nativeSrc": "661:19:20",
																						"nodeType": "YulFunctionCall",
																						"src": "661:19:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "650:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "650:3:20"
																				},
																				"nativeSrc": "650:31:20",
																				"nodeType": "YulFunctionCall",
																				"src": "650:31:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "640:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:20"
																		},
																		"nativeSrc": "640:42:20",
																		"nodeType": "YulFunctionCall",
																		"src": "640:42:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "633:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:20"
																},
																"nativeSrc": "633:50:20",
																"nodeType": "YulFunctionCall",
																"src": "633:50:20"
															},
															"nativeSrc": "630:70:20",
															"nodeType": "YulIf",
															"src": "630:70:20"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "533:173:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "561:6:20",
														"nodeType": "YulTypedName",
														"src": "561:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "572:5:20",
														"nodeType": "YulTypedName",
														"src": "572:5:20",
														"type": ""
													}
												],
												"src": "533:173:20"
											},
											{
												"body": {
													"nativeSrc": "798:213:20",
													"nodeType": "YulBlock",
													"src": "798:213:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "844:16:20",
																"nodeType": "YulBlock",
																"src": "844:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "853:1:20",
																					"nodeType": "YulLiteral",
																					"src": "853:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "856:1:20",
																					"nodeType": "YulLiteral",
																					"src": "856:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "846:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "846:6:20"
																			},
																			"nativeSrc": "846:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "846:12:20"
																		},
																		"nativeSrc": "846:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "846:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "819:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "828:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "828:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "815:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "815:3:20"
																		},
																		"nativeSrc": "815:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "815:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "840:2:20",
																		"nodeType": "YulLiteral",
																		"src": "840:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "811:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:20"
																},
																"nativeSrc": "811:32:20",
																"nodeType": "YulFunctionCall",
																"src": "811:32:20"
															},
															"nativeSrc": "808:52:20",
															"nodeType": "YulIf",
															"src": "808:52:20"
														},
														{
															"nativeSrc": "869:39:20",
															"nodeType": "YulAssignment",
															"src": "869:39:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "898:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "898:9:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "879:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "879:18:20"
																},
																"nativeSrc": "879:29:20",
																"nodeType": "YulFunctionCall",
																"src": "879:29:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "869:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:20"
																}
															]
														},
														{
															"nativeSrc": "917:14:20",
															"nodeType": "YulVariableDeclaration",
															"src": "917:14:20",
															"value": {
																"kind": "number",
																"nativeSrc": "930:1:20",
																"nodeType": "YulLiteral",
																"src": "930:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "921:5:20",
																	"nodeType": "YulTypedName",
																	"src": "921:5:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "940:41:20",
															"nodeType": "YulAssignment",
															"src": "940:41:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:2:20",
																				"nodeType": "YulLiteral",
																				"src": "977:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:20"
																		},
																		"nativeSrc": "962:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "962:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "949:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "949:12:20"
																},
																"nativeSrc": "949:32:20",
																"nodeType": "YulFunctionCall",
																"src": "949:32:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "940:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:20"
																}
															]
														},
														{
															"nativeSrc": "990:15:20",
															"nodeType": "YulAssignment",
															"src": "990:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "1000:5:20",
																"nodeType": "YulIdentifier",
																"src": "1000:5:20"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "990:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "711:300:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "756:9:20",
														"nodeType": "YulTypedName",
														"src": "756:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "767:7:20",
														"nodeType": "YulTypedName",
														"src": "767:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "779:6:20",
														"nodeType": "YulTypedName",
														"src": "779:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "787:6:20",
														"nodeType": "YulTypedName",
														"src": "787:6:20",
														"type": ""
													}
												],
												"src": "711:300:20"
											},
											{
												"body": {
													"nativeSrc": "1111:92:20",
													"nodeType": "YulBlock",
													"src": "1111:92:20",
													"statements": [
														{
															"nativeSrc": "1121:26:20",
															"nodeType": "YulAssignment",
															"src": "1121:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1133:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1133:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1129:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1129:3:20"
																},
																"nativeSrc": "1129:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1129:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1121:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1121:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1163:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1188:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1188:6:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1181:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "1181:6:20"
																				},
																				"nativeSrc": "1181:14:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:14:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1174:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:20"
																		},
																		"nativeSrc": "1174:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1156:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:20"
																},
																"nativeSrc": "1156:41:20",
																"nodeType": "YulFunctionCall",
																"src": "1156:41:20"
															},
															"nativeSrc": "1156:41:20",
															"nodeType": "YulExpressionStatement",
															"src": "1156:41:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1016:187:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1080:9:20",
														"nodeType": "YulTypedName",
														"src": "1080:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1091:6:20",
														"nodeType": "YulTypedName",
														"src": "1091:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1102:4:20",
														"nodeType": "YulTypedName",
														"src": "1102:4:20",
														"type": ""
													}
												],
												"src": "1016:187:20"
											},
											{
												"body": {
													"nativeSrc": "1309:76:20",
													"nodeType": "YulBlock",
													"src": "1309:76:20",
													"statements": [
														{
															"nativeSrc": "1319:26:20",
															"nodeType": "YulAssignment",
															"src": "1319:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1331:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1331:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1327:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:20"
																},
																"nativeSrc": "1327:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1327:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1319:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1319:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1361:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1361:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1372:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1372:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1354:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:20"
																},
																"nativeSrc": "1354:25:20",
																"nodeType": "YulFunctionCall",
																"src": "1354:25:20"
															},
															"nativeSrc": "1354:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "1354:25:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1208:177:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1278:9:20",
														"nodeType": "YulTypedName",
														"src": "1278:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1289:6:20",
														"nodeType": "YulTypedName",
														"src": "1289:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1300:4:20",
														"nodeType": "YulTypedName",
														"src": "1300:4:20",
														"type": ""
													}
												],
												"src": "1208:177:20"
											},
											{
												"body": {
													"nativeSrc": "1494:270:20",
													"nodeType": "YulBlock",
													"src": "1494:270:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1540:16:20",
																"nodeType": "YulBlock",
																"src": "1540:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1549:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1552:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1552:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1542:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1542:6:20"
																			},
																			"nativeSrc": "1542:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1542:12:20"
																		},
																		"nativeSrc": "1542:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1542:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1515:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1515:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1524:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1524:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1511:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1511:3:20"
																		},
																		"nativeSrc": "1511:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1511:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1536:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1536:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1507:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:20"
																},
																"nativeSrc": "1507:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1507:32:20"
															},
															"nativeSrc": "1504:52:20",
															"nodeType": "YulIf",
															"src": "1504:52:20"
														},
														{
															"nativeSrc": "1565:39:20",
															"nodeType": "YulAssignment",
															"src": "1565:39:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1594:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1594:9:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1575:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1575:18:20"
																},
																"nativeSrc": "1575:29:20",
																"nodeType": "YulFunctionCall",
																"src": "1575:29:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1565:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:20"
																}
															]
														},
														{
															"nativeSrc": "1613:48:20",
															"nodeType": "YulAssignment",
															"src": "1613:48:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1646:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1657:2:20",
																				"nodeType": "YulLiteral",
																				"src": "1657:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1642:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:20"
																		},
																		"nativeSrc": "1642:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1642:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1623:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1623:18:20"
																},
																"nativeSrc": "1623:38:20",
																"nodeType": "YulFunctionCall",
																"src": "1623:38:20"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1613:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:20"
																}
															]
														},
														{
															"nativeSrc": "1670:14:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1670:14:20",
															"value": {
																"kind": "number",
																"nativeSrc": "1683:1:20",
																"nodeType": "YulLiteral",
																"src": "1683:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1674:5:20",
																	"nodeType": "YulTypedName",
																	"src": "1674:5:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1693:41:20",
															"nodeType": "YulAssignment",
															"src": "1693:41:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1719:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1719:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1730:2:20",
																				"nodeType": "YulLiteral",
																				"src": "1730:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1715:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1715:3:20"
																		},
																		"nativeSrc": "1715:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1715:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1702:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "1702:12:20"
																},
																"nativeSrc": "1702:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1702:32:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1693:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1693:5:20"
																}
															]
														},
														{
															"nativeSrc": "1743:15:20",
															"nodeType": "YulAssignment",
															"src": "1743:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "1753:5:20",
																"nodeType": "YulIdentifier",
																"src": "1753:5:20"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1743:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1390:374:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1444:9:20",
														"nodeType": "YulTypedName",
														"src": "1444:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1455:7:20",
														"nodeType": "YulTypedName",
														"src": "1455:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1467:6:20",
														"nodeType": "YulTypedName",
														"src": "1467:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1475:6:20",
														"nodeType": "YulTypedName",
														"src": "1475:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1483:6:20",
														"nodeType": "YulTypedName",
														"src": "1483:6:20",
														"type": ""
													}
												],
												"src": "1390:374:20"
											},
											{
												"body": {
													"nativeSrc": "1866:87:20",
													"nodeType": "YulBlock",
													"src": "1866:87:20",
													"statements": [
														{
															"nativeSrc": "1876:26:20",
															"nodeType": "YulAssignment",
															"src": "1876:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1888:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1888:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1899:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1899:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1884:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1884:3:20"
																},
																"nativeSrc": "1884:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1884:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1876:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1876:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1918:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1918:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1933:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1941:4:20",
																				"nodeType": "YulLiteral",
																				"src": "1941:4:20",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1929:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1929:3:20"
																		},
																		"nativeSrc": "1929:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1929:17:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1911:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:20"
																},
																"nativeSrc": "1911:36:20",
																"nodeType": "YulFunctionCall",
																"src": "1911:36:20"
															},
															"nativeSrc": "1911:36:20",
															"nodeType": "YulExpressionStatement",
															"src": "1911:36:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1769:184:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1835:9:20",
														"nodeType": "YulTypedName",
														"src": "1835:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1846:6:20",
														"nodeType": "YulTypedName",
														"src": "1846:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1857:4:20",
														"nodeType": "YulTypedName",
														"src": "1857:4:20",
														"type": ""
													}
												],
												"src": "1769:184:20"
											},
											{
												"body": {
													"nativeSrc": "2059:76:20",
													"nodeType": "YulBlock",
													"src": "2059:76:20",
													"statements": [
														{
															"nativeSrc": "2069:26:20",
															"nodeType": "YulAssignment",
															"src": "2069:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2081:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2081:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2092:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2077:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:20"
																},
																"nativeSrc": "2077:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2077:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2069:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2111:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2122:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2104:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:20"
																},
																"nativeSrc": "2104:25:20",
																"nodeType": "YulFunctionCall",
																"src": "2104:25:20"
															},
															"nativeSrc": "2104:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "2104:25:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1958:177:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2028:9:20",
														"nodeType": "YulTypedName",
														"src": "2028:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2039:6:20",
														"nodeType": "YulTypedName",
														"src": "2039:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2050:4:20",
														"nodeType": "YulTypedName",
														"src": "2050:4:20",
														"type": ""
													}
												],
												"src": "1958:177:20"
											},
											{
												"body": {
													"nativeSrc": "2210:116:20",
													"nodeType": "YulBlock",
													"src": "2210:116:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2256:16:20",
																"nodeType": "YulBlock",
																"src": "2256:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2265:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2265:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2258:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:20"
																			},
																			"nativeSrc": "2258:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2258:12:20"
																		},
																		"nativeSrc": "2258:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2258:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2231:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2231:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2240:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2240:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2227:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:20"
																		},
																		"nativeSrc": "2227:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2227:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2252:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2252:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2223:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:20"
																},
																"nativeSrc": "2223:32:20",
																"nodeType": "YulFunctionCall",
																"src": "2223:32:20"
															},
															"nativeSrc": "2220:52:20",
															"nodeType": "YulIf",
															"src": "2220:52:20"
														},
														{
															"nativeSrc": "2281:39:20",
															"nodeType": "YulAssignment",
															"src": "2281:39:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2310:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2310:9:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2291:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "2291:18:20"
																},
																"nativeSrc": "2291:29:20",
																"nodeType": "YulFunctionCall",
																"src": "2291:29:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2281:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2140:186:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2176:9:20",
														"nodeType": "YulTypedName",
														"src": "2176:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2187:7:20",
														"nodeType": "YulTypedName",
														"src": "2187:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2199:6:20",
														"nodeType": "YulTypedName",
														"src": "2199:6:20",
														"type": ""
													}
												],
												"src": "2140:186:20"
											},
											{
												"body": {
													"nativeSrc": "2688:881:20",
													"nodeType": "YulBlock",
													"src": "2688:881:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2705:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2705:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2720:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2732:3:20",
																						"nodeType": "YulLiteral",
																						"src": "2732:3:20",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2737:3:20",
																						"nodeType": "YulLiteral",
																						"src": "2737:3:20",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2728:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2728:3:20"
																				},
																				"nativeSrc": "2728:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2728:13:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2716:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2716:3:20"
																		},
																		"nativeSrc": "2716:26:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:26:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2698:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:20"
																},
																"nativeSrc": "2698:45:20",
																"nodeType": "YulFunctionCall",
																"src": "2698:45:20"
															},
															"nativeSrc": "2698:45:20",
															"nodeType": "YulExpressionStatement",
															"src": "2698:45:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2763:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2763:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2774:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2774:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2759:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:20"
																		},
																		"nativeSrc": "2759:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2759:18:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:3:20",
																		"nodeType": "YulLiteral",
																		"src": "2779:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2752:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:20"
																},
																"nativeSrc": "2752:31:20",
																"nodeType": "YulFunctionCall",
																"src": "2752:31:20"
															},
															"nativeSrc": "2752:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "2752:31:20"
														},
														{
															"nativeSrc": "2792:60:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2792:60:20",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2824:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2824:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2836:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2836:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2847:3:20",
																				"nodeType": "YulLiteral",
																				"src": "2847:3:20",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2832:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2832:3:20"
																		},
																		"nativeSrc": "2832:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2806:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "2806:17:20"
																},
																"nativeSrc": "2806:46:20",
																"nodeType": "YulFunctionCall",
																"src": "2806:46:20"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2796:6:20",
																	"nodeType": "YulTypedName",
																	"src": "2796:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2872:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2872:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2883:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2883:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2868:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2868:3:20"
																		},
																		"nativeSrc": "2868:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2868:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "2892:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2892:6:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2900:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2900:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2888:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:20"
																		},
																		"nativeSrc": "2888:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2888:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2861:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:20"
																},
																"nativeSrc": "2861:50:20",
																"nodeType": "YulFunctionCall",
																"src": "2861:50:20"
															},
															"nativeSrc": "2861:50:20",
															"nodeType": "YulExpressionStatement",
															"src": "2861:50:20"
														},
														{
															"nativeSrc": "2920:47:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2920:47:20",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2952:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2952:6:20"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "2960:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2960:6:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2934:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "2934:17:20"
																},
																"nativeSrc": "2934:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2934:33:20"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "2924:6:20",
																	"nodeType": "YulTypedName",
																	"src": "2924:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2987:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2998:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2998:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2983:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:20"
																		},
																		"nativeSrc": "2983:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:18:20"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3003:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3003:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2976:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:20"
																},
																"nativeSrc": "2976:34:20",
																"nodeType": "YulFunctionCall",
																"src": "2976:34:20"
															},
															"nativeSrc": "2976:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "2976:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3030:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3030:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3041:3:20",
																				"nodeType": "YulLiteral",
																				"src": "3041:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3026:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3026:3:20"
																		},
																		"nativeSrc": "3026:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3026:19:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "3051:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3051:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3067:3:20",
																								"nodeType": "YulLiteral",
																								"src": "3067:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3072:1:20",
																								"nodeType": "YulLiteral",
																								"src": "3072:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3063:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "3063:3:20"
																						},
																						"nativeSrc": "3063:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "3063:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3076:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3076:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3059:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3059:3:20"
																				},
																				"nativeSrc": "3059:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3059:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3047:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:20"
																		},
																		"nativeSrc": "3047:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3047:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3019:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:20"
																},
																"nativeSrc": "3019:61:20",
																"nodeType": "YulFunctionCall",
																"src": "3019:61:20"
															},
															"nativeSrc": "3019:61:20",
															"nodeType": "YulExpressionStatement",
															"src": "3019:61:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3100:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3100:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3111:3:20",
																				"nodeType": "YulLiteral",
																				"src": "3111:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3096:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:20"
																		},
																		"nativeSrc": "3096:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3096:19:20"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3117:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3117:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3089:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:20"
																},
																"nativeSrc": "3089:35:20",
																"nodeType": "YulFunctionCall",
																"src": "3089:35:20"
															},
															"nativeSrc": "3089:35:20",
															"nodeType": "YulExpressionStatement",
															"src": "3089:35:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3144:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3155:3:20",
																				"nodeType": "YulLiteral",
																				"src": "3155:3:20",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3140:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3140:3:20"
																		},
																		"nativeSrc": "3140:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3140:19:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "3165:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3165:6:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3173:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3173:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3161:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:20"
																		},
																		"nativeSrc": "3161:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3161:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3133:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:20"
																},
																"nativeSrc": "3133:51:20",
																"nodeType": "YulFunctionCall",
																"src": "3133:51:20"
															},
															"nativeSrc": "3133:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "3133:51:20"
														},
														{
															"nativeSrc": "3193:17:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3193:17:20",
															"value": {
																"name": "tail_2",
																"nativeSrc": "3204:6:20",
																"nodeType": "YulIdentifier",
																"src": "3204:6:20"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3197:3:20",
																	"nodeType": "YulTypedName",
																	"src": "3197:3:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3219:27:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3219:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3239:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3239:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3233:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3233:5:20"
																},
																"nativeSrc": "3233:13:20",
																"nodeType": "YulFunctionCall",
																"src": "3233:13:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3223:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3223:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3262:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3262:6:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3270:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3270:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3255:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:20"
																},
																"nativeSrc": "3255:22:20",
																"nodeType": "YulFunctionCall",
																"src": "3255:22:20"
															},
															"nativeSrc": "3255:22:20",
															"nodeType": "YulExpressionStatement",
															"src": "3255:22:20"
														},
														{
															"nativeSrc": "3286:22:20",
															"nodeType": "YulAssignment",
															"src": "3286:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3297:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3297:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3305:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3305:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3293:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3293:3:20"
																},
																"nativeSrc": "3293:15:20",
																"nodeType": "YulFunctionCall",
																"src": "3293:15:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3286:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3286:3:20"
																}
															]
														},
														{
															"nativeSrc": "3317:29:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3317:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3335:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3335:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3343:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3343:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3331:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3331:3:20"
																},
																"nativeSrc": "3331:15:20",
																"nodeType": "YulFunctionCall",
																"src": "3331:15:20"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3321:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3321:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3355:10:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3355:10:20",
															"value": {
																"kind": "number",
																"nativeSrc": "3364:1:20",
																"nodeType": "YulLiteral",
																"src": "3364:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3359:1:20",
																	"nodeType": "YulTypedName",
																	"src": "3359:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3423:120:20",
																"nodeType": "YulBlock",
																"src": "3423:120:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3444:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3444:3:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "3455:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "3455:6:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3449:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "3449:5:20"
																					},
																					"nativeSrc": "3449:13:20",
																					"nodeType": "YulFunctionCall",
																					"src": "3449:13:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3437:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3437:6:20"
																			},
																			"nativeSrc": "3437:26:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3437:26:20"
																		},
																		"nativeSrc": "3437:26:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3437:26:20"
																	},
																	{
																		"nativeSrc": "3476:19:20",
																		"nodeType": "YulAssignment",
																		"src": "3476:19:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3487:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3487:3:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3492:2:20",
																					"nodeType": "YulLiteral",
																					"src": "3492:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3483:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3483:3:20"
																			},
																			"nativeSrc": "3483:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3483:12:20"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3476:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3476:3:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3508:25:20",
																		"nodeType": "YulAssignment",
																		"src": "3508:25:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3522:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "3522:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3530:2:20",
																					"nodeType": "YulLiteral",
																					"src": "3530:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3518:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3518:3:20"
																			},
																			"nativeSrc": "3518:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3518:15:20"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3508:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3508:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3385:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "3385:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3388:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3388:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3382:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3382:2:20"
																},
																"nativeSrc": "3382:13:20",
																"nodeType": "YulFunctionCall",
																"src": "3382:13:20"
															},
															"nativeSrc": "3374:169:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3396:18:20",
																"nodeType": "YulBlock",
																"src": "3396:18:20",
																"statements": [
																	{
																		"nativeSrc": "3398:14:20",
																		"nodeType": "YulAssignment",
																		"src": "3398:14:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3407:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "3407:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3410:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3410:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3403:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3403:3:20"
																			},
																			"nativeSrc": "3403:9:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3403:9:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3398:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "3398:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3378:3:20",
																"nodeType": "YulBlock",
																"src": "3378:3:20",
																"statements": []
															},
															"src": "3374:169:20"
														},
														{
															"nativeSrc": "3552:11:20",
															"nodeType": "YulAssignment",
															"src": "3552:11:20",
															"value": {
																"name": "pos",
																"nativeSrc": "3560:3:20",
																"nodeType": "YulIdentifier",
																"src": "3560:3:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3552:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3552:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2331:1238:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2609:9:20",
														"nodeType": "YulTypedName",
														"src": "2609:9:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2620:6:20",
														"nodeType": "YulTypedName",
														"src": "2620:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2628:6:20",
														"nodeType": "YulTypedName",
														"src": "2628:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2636:6:20",
														"nodeType": "YulTypedName",
														"src": "2636:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2644:6:20",
														"nodeType": "YulTypedName",
														"src": "2644:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2652:6:20",
														"nodeType": "YulTypedName",
														"src": "2652:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2660:6:20",
														"nodeType": "YulTypedName",
														"src": "2660:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2668:6:20",
														"nodeType": "YulTypedName",
														"src": "2668:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2679:4:20",
														"nodeType": "YulTypedName",
														"src": "2679:4:20",
														"type": ""
													}
												],
												"src": "2331:1238:20"
											},
											{
												"body": {
													"nativeSrc": "3744:733:20",
													"nodeType": "YulBlock",
													"src": "3744:733:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3791:16:20",
																"nodeType": "YulBlock",
																"src": "3791:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3800:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3800:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3803:1:20",
																					"nodeType": "YulLiteral",
																					"src": "3803:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3793:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "3793:6:20"
																			},
																			"nativeSrc": "3793:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3793:12:20"
																		},
																		"nativeSrc": "3793:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3793:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3765:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3765:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3774:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3761:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:20"
																		},
																		"nativeSrc": "3761:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:3:20",
																		"nodeType": "YulLiteral",
																		"src": "3786:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3757:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:20"
																},
																"nativeSrc": "3757:33:20",
																"nodeType": "YulFunctionCall",
																"src": "3757:33:20"
															},
															"nativeSrc": "3754:53:20",
															"nodeType": "YulIf",
															"src": "3754:53:20"
														},
														{
															"nativeSrc": "3816:39:20",
															"nodeType": "YulAssignment",
															"src": "3816:39:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3845:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3845:9:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3826:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "3826:18:20"
																},
																"nativeSrc": "3826:29:20",
																"nodeType": "YulFunctionCall",
																"src": "3826:29:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3816:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3816:6:20"
																}
															]
														},
														{
															"nativeSrc": "3864:48:20",
															"nodeType": "YulAssignment",
															"src": "3864:48:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3897:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3897:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3908:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3908:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3893:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3893:3:20"
																		},
																		"nativeSrc": "3893:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3874:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "3874:18:20"
																},
																"nativeSrc": "3874:38:20",
																"nodeType": "YulFunctionCall",
																"src": "3874:38:20"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3864:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3864:6:20"
																}
															]
														},
														{
															"nativeSrc": "3921:14:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3921:14:20",
															"value": {
																"kind": "number",
																"nativeSrc": "3934:1:20",
																"nodeType": "YulLiteral",
																"src": "3934:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3925:5:20",
																	"nodeType": "YulTypedName",
																	"src": "3925:5:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3944:41:20",
															"nodeType": "YulAssignment",
															"src": "3944:41:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3970:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3970:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3981:2:20",
																				"nodeType": "YulLiteral",
																				"src": "3981:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3966:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3966:3:20"
																		},
																		"nativeSrc": "3966:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3966:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3953:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "3953:12:20"
																},
																"nativeSrc": "3953:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3953:32:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3944:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "3944:5:20"
																}
															]
														},
														{
															"nativeSrc": "3994:15:20",
															"nodeType": "YulAssignment",
															"src": "3994:15:20",
															"value": {
																"name": "value",
																"nativeSrc": "4004:5:20",
																"nodeType": "YulIdentifier",
																"src": "4004:5:20"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3994:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:20"
																}
															]
														},
														{
															"nativeSrc": "4018:16:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4018:16:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4033:1:20",
																"nodeType": "YulLiteral",
																"src": "4033:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4022:7:20",
																	"nodeType": "YulTypedName",
																	"src": "4022:7:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4043:43:20",
															"nodeType": "YulAssignment",
															"src": "4043:43:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4071:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4071:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4082:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4082:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4067:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:20"
																		},
																		"nativeSrc": "4067:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4067:18:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4054:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "4054:12:20"
																},
																"nativeSrc": "4054:32:20",
																"nodeType": "YulFunctionCall",
																"src": "4054:32:20"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4043:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4043:7:20"
																}
															]
														},
														{
															"nativeSrc": "4095:17:20",
															"nodeType": "YulAssignment",
															"src": "4095:17:20",
															"value": {
																"name": "value_1",
																"nativeSrc": "4105:7:20",
																"nodeType": "YulIdentifier",
																"src": "4105:7:20"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4095:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:20"
																}
															]
														},
														{
															"nativeSrc": "4121:48:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4121:48:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4153:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4153:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4164:3:20",
																				"nodeType": "YulLiteral",
																				"src": "4164:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4149:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:20"
																		},
																		"nativeSrc": "4149:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4149:19:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4136:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "4136:12:20"
																},
																"nativeSrc": "4136:33:20",
																"nodeType": "YulFunctionCall",
																"src": "4136:33:20"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4125:7:20",
																	"nodeType": "YulTypedName",
																	"src": "4125:7:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4221:16:20",
																"nodeType": "YulBlock",
																"src": "4221:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4230:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4230:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4233:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4233:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4223:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:20"
																			},
																			"nativeSrc": "4223:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4223:12:20"
																		},
																		"nativeSrc": "4223:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4223:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nativeSrc": "4191:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4191:7:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nativeSrc": "4204:7:20",
																						"nodeType": "YulIdentifier",
																						"src": "4204:7:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4213:4:20",
																						"nodeType": "YulLiteral",
																						"src": "4213:4:20",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4200:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:20"
																				},
																				"nativeSrc": "4200:18:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4200:18:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4188:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "4188:2:20"
																		},
																		"nativeSrc": "4188:31:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4188:31:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4181:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:20"
																},
																"nativeSrc": "4181:39:20",
																"nodeType": "YulFunctionCall",
																"src": "4181:39:20"
															},
															"nativeSrc": "4178:59:20",
															"nodeType": "YulIf",
															"src": "4178:59:20"
														},
														{
															"nativeSrc": "4246:17:20",
															"nodeType": "YulAssignment",
															"src": "4246:17:20",
															"value": {
																"name": "value_2",
																"nativeSrc": "4256:7:20",
																"nodeType": "YulIdentifier",
																"src": "4256:7:20"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4246:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4246:6:20"
																}
															]
														},
														{
															"nativeSrc": "4272:16:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4272:16:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4287:1:20",
																"nodeType": "YulLiteral",
																"src": "4287:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "4276:7:20",
																	"nodeType": "YulTypedName",
																	"src": "4276:7:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4297:44:20",
															"nodeType": "YulAssignment",
															"src": "4297:44:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4325:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4325:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4336:3:20",
																				"nodeType": "YulLiteral",
																				"src": "4336:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4321:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:20"
																		},
																		"nativeSrc": "4321:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4321:19:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4308:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "4308:12:20"
																},
																"nativeSrc": "4308:33:20",
																"nodeType": "YulFunctionCall",
																"src": "4308:33:20"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "4297:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4297:7:20"
																}
															]
														},
														{
															"nativeSrc": "4350:17:20",
															"nodeType": "YulAssignment",
															"src": "4350:17:20",
															"value": {
																"name": "value_3",
																"nativeSrc": "4360:7:20",
																"nodeType": "YulIdentifier",
																"src": "4360:7:20"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4350:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4350:6:20"
																}
															]
														},
														{
															"nativeSrc": "4376:16:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4376:16:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4391:1:20",
																"nodeType": "YulLiteral",
																"src": "4391:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "4380:7:20",
																	"nodeType": "YulTypedName",
																	"src": "4380:7:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4401:44:20",
															"nodeType": "YulAssignment",
															"src": "4401:44:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4429:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4429:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4440:3:20",
																				"nodeType": "YulLiteral",
																				"src": "4440:3:20",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4425:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4425:3:20"
																		},
																		"nativeSrc": "4425:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4425:19:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4412:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "4412:12:20"
																},
																"nativeSrc": "4412:33:20",
																"nodeType": "YulFunctionCall",
																"src": "4412:33:20"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "4401:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4401:7:20"
																}
															]
														},
														{
															"nativeSrc": "4454:17:20",
															"nodeType": "YulAssignment",
															"src": "4454:17:20",
															"value": {
																"name": "value_4",
																"nativeSrc": "4464:7:20",
																"nodeType": "YulIdentifier",
																"src": "4464:7:20"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4454:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "3574:903:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3662:9:20",
														"nodeType": "YulTypedName",
														"src": "3662:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3673:7:20",
														"nodeType": "YulTypedName",
														"src": "3673:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3685:6:20",
														"nodeType": "YulTypedName",
														"src": "3685:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3693:6:20",
														"nodeType": "YulTypedName",
														"src": "3693:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3701:6:20",
														"nodeType": "YulTypedName",
														"src": "3701:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3709:6:20",
														"nodeType": "YulTypedName",
														"src": "3709:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3717:6:20",
														"nodeType": "YulTypedName",
														"src": "3717:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3725:6:20",
														"nodeType": "YulTypedName",
														"src": "3725:6:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3733:6:20",
														"nodeType": "YulTypedName",
														"src": "3733:6:20",
														"type": ""
													}
												],
												"src": "3574:903:20"
											},
											{
												"body": {
													"nativeSrc": "4569:173:20",
													"nodeType": "YulBlock",
													"src": "4569:173:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "4615:16:20",
																"nodeType": "YulBlock",
																"src": "4615:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4624:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4624:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4627:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4627:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4617:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "4617:6:20"
																			},
																			"nativeSrc": "4617:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4617:12:20"
																		},
																		"nativeSrc": "4617:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4617:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4590:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4590:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4599:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4599:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4586:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4586:3:20"
																		},
																		"nativeSrc": "4586:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4586:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4611:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4611:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4582:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4582:3:20"
																},
																"nativeSrc": "4582:32:20",
																"nodeType": "YulFunctionCall",
																"src": "4582:32:20"
															},
															"nativeSrc": "4579:52:20",
															"nodeType": "YulIf",
															"src": "4579:52:20"
														},
														{
															"nativeSrc": "4640:39:20",
															"nodeType": "YulAssignment",
															"src": "4640:39:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4669:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4669:9:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4650:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "4650:18:20"
																},
																"nativeSrc": "4650:29:20",
																"nodeType": "YulFunctionCall",
																"src": "4650:29:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4640:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4640:6:20"
																}
															]
														},
														{
															"nativeSrc": "4688:48:20",
															"nodeType": "YulAssignment",
															"src": "4688:48:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4721:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4721:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4732:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4732:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4717:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4717:3:20"
																		},
																		"nativeSrc": "4717:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4717:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4698:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "4698:18:20"
																},
																"nativeSrc": "4698:38:20",
																"nodeType": "YulFunctionCall",
																"src": "4698:38:20"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4688:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4482:260:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4527:9:20",
														"nodeType": "YulTypedName",
														"src": "4527:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4538:7:20",
														"nodeType": "YulTypedName",
														"src": "4538:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4550:6:20",
														"nodeType": "YulTypedName",
														"src": "4550:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4558:6:20",
														"nodeType": "YulTypedName",
														"src": "4558:6:20",
														"type": ""
													}
												],
												"src": "4482:260:20"
											},
											{
												"body": {
													"nativeSrc": "4802:325:20",
													"nodeType": "YulBlock",
													"src": "4802:325:20",
													"statements": [
														{
															"nativeSrc": "4812:22:20",
															"nodeType": "YulAssignment",
															"src": "4812:22:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4826:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4826:1:20",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4829:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "4829:4:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4822:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:20"
																},
																"nativeSrc": "4822:12:20",
																"nodeType": "YulFunctionCall",
																"src": "4822:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4812:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4812:6:20"
																}
															]
														},
														{
															"nativeSrc": "4843:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4843:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4873:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "4873:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4879:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4879:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4869:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4869:3:20"
																},
																"nativeSrc": "4869:12:20",
																"nodeType": "YulFunctionCall",
																"src": "4869:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4847:18:20",
																	"nodeType": "YulTypedName",
																	"src": "4847:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4920:31:20",
																"nodeType": "YulBlock",
																"src": "4920:31:20",
																"statements": [
																	{
																		"nativeSrc": "4922:27:20",
																		"nodeType": "YulAssignment",
																		"src": "4922:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4936:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "4936:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4944:4:20",
																					"nodeType": "YulLiteral",
																					"src": "4944:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4932:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "4932:3:20"
																			},
																			"nativeSrc": "4932:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4932:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4922:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "4922:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4900:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "4900:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4893:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:20"
																},
																"nativeSrc": "4893:26:20",
																"nodeType": "YulFunctionCall",
																"src": "4893:26:20"
															},
															"nativeSrc": "4890:61:20",
															"nodeType": "YulIf",
															"src": "4890:61:20"
														},
														{
															"body": {
																"nativeSrc": "5010:111:20",
																"nodeType": "YulBlock",
																"src": "5010:111:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5031:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5031:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5038:3:20",
																							"nodeType": "YulLiteral",
																							"src": "5038:3:20",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5043:10:20",
																							"nodeType": "YulLiteral",
																							"src": "5043:10:20",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5034:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "5034:3:20"
																					},
																					"nativeSrc": "5034:20:20",
																					"nodeType": "YulFunctionCall",
																					"src": "5034:20:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5024:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5024:6:20"
																			},
																			"nativeSrc": "5024:31:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5024:31:20"
																		},
																		"nativeSrc": "5024:31:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5024:31:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5075:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5075:1:20",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5078:4:20",
																					"nodeType": "YulLiteral",
																					"src": "5078:4:20",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5068:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5068:6:20"
																			},
																			"nativeSrc": "5068:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5068:15:20"
																		},
																		"nativeSrc": "5068:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5068:15:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5103:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5103:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5106:4:20",
																					"nodeType": "YulLiteral",
																					"src": "5106:4:20",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5096:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5096:6:20"
																			},
																			"nativeSrc": "5096:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5096:15:20"
																		},
																		"nativeSrc": "5096:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5096:15:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4966:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "4966:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4989:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "4989:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4997:2:20",
																				"nodeType": "YulLiteral",
																				"src": "4997:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4986:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "4986:2:20"
																		},
																		"nativeSrc": "4986:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4963:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "4963:2:20"
																},
																"nativeSrc": "4963:38:20",
																"nodeType": "YulFunctionCall",
																"src": "4963:38:20"
															},
															"nativeSrc": "4960:161:20",
															"nodeType": "YulIf",
															"src": "4960:161:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4747:380:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4782:4:20",
														"nodeType": "YulTypedName",
														"src": "4782:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4791:6:20",
														"nodeType": "YulTypedName",
														"src": "4791:6:20",
														"type": ""
													}
												],
												"src": "4747:380:20"
											},
											{
												"body": {
													"nativeSrc": "5164:95:20",
													"nodeType": "YulBlock",
													"src": "5164:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5181:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5181:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5188:3:20",
																				"nodeType": "YulLiteral",
																				"src": "5188:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5193:10:20",
																				"nodeType": "YulLiteral",
																				"src": "5193:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5184:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5184:3:20"
																		},
																		"nativeSrc": "5184:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5184:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5174:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:20"
																},
																"nativeSrc": "5174:31:20",
																"nodeType": "YulFunctionCall",
																"src": "5174:31:20"
															},
															"nativeSrc": "5174:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "5174:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5221:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5221:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5224:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5224:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5214:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5214:6:20"
																},
																"nativeSrc": "5214:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5214:15:20"
															},
															"nativeSrc": "5214:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "5214:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5245:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5245:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5248:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5248:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5238:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:20"
																},
																"nativeSrc": "5238:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5238:15:20"
															},
															"nativeSrc": "5238:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "5238:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5132:127:20",
												"nodeType": "YulFunctionDefinition",
												"src": "5132:127:20"
											},
											{
												"body": {
													"nativeSrc": "5505:346:20",
													"nodeType": "YulBlock",
													"src": "5505:346:20",
													"statements": [
														{
															"nativeSrc": "5515:27:20",
															"nodeType": "YulAssignment",
															"src": "5515:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5527:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5527:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5538:3:20",
																		"nodeType": "YulLiteral",
																		"src": "5538:3:20",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5523:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:20"
																},
																"nativeSrc": "5523:19:20",
																"nodeType": "YulFunctionCall",
																"src": "5523:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5515:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5515:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5558:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5558:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5569:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5569:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5551:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5551:6:20"
																},
																"nativeSrc": "5551:25:20",
																"nodeType": "YulFunctionCall",
																"src": "5551:25:20"
															},
															"nativeSrc": "5551:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "5551:25:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5596:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5596:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5607:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5607:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5592:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5592:3:20"
																		},
																		"nativeSrc": "5592:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5592:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5616:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5616:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5632:3:20",
																								"nodeType": "YulLiteral",
																								"src": "5632:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5637:1:20",
																								"nodeType": "YulLiteral",
																								"src": "5637:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5628:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "5628:3:20"
																						},
																						"nativeSrc": "5628:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "5628:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5641:1:20",
																						"nodeType": "YulLiteral",
																						"src": "5641:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5624:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "5624:3:20"
																				},
																				"nativeSrc": "5624:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5624:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5612:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:20"
																		},
																		"nativeSrc": "5612:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5612:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5585:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:20"
																},
																"nativeSrc": "5585:60:20",
																"nodeType": "YulFunctionCall",
																"src": "5585:60:20"
															},
															"nativeSrc": "5585:60:20",
															"nodeType": "YulExpressionStatement",
															"src": "5585:60:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5665:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5665:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5676:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5676:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5661:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5661:3:20"
																		},
																		"nativeSrc": "5661:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5661:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5685:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "5685:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5701:3:20",
																								"nodeType": "YulLiteral",
																								"src": "5701:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5706:1:20",
																								"nodeType": "YulLiteral",
																								"src": "5706:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5697:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "5697:3:20"
																						},
																						"nativeSrc": "5697:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "5697:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5710:1:20",
																						"nodeType": "YulLiteral",
																						"src": "5710:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5693:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "5693:3:20"
																				},
																				"nativeSrc": "5693:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5693:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5681:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:20"
																		},
																		"nativeSrc": "5681:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5654:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:20"
																},
																"nativeSrc": "5654:60:20",
																"nodeType": "YulFunctionCall",
																"src": "5654:60:20"
															},
															"nativeSrc": "5654:60:20",
															"nodeType": "YulExpressionStatement",
															"src": "5654:60:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5734:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5734:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5745:2:20",
																				"nodeType": "YulLiteral",
																				"src": "5745:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5730:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5730:3:20"
																		},
																		"nativeSrc": "5730:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:18:20"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5750:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5750:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5723:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5723:6:20"
																},
																"nativeSrc": "5723:34:20",
																"nodeType": "YulFunctionCall",
																"src": "5723:34:20"
															},
															"nativeSrc": "5723:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "5723:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5777:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5777:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5788:3:20",
																				"nodeType": "YulLiteral",
																				"src": "5788:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5773:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5773:3:20"
																		},
																		"nativeSrc": "5773:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5773:19:20"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5794:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5794:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5766:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:20"
																},
																"nativeSrc": "5766:35:20",
																"nodeType": "YulFunctionCall",
																"src": "5766:35:20"
															},
															"nativeSrc": "5766:35:20",
															"nodeType": "YulExpressionStatement",
															"src": "5766:35:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5821:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5821:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5832:3:20",
																				"nodeType": "YulLiteral",
																				"src": "5832:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5817:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5817:3:20"
																		},
																		"nativeSrc": "5817:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5817:19:20"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "5838:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5838:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5810:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5810:6:20"
																},
																"nativeSrc": "5810:35:20",
																"nodeType": "YulFunctionCall",
																"src": "5810:35:20"
															},
															"nativeSrc": "5810:35:20",
															"nodeType": "YulExpressionStatement",
															"src": "5810:35:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5264:587:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5434:9:20",
														"nodeType": "YulTypedName",
														"src": "5434:9:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5445:6:20",
														"nodeType": "YulTypedName",
														"src": "5445:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5453:6:20",
														"nodeType": "YulTypedName",
														"src": "5453:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5461:6:20",
														"nodeType": "YulTypedName",
														"src": "5461:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5469:6:20",
														"nodeType": "YulTypedName",
														"src": "5469:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5477:6:20",
														"nodeType": "YulTypedName",
														"src": "5477:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5485:6:20",
														"nodeType": "YulTypedName",
														"src": "5485:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5496:4:20",
														"nodeType": "YulTypedName",
														"src": "5496:4:20",
														"type": ""
													}
												],
												"src": "5264:587:20"
											},
											{
												"body": {
													"nativeSrc": "5985:171:20",
													"nodeType": "YulBlock",
													"src": "5985:171:20",
													"statements": [
														{
															"nativeSrc": "5995:26:20",
															"nodeType": "YulAssignment",
															"src": "5995:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6007:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6007:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6018:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6018:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6003:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6003:3:20"
																},
																"nativeSrc": "6003:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6003:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5995:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5995:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6037:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6037:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6052:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6052:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6068:3:20",
																								"nodeType": "YulLiteral",
																								"src": "6068:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6073:1:20",
																								"nodeType": "YulLiteral",
																								"src": "6073:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6064:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6064:3:20"
																						},
																						"nativeSrc": "6064:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "6064:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6077:1:20",
																						"nodeType": "YulLiteral",
																						"src": "6077:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6060:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6060:3:20"
																				},
																				"nativeSrc": "6060:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6060:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6048:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6048:3:20"
																		},
																		"nativeSrc": "6048:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6048:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6030:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:20"
																},
																"nativeSrc": "6030:51:20",
																"nodeType": "YulFunctionCall",
																"src": "6030:51:20"
															},
															"nativeSrc": "6030:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "6030:51:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6101:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6101:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6112:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6112:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6097:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6097:3:20"
																		},
																		"nativeSrc": "6097:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6121:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6121:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6137:3:20",
																								"nodeType": "YulLiteral",
																								"src": "6137:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6142:1:20",
																								"nodeType": "YulLiteral",
																								"src": "6142:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6133:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6133:3:20"
																						},
																						"nativeSrc": "6133:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "6133:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6146:1:20",
																						"nodeType": "YulLiteral",
																						"src": "6146:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6129:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6129:3:20"
																				},
																				"nativeSrc": "6129:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6129:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6117:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:20"
																		},
																		"nativeSrc": "6117:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6117:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6090:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:20"
																},
																"nativeSrc": "6090:60:20",
																"nodeType": "YulFunctionCall",
																"src": "6090:60:20"
															},
															"nativeSrc": "6090:60:20",
															"nodeType": "YulExpressionStatement",
															"src": "6090:60:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5856:300:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5946:9:20",
														"nodeType": "YulTypedName",
														"src": "5946:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5957:6:20",
														"nodeType": "YulTypedName",
														"src": "5957:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5965:6:20",
														"nodeType": "YulTypedName",
														"src": "5965:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5976:4:20",
														"nodeType": "YulTypedName",
														"src": "5976:4:20",
														"type": ""
													}
												],
												"src": "5856:300:20"
											},
											{
												"body": {
													"nativeSrc": "6318:188:20",
													"nodeType": "YulBlock",
													"src": "6318:188:20",
													"statements": [
														{
															"nativeSrc": "6328:26:20",
															"nodeType": "YulAssignment",
															"src": "6328:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6340:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6340:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6351:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6351:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6336:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6336:3:20"
																},
																"nativeSrc": "6336:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6336:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6328:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6328:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6370:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6370:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6385:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6385:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6401:3:20",
																								"nodeType": "YulLiteral",
																								"src": "6401:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6406:1:20",
																								"nodeType": "YulLiteral",
																								"src": "6406:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6397:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6397:3:20"
																						},
																						"nativeSrc": "6397:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "6397:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6410:1:20",
																						"nodeType": "YulLiteral",
																						"src": "6410:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6393:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6393:3:20"
																				},
																				"nativeSrc": "6393:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6393:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6381:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6381:3:20"
																		},
																		"nativeSrc": "6381:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6381:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6363:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:20"
																},
																"nativeSrc": "6363:51:20",
																"nodeType": "YulFunctionCall",
																"src": "6363:51:20"
															},
															"nativeSrc": "6363:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "6363:51:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6434:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6434:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6445:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6445:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6430:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6430:3:20"
																		},
																		"nativeSrc": "6430:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6430:18:20"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6450:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6450:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6423:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:20"
																},
																"nativeSrc": "6423:34:20",
																"nodeType": "YulFunctionCall",
																"src": "6423:34:20"
															},
															"nativeSrc": "6423:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "6423:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6477:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "6477:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6488:2:20",
																				"nodeType": "YulLiteral",
																				"src": "6488:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6473:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6473:3:20"
																		},
																		"nativeSrc": "6473:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6473:18:20"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6493:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6493:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6466:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:20"
																},
																"nativeSrc": "6466:34:20",
																"nodeType": "YulFunctionCall",
																"src": "6466:34:20"
															},
															"nativeSrc": "6466:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "6466:34:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6161:345:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6271:9:20",
														"nodeType": "YulTypedName",
														"src": "6271:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6282:6:20",
														"nodeType": "YulTypedName",
														"src": "6282:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6290:6:20",
														"nodeType": "YulTypedName",
														"src": "6290:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6298:6:20",
														"nodeType": "YulTypedName",
														"src": "6298:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6309:4:20",
														"nodeType": "YulTypedName",
														"src": "6309:4:20",
														"type": ""
													}
												],
												"src": "6161:345:20"
											},
											{
												"body": {
													"nativeSrc": "6612:102:20",
													"nodeType": "YulBlock",
													"src": "6612:102:20",
													"statements": [
														{
															"nativeSrc": "6622:26:20",
															"nodeType": "YulAssignment",
															"src": "6622:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6634:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6634:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6645:2:20",
																		"nodeType": "YulLiteral",
																		"src": "6645:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6630:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6630:3:20"
																},
																"nativeSrc": "6630:18:20",
																"nodeType": "YulFunctionCall",
																"src": "6630:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6622:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6622:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6664:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "6664:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6679:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6679:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6695:3:20",
																								"nodeType": "YulLiteral",
																								"src": "6695:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6700:1:20",
																								"nodeType": "YulLiteral",
																								"src": "6700:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6691:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6691:3:20"
																						},
																						"nativeSrc": "6691:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "6691:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6704:1:20",
																						"nodeType": "YulLiteral",
																						"src": "6704:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6687:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "6687:3:20"
																				},
																				"nativeSrc": "6687:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "6687:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6675:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "6675:3:20"
																		},
																		"nativeSrc": "6675:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6675:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6657:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6657:6:20"
																},
																"nativeSrc": "6657:51:20",
																"nodeType": "YulFunctionCall",
																"src": "6657:51:20"
															},
															"nativeSrc": "6657:51:20",
															"nodeType": "YulExpressionStatement",
															"src": "6657:51:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6511:203:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6581:9:20",
														"nodeType": "YulTypedName",
														"src": "6581:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6592:6:20",
														"nodeType": "YulTypedName",
														"src": "6592:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6603:4:20",
														"nodeType": "YulTypedName",
														"src": "6603:4:20",
														"type": ""
													}
												],
												"src": "6511:203:20"
											},
											{
												"body": {
													"nativeSrc": "6767:174:20",
													"nodeType": "YulBlock",
													"src": "6767:174:20",
													"statements": [
														{
															"nativeSrc": "6777:16:20",
															"nodeType": "YulAssignment",
															"src": "6777:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6788:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "6788:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6791:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "6791:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6784:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:20"
																},
																"nativeSrc": "6784:9:20",
																"nodeType": "YulFunctionCall",
																"src": "6784:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6777:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6824:111:20",
																"nodeType": "YulBlock",
																"src": "6824:111:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6845:1:20",
																					"nodeType": "YulLiteral",
																					"src": "6845:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6852:3:20",
																							"nodeType": "YulLiteral",
																							"src": "6852:3:20",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6857:10:20",
																							"nodeType": "YulLiteral",
																							"src": "6857:10:20",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6848:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "6848:3:20"
																					},
																					"nativeSrc": "6848:20:20",
																					"nodeType": "YulFunctionCall",
																					"src": "6848:20:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6838:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6838:6:20"
																			},
																			"nativeSrc": "6838:31:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6838:31:20"
																		},
																		"nativeSrc": "6838:31:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6838:31:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6889:1:20",
																					"nodeType": "YulLiteral",
																					"src": "6889:1:20",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6892:4:20",
																					"nodeType": "YulLiteral",
																					"src": "6892:4:20",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6882:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6882:6:20"
																			},
																			"nativeSrc": "6882:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:15:20"
																		},
																		"nativeSrc": "6882:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6882:15:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6917:1:20",
																					"nodeType": "YulLiteral",
																					"src": "6917:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6920:4:20",
																					"nodeType": "YulLiteral",
																					"src": "6920:4:20",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6910:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "6910:6:20"
																			},
																			"nativeSrc": "6910:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6910:15:20"
																		},
																		"nativeSrc": "6910:15:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "6910:15:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6808:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "6808:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6811:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6811:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6805:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "6805:2:20"
																},
																"nativeSrc": "6805:10:20",
																"nodeType": "YulFunctionCall",
																"src": "6805:10:20"
															},
															"nativeSrc": "6802:133:20",
															"nodeType": "YulIf",
															"src": "6802:133:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6719:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6750:1:20",
														"nodeType": "YulTypedName",
														"src": "6750:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6753:1:20",
														"nodeType": "YulTypedName",
														"src": "6753:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6759:3:20",
														"nodeType": "YulTypedName",
														"src": "6759:3:20",
														"type": ""
													}
												],
												"src": "6719:222:20"
											},
											{
												"body": {
													"nativeSrc": "7159:276:20",
													"nodeType": "YulBlock",
													"src": "7159:276:20",
													"statements": [
														{
															"nativeSrc": "7169:27:20",
															"nodeType": "YulAssignment",
															"src": "7169:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7181:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7181:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7192:3:20",
																		"nodeType": "YulLiteral",
																		"src": "7192:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7177:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7177:3:20"
																},
																"nativeSrc": "7177:19:20",
																"nodeType": "YulFunctionCall",
																"src": "7177:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7169:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7169:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7212:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7212:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7223:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7223:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7205:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7205:6:20"
																},
																"nativeSrc": "7205:25:20",
																"nodeType": "YulFunctionCall",
																"src": "7205:25:20"
															},
															"nativeSrc": "7205:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "7205:25:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7250:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7250:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7261:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7261:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7246:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:20"
																		},
																		"nativeSrc": "7246:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7246:18:20"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7266:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7266:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:20"
																},
																"nativeSrc": "7239:34:20",
																"nodeType": "YulFunctionCall",
																"src": "7239:34:20"
															},
															"nativeSrc": "7239:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "7239:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7293:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7293:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7304:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7304:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7289:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7289:3:20"
																		},
																		"nativeSrc": "7289:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7289:18:20"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7309:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7309:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7282:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7282:6:20"
																},
																"nativeSrc": "7282:34:20",
																"nodeType": "YulFunctionCall",
																"src": "7282:34:20"
															},
															"nativeSrc": "7282:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "7282:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7336:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7336:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7347:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7347:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7332:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:20"
																		},
																		"nativeSrc": "7332:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7332:18:20"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7352:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7352:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7325:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7325:6:20"
																},
																"nativeSrc": "7325:34:20",
																"nodeType": "YulFunctionCall",
																"src": "7325:34:20"
															},
															"nativeSrc": "7325:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "7325:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7379:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7379:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7390:3:20",
																				"nodeType": "YulLiteral",
																				"src": "7390:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7375:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:20"
																		},
																		"nativeSrc": "7375:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7375:19:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "7400:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7400:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7416:3:20",
																								"nodeType": "YulLiteral",
																								"src": "7416:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7421:1:20",
																								"nodeType": "YulLiteral",
																								"src": "7421:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7412:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "7412:3:20"
																						},
																						"nativeSrc": "7412:11:20",
																						"nodeType": "YulFunctionCall",
																						"src": "7412:11:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7425:1:20",
																						"nodeType": "YulLiteral",
																						"src": "7425:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7408:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7408:3:20"
																				},
																				"nativeSrc": "7408:19:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7408:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7396:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7396:3:20"
																		},
																		"nativeSrc": "7396:32:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7396:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7368:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:20"
																},
																"nativeSrc": "7368:61:20",
																"nodeType": "YulFunctionCall",
																"src": "7368:61:20"
															},
															"nativeSrc": "7368:61:20",
															"nodeType": "YulExpressionStatement",
															"src": "7368:61:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6946:489:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7096:9:20",
														"nodeType": "YulTypedName",
														"src": "7096:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7107:6:20",
														"nodeType": "YulTypedName",
														"src": "7107:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7115:6:20",
														"nodeType": "YulTypedName",
														"src": "7115:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7123:6:20",
														"nodeType": "YulTypedName",
														"src": "7123:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7131:6:20",
														"nodeType": "YulTypedName",
														"src": "7131:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7139:6:20",
														"nodeType": "YulTypedName",
														"src": "7139:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7150:4:20",
														"nodeType": "YulTypedName",
														"src": "7150:4:20",
														"type": ""
													}
												],
												"src": "6946:489:20"
											},
											{
												"body": {
													"nativeSrc": "7621:217:20",
													"nodeType": "YulBlock",
													"src": "7621:217:20",
													"statements": [
														{
															"nativeSrc": "7631:27:20",
															"nodeType": "YulAssignment",
															"src": "7631:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7643:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7643:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7654:3:20",
																		"nodeType": "YulLiteral",
																		"src": "7654:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7639:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:20"
																},
																"nativeSrc": "7639:19:20",
																"nodeType": "YulFunctionCall",
																"src": "7639:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7631:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7674:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "7674:9:20"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7685:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7685:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7667:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7667:6:20"
																},
																"nativeSrc": "7667:25:20",
																"nodeType": "YulFunctionCall",
																"src": "7667:25:20"
															},
															"nativeSrc": "7667:25:20",
															"nodeType": "YulExpressionStatement",
															"src": "7667:25:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7712:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7723:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7723:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7708:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:20"
																		},
																		"nativeSrc": "7708:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7732:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7732:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7740:4:20",
																				"nodeType": "YulLiteral",
																				"src": "7740:4:20",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7728:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7728:3:20"
																		},
																		"nativeSrc": "7728:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7728:17:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7701:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7701:6:20"
																},
																"nativeSrc": "7701:45:20",
																"nodeType": "YulFunctionCall",
																"src": "7701:45:20"
															},
															"nativeSrc": "7701:45:20",
															"nodeType": "YulExpressionStatement",
															"src": "7701:45:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7766:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7766:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7777:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7777:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7762:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7762:3:20"
																		},
																		"nativeSrc": "7762:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7762:18:20"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7782:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7782:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7755:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:20"
																},
																"nativeSrc": "7755:34:20",
																"nodeType": "YulFunctionCall",
																"src": "7755:34:20"
															},
															"nativeSrc": "7755:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "7755:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7809:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "7809:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7820:2:20",
																				"nodeType": "YulLiteral",
																				"src": "7820:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7805:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7805:3:20"
																		},
																		"nativeSrc": "7805:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7805:18:20"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7825:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7825:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7798:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7798:6:20"
																},
																"nativeSrc": "7798:34:20",
																"nodeType": "YulFunctionCall",
																"src": "7798:34:20"
															},
															"nativeSrc": "7798:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "7798:34:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "7440:398:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7566:9:20",
														"nodeType": "YulTypedName",
														"src": "7566:9:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7577:6:20",
														"nodeType": "YulTypedName",
														"src": "7577:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7585:6:20",
														"nodeType": "YulTypedName",
														"src": "7585:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7593:6:20",
														"nodeType": "YulTypedName",
														"src": "7593:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7601:6:20",
														"nodeType": "YulTypedName",
														"src": "7601:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7612:4:20",
														"nodeType": "YulTypedName",
														"src": "7612:4:20",
														"type": ""
													}
												],
												"src": "7440:398:20"
											},
											{
												"body": {
													"nativeSrc": "7875:95:20",
													"nodeType": "YulBlock",
													"src": "7875:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7892:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7892:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7899:3:20",
																				"nodeType": "YulLiteral",
																				"src": "7899:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7904:10:20",
																				"nodeType": "YulLiteral",
																				"src": "7904:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7895:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:20"
																		},
																		"nativeSrc": "7895:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7895:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7885:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:20"
																},
																"nativeSrc": "7885:31:20",
																"nodeType": "YulFunctionCall",
																"src": "7885:31:20"
															},
															"nativeSrc": "7885:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "7885:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7932:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7932:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7935:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7935:4:20",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7925:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7925:6:20"
																},
																"nativeSrc": "7925:15:20",
																"nodeType": "YulFunctionCall",
																"src": "7925:15:20"
															},
															"nativeSrc": "7925:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "7925:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7956:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7956:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7959:4:20",
																		"nodeType": "YulLiteral",
																		"src": "7959:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7949:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:20"
																},
																"nativeSrc": "7949:15:20",
																"nodeType": "YulFunctionCall",
																"src": "7949:15:20"
															},
															"nativeSrc": "7949:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "7949:15:20"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7843:127:20",
												"nodeType": "YulFunctionDefinition",
												"src": "7843:127:20"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 192))\n        value6 := value_4\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2150": [
									{
										"length": 32,
										"start": 1508
									}
								],
								"2152": [
									{
										"length": 32,
										"start": 1466
									}
								],
								"2154": [
									{
										"length": 32,
										"start": 1424
									}
								],
								"2156": [
									{
										"length": 32,
										"start": 1589
									}
								],
								"2158": [
									{
										"length": 32,
										"start": 1629
									}
								],
								"2161": [
									{
										"length": 32,
										"start": 1716
									}
								],
								"2164": [
									{
										"length": 32,
										"start": 1761
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a2578063a9059cbb146101aa578063d505accf146101bd578063dd62ed3e146101d2575f5ffd5b806370a082311461014c5780637ecebe001461017457806384b0196e14610187575f5ffd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce567146101355780633644e51514610144575b5f5ffd5b6100d761020a565b6040516100e49190610c16565b60405180910390f35b6101006100fb366004610c4a565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610c72565b6102b3565b604051601281526020016100e4565b6101146102d6565b61011461015a366004610cac565b6001600160a01b03165f9081526020819052604090205490565b610114610182366004610cac565b6102e4565b61018f610301565b6040516100e49796959493929190610cc5565b6100d7610343565b6101006101b8366004610c4a565b610352565b6101d06101cb366004610d5b565b61035f565b005b6101146101e0366004610dc8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461021990610df9565b80601f016020809104026020016040519081016040528092919081815260200182805461024590610df9565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a781858561049a565b60019150505b92915050565b5f336102c08582856104ac565b6102cb858585610527565b506001949350505050565b5f6102df610584565b905090565b6001600160a01b0381165f908152600760205260408120546102ad565b5f6060805f5f5f60606103126106ad565b61031a6106da565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461021990610df9565b5f336102a7818585610527565b834211156103885760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886103d38c6001600160a01b03165f90815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f61042d82610707565b90505f61043c82878787610733565b9050896001600160a01b0316816001600160a01b031614610483576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161037f565b61048e8a8a8a61049a565b50505050505050505050565b6104a7838383600161075f565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610521578181101561051357604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161037f565b61052184848484035f61075f565b50505050565b6001600160a01b03831661055057604051634b637e8f60e11b81525f600482015260240161037f565b6001600160a01b0382166105795760405163ec442f0560e01b81525f600482015260240161037f565b6104a7838383610831565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156105dc57507f000000000000000000000000000000000000000000000000000000000000000046145b1561060657507f000000000000000000000000000000000000000000000000000000000000000090565b6102df604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60606102df7f00000000000000000000000000000000000000000000000000000000000000006005610957565b60606102df7f00000000000000000000000000000000000000000000000000000000000000006006610957565b5f6102ad610713610584565b8360405161190160f01b8152600281019290925260228201526042902090565b5f5f5f5f61074388888888610a00565b9250925092506107538282610ac8565b50909695505050505050565b6001600160a01b0384166107885760405163e602df0560e01b81525f600482015260240161037f565b6001600160a01b0383166107b157604051634a1406b160e11b81525f600482015260240161037f565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561052157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161082391815260200190565b60405180910390a350505050565b6001600160a01b03831661085b578060025f8282546108509190610e31565b909155506108cb9050565b6001600160a01b0383165f90815260208190526040902054818110156108ad5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161037f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108e757600280548290039055610905565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161094a91815260200190565b60405180910390a3505050565b606060ff83146109715761096a83610b84565b90506102ad565b81805461097d90610df9565b80601f01602080910402602001604051908101604052809291908181526020018280546109a990610df9565b80156109f45780601f106109cb576101008083540402835291602001916109f4565b820191905f5260205f20905b8154815290600101906020018083116109d757829003601f168201915b505050505090506102ad565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610a3957505f91506003905082610abe565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610a8a573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116610ab557505f925060019150829050610abe565b92505f91508190505b9450945094915050565b5f826003811115610adb57610adb610e50565b03610ae4575050565b6001826003811115610af857610af8610e50565b03610b165760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610b2a57610b2a610e50565b03610b4b5760405163fce698f760e01b81526004810182905260240161037f565b6003826003811115610b5f57610b5f610e50565b03610b80576040516335e2f38360e21b81526004810182905260240161037f565b5050565b60605f610b9083610bc1565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f60ff8216601f8111156102ad57604051632cd44ac360e21b815260040160405180910390fd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c286020830184610be8565b9392505050565b80356001600160a01b0381168114610c45575f5ffd5b919050565b5f5f60408385031215610c5b575f5ffd5b610c6483610c2f565b946020939093013593505050565b5f5f5f60608486031215610c84575f5ffd5b610c8d84610c2f565b9250610c9b60208501610c2f565b929592945050506040919091013590565b5f60208284031215610cbc575f5ffd5b610c2882610c2f565b60ff60f81b8816815260e060208201525f610ce360e0830189610be8565b8281036040840152610cf58189610be8565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b81811015610d4a578351835260209384019390920191600101610d2c565b50909b9a5050505050505050505050565b5f5f5f5f5f5f5f60e0888a031215610d71575f5ffd5b610d7a88610c2f565b9650610d8860208901610c2f565b95506040880135945060608801359350608088013560ff81168114610dab575f5ffd5b9699959850939692959460a0840135945060c09093013592915050565b5f5f60408385031215610dd9575f5ffd5b610de283610c2f565b9150610df060208401610c2f565b90509250929050565b600181811c90821680610e0d57607f821691505b602082108103610e2b57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220dcec420d9f7c50382e2b77a3c31c3372d4d7ca63b0c3f541ccff297131ef5c7864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH2 0x1D0 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x527 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DF PUSH2 0x584 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2AD JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 PUSH0 PUSH0 PUSH1 0x60 PUSH2 0x312 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x31A PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x527 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x3D3 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x42D DUP3 PUSH2 0x707 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x43C DUP3 DUP8 DUP8 DUP8 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x48E DUP11 DUP11 DUP11 PUSH2 0x49A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4A7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x75F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x521 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x521 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x75F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH2 0x4A7 DUP4 DUP4 DUP4 PUSH2 0x831 JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x5DC JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x606 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2DF PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DF PUSH32 0x0 PUSH1 0x5 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DF PUSH32 0x0 PUSH1 0x6 PUSH2 0x957 JUMP JUMPDEST PUSH0 PUSH2 0x2AD PUSH2 0x713 PUSH2 0x584 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x743 DUP9 DUP9 DUP9 DUP9 PUSH2 0xA00 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x753 DUP3 DUP3 PUSH2 0xAC8 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x521 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x823 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x85B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x850 SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8CB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x905 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x971 JUMPI PUSH2 0x96A DUP4 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x97D SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A9 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x2AD JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xA39 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAB5 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xABE JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xADB JUMPI PUSH2 0xADB PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xAE4 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xB16 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH2 0xB2A PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xB4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0xE50 JUMP JUMPDEST SUB PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x37F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB90 DUP4 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC64 DUP4 PUSH2 0xC2F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC8D DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP3 POP PUSH2 0xC9B PUSH1 0x20 DUP6 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC28 DUP3 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0xCE3 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0xBE8 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xCF5 DUP2 DUP10 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD4A JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD2C JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xD71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7A DUP9 PUSH2 0xC2F JUMP JUMPDEST SWAP7 POP PUSH2 0xD88 PUSH1 0x20 DUP10 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDE2 DUP4 PUSH2 0xC2F JUMP JUMPDEST SWAP2 POP PUSH2 0xDF0 PUSH1 0x20 DUP5 ADD PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE0D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xEC TIMESTAMP 0xD SWAP16 PUSH29 0x50382E2B77A3C31C3372D4D7CA63B0C3F541CCFF297131EF5C7864736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "249:110:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1181:14:20;;1174:22;1156:41;;1144:2;1129:18;3998:186:2;1016:187:20;2849:97:2;2927:12;;2849:97;;;1354:25:20;;;1342:2;1327:18;2849:97:2;1208:177:20;4776:244:2;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1911:36:20;;1899:2;1884:18;2707:82:2;1769:184:20;2659:112:4;;;:::i;3004:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;2409:143:4;;;;;;:::i;:::-;;:::i;5144:557:14:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1981:93:2:-;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;1683:672:4:-;;;;;;:::i;:::-;;:::i;:::-;;3551:140:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:7;4125:31:2;735:10:7;4141:7:2;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:7;4919:37:2;4935:4;735:10:7;4950:5:2;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:2;;4776:244;-1:-1:-1;;;;4776:244:2:o;2659:112:4:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;2409:143::-;-1:-1:-1;;;;;624:14:8;;2500:7:4;624:14:8;;;:7;:14;;;;;;2526:19:4;538:107:8;5144:557:14;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:14;;;-1:-1:-1;5482:212:14;;-1:-1:-1;5590:13:14;;-1:-1:-1;5625:4:14;;-1:-1:-1;5652:1:14;-1:-1:-1;5668:16:14;-1:-1:-1;5482:212:14;-1:-1:-1;5144:557:14:o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:7;3438:27:2;735:10:7;3455:2:2;3459:5;3438:9;:27::i;1683:672:4:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:4;;;;;1354:25:20;;;1327:18;;1935:33:4;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:8;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:4;2020:78;;;;;;5551:25:20;;;;-1:-1:-1;;;;;5612:32:20;;;5592:18;;;5585:60;5681:32;;;;5661:18;;;5654:60;5730:18;;;5723:34;5773:19;;;5766:35;5817:19;;;5810:35;;;5523:19;;2020:78:4;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:4;:6;-1:-1:-1;;;;;2223:15:4;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:4;;-1:-1:-1;;;;;6048:32:20;;;2261:35:4;;;6030:51:20;6117:32;;6097:18;;;6090:60;6003:18;;2261:35:4;5856:300:20;2219:88:4;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;-1:-1:-1;;;;;3657:18:2;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:37:2;;10576:310;;10656:5;10637:16;:24;10633:130;;;10688:60;;-1:-1:-1;;;10688:60:2;;-1:-1:-1;;;;;6381:32:20;;10688:60:2;;;6363:51:20;6430:18;;;6423:34;;;6473:18;;;6466:34;;;6336:18;;10688:60:2;6161:345:20;10633:130:2;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10504:388;10415:477;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:2;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:2;;5544:1;5517:30;;;6657:51:20;6630:18;;5517:30:2;6511:203:20;5472:86:2;-1:-1:-1;;;;;5571:16:2;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:2;;5639:1;5610:32;;;6657:51:20;6630:18;;5610:32:2;6511:203:20;5567:86:2;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;3845:262:14:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:14;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:14;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;7205:25:20;4226:11:14;7246:18:20;;;7239:34;;;;4239:14:14;7289:18:20;;;7282:34;4255:13:14;7332:18:20;;;7325:34;4278:4:14;7375:19:20;;;7368:61;4168:7:14;;7177:19:20;;4204:80:14;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;6021:126;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;4917:176::-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:15;3495:11;-1:-1:-1;;;3519:23:15;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;6887:260:13;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:13;;6887:260;-1:-1:-1;;;;;;6887:260:13:o;9701:432:2:-;-1:-1:-1;;;;;9813:19:2;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:2;;9884:1;9855:32;;;6657:51:20;6630:18;;9855:32:2;6511:203:20;9809:89:2;-1:-1:-1;;;;;9911:21:2;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:2;;9983:1;9955:31;;;6657:51:20;6630:18;;9955:31:2;6511:203:20;9907:90:2;-1:-1:-1;;;;;10006:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:2;10094:5;-1:-1:-1;;;;;10085:31:2;;10110:5;10085:31;;;;1354:25:20;;1342:2;1327:18;;1208:177;10085:31:2;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;6381:32:20;;6386:50:2;;;6363:51:20;6430:18;;;6423:34;;;6473:18;;;6466:34;;;6336:18;;6386:50:2;6161:345:20;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;1354::20;;1342:2;1327:18;;1208:177;7083:25:2;;;;;;;;6008:1107;;;:::o;3358:267:10:-;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:13;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:13;;-1:-1:-1;6385:30:13;;-1:-1:-1;6417:1:13;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;7667:25:20;;;7740:4;7728:17;;7708:18;;;7701:45;;;;7762:18;;;7755:34;;;7805:18;;;7798:34;;;6541:24:13;;7639:19:20;;6541:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:13;;-1:-1:-1;;6541:24:13;;;-1:-1:-1;;;;;;;6579:20:13;;6575:113;;-1:-1:-1;6631:1:13;;-1:-1:-1;6635:29:13;;-1:-1:-1;6631:1:13;;-1:-1:-1;6615:62:13;;6575:113;6706:6;-1:-1:-1;6714:20:13;;-1:-1:-1;6714:20:13;;-1:-1:-1;5203:1551:13;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:13;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:13;;;;;1354:25:20;;;1327:18;;7634:46:13;1208:177:20;7563:243:13;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:13;;;;;1354:25:20;;;1327:18;;7763:32:13;1208:177:20;7697:109:13;7280:532;;:::o;2078:378:10:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:10;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:10;;;-1:-1:-1;2408:4:10;2399:14;;2392:28;;;;-1:-1:-1;2363:16:10;2078:378::o;2528:245::-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:10;;;;;;;;;;;14:289:20;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;:::-;469:53;308:220;-1:-1:-1;;;308:220:20:o;533:173::-;601:20;;-1:-1:-1;;;;;650:31:20;;640:42;;630:70;;696:1;693;686:12;630:70;533:173;;;:::o;711:300::-;779:6;787;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;879:29;898:9;879:29;:::i;:::-;869:39;977:2;962:18;;;;949:32;;-1:-1:-1;;;711:300:20:o;1390:374::-;1467:6;1475;1483;1536:2;1524:9;1515:7;1511:23;1507:32;1504:52;;;1552:1;1549;1542:12;1504:52;1575:29;1594:9;1575:29;:::i;:::-;1565:39;;1623:38;1657:2;1646:9;1642:18;1623:38;:::i;:::-;1390:374;;1613:48;;-1:-1:-1;;;1730:2:20;1715:18;;;;1702:32;;1390:374::o;2140:186::-;2199:6;2252:2;2240:9;2231:7;2227:23;2223:32;2220:52;;;2268:1;2265;2258:12;2220:52;2291:29;2310:9;2291:29;:::i;2331:1238::-;2737:3;2732;2728:13;2720:6;2716:26;2705:9;2698:45;2779:3;2774:2;2763:9;2759:18;2752:31;2679:4;2806:46;2847:3;2836:9;2832:19;2824:6;2806:46;:::i;:::-;2900:9;2892:6;2888:22;2883:2;2872:9;2868:18;2861:50;2934:33;2960:6;2952;2934:33;:::i;:::-;2998:2;2983:18;;2976:34;;;-1:-1:-1;;;;;3047:32:20;;3041:3;3026:19;;3019:61;3067:3;3096:19;;3089:35;;;3161:22;;;3155:3;3140:19;;3133:51;3233:13;;3255:22;;;3305:2;3331:15;;;;-1:-1:-1;3293:15:20;;;;-1:-1:-1;3374:169:20;3388:6;3385:1;3382:13;3374:169;;;3449:13;;3437:26;;3492:2;3518:15;;;;3483:12;;;;3410:1;3403:9;3374:169;;;-1:-1:-1;3560:3:20;;2331:1238;-1:-1:-1;;;;;;;;;;;2331:1238:20:o;3574:903::-;3685:6;3693;3701;3709;3717;3725;3733;3786:3;3774:9;3765:7;3761:23;3757:33;3754:53;;;3803:1;3800;3793:12;3754:53;3826:29;3845:9;3826:29;:::i;:::-;3816:39;;3874:38;3908:2;3897:9;3893:18;3874:38;:::i;:::-;3864:48;-1:-1:-1;3981:2:20;3966:18;;3953:32;;-1:-1:-1;4082:2:20;4067:18;;4054:32;;-1:-1:-1;4164:3:20;4149:19;;4136:33;4213:4;4200:18;;4188:31;;4178:59;;4233:1;4230;4223:12;4178:59;3574:903;;;;-1:-1:-1;3574:903:20;;;;4256:7;4336:3;4321:19;;4308:33;;-1:-1:-1;4440:3:20;4425:19;;;4412:33;;3574:903;-1:-1:-1;;3574:903:20:o;4482:260::-;4550:6;4558;4611:2;4599:9;4590:7;4586:23;4582:32;4579:52;;;4627:1;4624;4617:12;4579:52;4650:29;4669:9;4650:29;:::i;:::-;4640:39;;4698:38;4732:2;4721:9;4717:18;4698:38;:::i;:::-;4688:48;;4482:260;;;;;:::o;4747:380::-;4826:1;4822:12;;;;4869;;;4890:61;;4944:4;4936:6;4932:17;4922:27;;4890:61;4997:2;4989:6;4986:14;4966:18;4963:38;4960:161;;5043:10;5038:3;5034:20;5031:1;5024:31;5078:4;5075:1;5068:15;5106:4;5103:1;5096:15;4960:161;;4747:380;;;:::o;6719:222::-;6784:9;;;6805:10;;;6802:133;;;6857:10;6852:3;6848:20;6845:1;6838:31;6892:4;6889:1;6882:15;6920:4;6917:1;6910:15;7843:127;7904:10;7899:3;7895:20;7892:1;7885:31;7935:4;7932:1;7925:15;7959:4;7956:1;7949:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "747600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24734",
								"balanceOf(address)": "2560",
								"decimals()": "265",
								"eip712Domain()": "infinite",
								"name()": "infinite",
								"nonces(address)": "2613",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51259",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "160"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 294,
									"end": 357,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 294,
									"end": 357,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 294,
									"end": 357,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 294,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 357,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 294,
									"end": 357,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 357,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 357,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 294,
									"end": 357,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 357,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 294,
									"end": 357,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1629,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1620,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 14,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2914,
									"end": 2939,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2955,
									"end": 2973,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2955,
									"end": 2973,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2955,
									"end": 2973,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2948,
									"end": 2982,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 2948,
									"end": 2982,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2948,
									"end": 2982,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 2948,
									"end": 2982,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2998,
									"end": 3016,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 2998,
									"end": 3016,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2998,
									"end": 3016,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2991,
									"end": 3025,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3059,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 3041,
									"end": 3059,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3041,
									"end": 3059,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3034,
									"end": 3068,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 3084,
									"end": 3103,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 3084,
									"end": 3103,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3084,
									"end": 3103,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3077,
									"end": 3138,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2886,
									"end": 2905,
									"name": "PUSH",
									"source": 20,
									"value": "C0"
								},
								{
									"begin": 2886,
									"end": 2905,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 14,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2887,
									"end": 3227,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2887,
									"end": 3227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2983,
									"end": 2994,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3032,
									"end": 3034,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3016,
									"end": 3021,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3029,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3034,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3006,
									"end": 3221,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3006,
									"end": 3221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3006,
									"end": 3221,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3057,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 3071,
									"end": 3076,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3057,
									"end": 3070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3057,
									"end": 3077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3057,
									"end": 3077,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 3057,
									"end": 3077,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3050,
									"end": 3077,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3050,
									"end": 3077,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3050,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3050,
									"end": 3077,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3006,
									"end": 3221,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3006,
									"end": 3221,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3134,
									"end": 3139,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3108,
									"end": 3154,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3149,
									"end": 3154,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3134,
									"end": 3139,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3108,
									"end": 3154,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3108,
									"end": 3154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3108,
									"end": 3154,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3108,
									"end": 3154,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3006,
									"end": 3221,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3006,
									"end": 3221,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 3227,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 3227,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 3227,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 3227,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 3227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "305A27A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 20,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 20,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 20,
									"value": "38"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "45"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 20,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 20,
									"value": "45"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "46"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 20,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 20,
									"value": "46"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "49"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 20
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 20,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "50"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 20,
									"value": "50"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 20,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 20,
									"value": "51"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "53"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "51"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 20,
									"value": "53"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 20,
									"value": "49"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "57"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "57"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "37"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 20,
									"value": "57"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "58"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "59"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 20
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "38"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 20,
									"value": "59"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 20,
									"value": "58"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "62"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 20,
									"value": "62"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 20,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "53"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 20,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 20,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3149,
									"end": 3567,
									"name": "tag",
									"source": 20,
									"value": "33"
								},
								{
									"begin": 3149,
									"end": 3567,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3298,
									"end": 3300,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3287,
									"end": 3296,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3330,
									"end": 3336,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3324,
									"end": 3337,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 3373,
									"end": 3379,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 3368,
									"end": 3370,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3357,
									"end": 3366,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 3353,
									"end": 3371,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3346,
									"end": 3380,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 3432,
									"end": 3438,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 3427,
									"end": 3429,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3419,
									"end": 3425,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3415,
									"end": 3430,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3410,
									"end": 3412,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 3399,
									"end": 3408,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3395,
									"end": 3413,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3389,
									"end": 3439,
									"name": "MCOPY",
									"source": 20
								},
								{
									"begin": 3488,
									"end": 3489,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3483,
									"end": 3485,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 3474,
									"end": 3480,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3463,
									"end": 3472,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3455,
									"end": 3486,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3448,
									"end": 3490,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 3558,
									"end": 3560,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3553,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 3547,
									"end": 3554,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 3542,
									"end": 3544,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 3534,
									"end": 3540,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3530,
									"end": 3545,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3526,
									"end": 3555,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 3515,
									"end": 3524,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 3511,
									"end": 3556,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3507,
									"end": 3561,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3499,
									"end": 3561,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3499,
									"end": 3561,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3499,
									"end": 3561,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3149,
									"end": 3567,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3149,
									"end": 3567,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3149,
									"end": 3567,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3149,
									"end": 3567,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3149,
									"end": 3567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3572,
									"end": 3869,
									"name": "tag",
									"source": 20,
									"value": "35"
								},
								{
									"begin": 3572,
									"end": 3869,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3690,
									"end": 3702,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 3690,
									"end": 3702,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 3737,
									"end": 3741,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3726,
									"end": 3742,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 3726,
									"end": 3742,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3726,
									"end": 3742,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3720,
									"end": 3743,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 3720,
									"end": 3743,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3690,
									"end": 3702,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3771,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3771,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 3752,
									"end": 3863,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 3752,
									"end": 3863,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "46"
								},
								{
									"begin": 3752,
									"end": 3863,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3829,
									"end": 3833,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3825,
									"end": 3842,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3825,
									"end": 3842,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3825,
									"end": 3842,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3825,
									"end": 3842,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 3822,
									"end": 3823,
									"name": "PUSH",
									"source": 20,
									"value": "3"
								},
								{
									"begin": 3818,
									"end": 3843,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 3814,
									"end": 3852,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 3803,
									"end": 3853,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 3803,
									"end": 3853,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3572,
									"end": 3869,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3572,
									"end": 3869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3572,
									"end": 3869,
									"name": "tag",
									"source": 20,
									"value": "42"
								},
								{
									"begin": 3572,
									"end": 3869,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "C0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "100"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "120"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "140"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2164"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2161"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2158"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2156"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2154"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2152"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "ASSIGNIMMUTABLE",
									"source": 19,
									"value": "2150"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 359,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dcec420d9f7c50382e2b77a3c31c3372d4d7ca63b0c3f541ccff297131ef5c7864736f6c634300081c0033",
									".code": [
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "95D89B41"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "95D89B41"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "A9059CBB"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "D505ACCF"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "DD62ED3E"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "70A08231"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "7ECEBE00"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "84B0196E"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "tag",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "6FDDE03"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "95EA7B3"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "18160DDD"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "23B872DD"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "313CE567"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "3644E515"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "tag",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 359,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1174,
											"end": 1196,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1203,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1911,
											"end": 1947,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1911,
											"end": 1947,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1901,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1902,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1953,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2659,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2659,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2659,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2659,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2409,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2409,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1683,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1683,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2659,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2744,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2744,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2409,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 538,
											"end": 645,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP12",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP11",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 1901,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 1912,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1979,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1882,
											"end": 1979,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313C8981"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1968,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1979,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1882,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1119,
											"name": "PUSH",
											"source": 4,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2048,
											"end": 2053,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2062,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2081,
											"end": 2086,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 819,
											"end": 826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2087,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2071,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5576,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 5551,
											"end": 5576,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5551,
											"end": 5576,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 5551,
											"end": 5576,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5612,
											"end": 5644,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 5612,
											"end": 5644,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5612,
											"end": 5644,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5592,
											"end": 5610,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5592,
											"end": 5610,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5592,
											"end": 5610,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5585,
											"end": 5645,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5681,
											"end": 5713,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5654,
											"end": 5714,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5723,
											"end": 5757,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5773,
											"end": 5792,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 5773,
											"end": 5792,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5773,
											"end": 5792,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5766,
											"end": 5801,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5817,
											"end": 5836,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 5817,
											"end": 5836,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5817,
											"end": 5836,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5810,
											"end": 5845,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5810,
											"end": 5845,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5810,
											"end": 5845,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2098,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2099,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2099,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2099,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2142,
											"end": 2152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2125,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2153,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2125,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2110,
											"end": 2153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2181,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2238,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2219,
											"end": 2307,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "25C00723"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6081,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6090,
											"end": 6150,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2261,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5856,
											"end": 6156,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2219,
											"end": 2307,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2219,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2326,
											"end": 2331,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2347,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2317,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2348,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2317,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 2355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6381,
											"end": 6413,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6381,
											"end": 6413,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6363,
											"end": 6414,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6423,
											"end": 6457,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6423,
											"end": 6457,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6423,
											"end": 6457,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6336,
											"end": 6354,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 6336,
											"end": 6354,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6161,
											"end": 6506,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 6708,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6511,
											"end": 6714,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 6708,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6511,
											"end": 6714,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2154"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2152"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2150"
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 14,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7205,
											"end": 7230,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2156"
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7239,
											"end": 7273,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7239,
											"end": 7273,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7239,
											"end": 7273,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7239,
											"end": 7273,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2158"
										},
										{
											"begin": 7289,
											"end": 7307,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 7289,
											"end": 7307,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7289,
											"end": 7307,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7282,
											"end": 7316,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 14
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7325,
											"end": 7359,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 7375,
											"end": 7394,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 7375,
											"end": 7394,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7375,
											"end": 7394,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7368,
											"end": 7429,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7177,
											"end": 7196,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 7177,
											"end": 7196,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2161"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "2164"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3501,
											"end": 3505,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3495,
											"end": 3506,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3555,
											"end": 3594,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3555,
											"end": 3594,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3555,
											"end": 3594,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3555,
											"end": 3594,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3614,
											"end": 3628,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3614,
											"end": 3628,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3641,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3326,
											"end": 3700,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6887,
											"end": 7147,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 6887,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 7062,
											"end": 7066,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7068,
											"end": 7069,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7071,
											"end": 7072,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7074,
											"end": 7075,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 7051,
											"end": 7076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7076,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7076,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7076,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7086,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7086,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 7086,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7086,
											"end": 7114,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 7086,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7140,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 6887,
											"end": 7147,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 7147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 6708,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6511,
											"end": 6714,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 6708,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6511,
											"end": 6714,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6381,
											"end": 6413,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6381,
											"end": 6413,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6363,
											"end": 6414,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6423,
											"end": 6457,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6423,
											"end": 6457,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6423,
											"end": 6457,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6466,
											"end": 6500,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6336,
											"end": 6354,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 6336,
											"end": 6354,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6161,
											"end": 6506,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3358,
											"end": 3625,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3358,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3465,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3481,
											"end": 3527,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3527,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3559,
											"end": 3564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3550,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3543,
											"end": 3565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3543,
											"end": 3565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3543,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3543,
											"end": 3565,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3596,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3596,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6283,
											"end": 6349,
											"name": "PUSH",
											"source": 13,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6524,
											"end": 6538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7692,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 7667,
											"end": 7692,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7667,
											"end": 7692,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 7728,
											"end": 7745,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 7728,
											"end": 7745,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7701,
											"end": 7746,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7701,
											"end": 7746,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7701,
											"end": 7746,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7701,
											"end": 7746,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7755,
											"end": 7789,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 7755,
											"end": 7789,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7755,
											"end": 7789,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7798,
											"end": 7832,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 7798,
											"end": 7832,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7798,
											"end": 7832,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7639,
											"end": 7658,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 7639,
											"end": 7658,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7366,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7462,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7567,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7701,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2078,
											"end": 2456,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2078,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2413,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2420,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2420,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2773,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2528,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 2596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2665,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2625,
											"end": 2665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2665,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2690,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2744,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2675,
											"end": 2744,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CD44AC3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2733,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14,
											"end": 303,
											"name": "tag",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 14,
											"end": 303,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 177,
											"end": 183,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 170,
											"end": 174,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 163,
											"end": 168,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 159,
											"end": 175,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 150,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 143,
											"end": 157,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 137,
											"end": 184,
											"name": "MCOPY",
											"source": 20
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 226,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 213,
											"end": 219,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 208,
											"end": 211,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 204,
											"end": 220,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 200,
											"end": 227,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 193,
											"end": 231,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 281,
											"end": 288,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 276,
											"end": 278,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 264,
											"end": 279,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 260,
											"end": 289,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 251,
											"end": 290,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 247,
											"end": 297,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 240,
											"end": 297,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 308,
											"end": 528,
											"name": "tag",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 308,
											"end": 528,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 439,
											"end": 460,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 420,
											"end": 424,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 503,
											"end": 521,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 495,
											"end": 501,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 477,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 477,
											"end": 522,
											"name": "tag",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 469,
											"end": 522,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 308,
											"end": 528,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 308,
											"end": 528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 533,
											"end": 706,
											"name": "tag",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 533,
											"end": 706,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 601,
											"end": 621,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 601,
											"end": 621,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 650,
											"end": 681,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 650,
											"end": 681,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 640,
											"end": 682,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 640,
											"end": 682,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 630,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "256"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 696,
											"end": 697,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 694,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 698,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 630,
											"end": 700,
											"name": "tag",
											"source": 20,
											"value": "256"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 533,
											"end": 706,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 533,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "tag",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 779,
											"end": 785,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 793,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 815,
											"end": 838,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 811,
											"end": 843,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 808,
											"end": 860,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "258"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 856,
											"end": 857,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 858,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 20,
											"value": "258"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "259"
										},
										{
											"begin": 898,
											"end": 907,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 879,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 879,
											"end": 908,
											"name": "tag",
											"source": 20,
											"value": "259"
										},
										{
											"begin": 879,
											"end": 908,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 869,
											"end": 908,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 962,
											"end": 980,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 949,
											"end": 981,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 949,
											"end": 981,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 711,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "tag",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1467,
											"end": 1473,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 1524,
											"end": 1533,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 1511,
											"end": 1534,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "tag",
											"source": 20,
											"value": "263"
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 1594,
											"end": 1603,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 1575,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "tag",
											"source": 20,
											"value": "264"
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1565,
											"end": 1604,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1565,
											"end": 1604,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 1623,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "tag",
											"source": 20,
											"value": "265"
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 1613,
											"end": 1661,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1613,
											"end": 1661,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1732,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1390,
											"end": 1764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2140,
											"end": 2326,
											"name": "tag",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 2140,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2254,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2231,
											"end": 2238,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2227,
											"end": 2250,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2223,
											"end": 2255,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "tag",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2291,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "254"
										},
										{
											"begin": 2310,
											"end": 2319,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2291,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 2291,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2331,
											"end": 3569,
											"name": "tag",
											"source": 20,
											"value": "57"
										},
										{
											"begin": 2331,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "PUSH",
											"source": 20,
											"value": "F8"
										},
										{
											"begin": 2728,
											"end": 2741,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 2720,
											"end": 2726,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 2716,
											"end": 2742,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2705,
											"end": 2714,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2698,
											"end": 2743,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 2774,
											"end": 2776,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2759,
											"end": 2777,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2752,
											"end": 2783,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 2847,
											"end": 2850,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2832,
											"end": 2851,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 2806,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 2806,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2806,
											"end": 2852,
											"name": "tag",
											"source": 20,
											"value": "272"
										},
										{
											"begin": 2806,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2900,
											"end": 2909,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2892,
											"end": 2898,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2883,
											"end": 2885,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2861,
											"end": 2911,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 2960,
											"end": 2966,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "249"
										},
										{
											"begin": 2934,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "tag",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2998,
											"end": 3000,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 3079,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3047,
											"end": 3079,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 3041,
											"end": 3044,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3080,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3067,
											"end": 3070,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 3096,
											"end": 3115,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3096,
											"end": 3115,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3183,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3183,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3161,
											"end": 3183,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3155,
											"end": 3158,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 3140,
											"end": 3159,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3133,
											"end": 3184,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3233,
											"end": 3246,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3233,
											"end": 3246,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3255,
											"end": 3277,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3255,
											"end": 3277,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3255,
											"end": 3277,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3305,
											"end": 3307,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "tag",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3382,
											"end": 3395,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3449,
											"end": 3462,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3449,
											"end": 3462,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3437,
											"end": 3463,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3437,
											"end": 3463,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 3533,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3518,
											"end": 3533,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3518,
											"end": 3533,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3518,
											"end": 3533,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3410,
											"end": 3411,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 3403,
											"end": 3412,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "274"
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "tag",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 3374,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3560,
											"end": 3563,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3560,
											"end": 3563,
											"name": "SWAP12",
											"source": 20
										},
										{
											"begin": 2331,
											"end": 3569,
											"name": "SWAP11",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2331,
											"end": 3569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "tag",
											"source": 20,
											"value": "67"
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3707,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3789,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 3761,
											"end": 3784,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3757,
											"end": 3790,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3805,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "tag",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3826,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 3826,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 3826,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3826,
											"end": 3855,
											"name": "tag",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 3826,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3816,
											"end": 3855,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 3816,
											"end": 3855,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 3908,
											"end": 3910,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 3874,
											"end": 3912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "tag",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 3874,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3864,
											"end": 3912,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3953,
											"end": 3985,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3953,
											"end": 3985,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4054,
											"end": 4086,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 4054,
											"end": 4086,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4136,
											"end": 4169,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 4213,
											"end": 4217,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4188,
											"end": 4219,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4188,
											"end": 4219,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 4178,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 4178,
											"end": 4237,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4235,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4178,
											"end": 4237,
											"name": "tag",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 4178,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP10",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 4256,
											"end": 4263,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 4336,
											"end": 4339,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 4321,
											"end": 4340,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4321,
											"end": 4340,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4308,
											"end": 4341,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 4308,
											"end": 4341,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4440,
											"end": 4443,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 4425,
											"end": 4444,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4425,
											"end": 4444,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 4425,
											"end": 4444,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4412,
											"end": 4445,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 4412,
											"end": 4445,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3574,
											"end": 4477,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 4477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4742,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 4482,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4550,
											"end": 4556,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4564,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4613,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4608,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4590,
											"end": 4597,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4586,
											"end": 4609,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4582,
											"end": 4614,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4579,
											"end": 4631,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4579,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 4579,
											"end": 4631,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4625,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4629,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4579,
											"end": 4631,
											"name": "tag",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 4579,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 4669,
											"end": 4678,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 4650,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "tag",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4640,
											"end": 4679,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4640,
											"end": 4679,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4698,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4698,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "250"
										},
										{
											"begin": 4698,
											"end": 4736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4698,
											"end": 4736,
											"name": "tag",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 4698,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4688,
											"end": 4736,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4688,
											"end": 4736,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4742,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4742,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4742,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4742,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4742,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4482,
											"end": 4742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4747,
											"end": 5127,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 4747,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 4822,
											"end": 4834,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4822,
											"end": 4834,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4822,
											"end": 4834,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 4822,
											"end": 4834,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4890,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 4890,
											"end": 4951,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4944,
											"end": 4948,
											"name": "PUSH",
											"source": 20,
											"value": "7F"
										},
										{
											"begin": 4936,
											"end": 4942,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4932,
											"end": 4949,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4922,
											"end": 4949,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4922,
											"end": 4949,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4890,
											"end": 4951,
											"name": "tag",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 4890,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4986,
											"end": 5000,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4963,
											"end": 5001,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4960,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 4960,
											"end": 5121,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 5034,
											"end": 5054,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 5031,
											"end": 5032,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 5103,
											"end": 5104,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5111,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4960,
											"end": 5121,
											"name": "tag",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 4960,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4960,
											"end": 5121,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4747,
											"end": 5127,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4747,
											"end": 5127,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4747,
											"end": 5127,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4747,
											"end": 5127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6719,
											"end": 6941,
											"name": "tag",
											"source": 20,
											"value": "186"
										},
										{
											"begin": 6719,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 6802,
											"end": 6935,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6802,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "81"
										},
										{
											"begin": 6802,
											"end": 6935,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6857,
											"end": 6867,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 6852,
											"end": 6855,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 6848,
											"end": 6868,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 6845,
											"end": 6846,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6869,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6892,
											"end": 6896,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 6889,
											"end": 6890,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 6882,
											"end": 6897,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6920,
											"end": 6924,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6925,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 7843,
											"end": 7970,
											"name": "tag",
											"source": 20,
											"value": "217"
										},
										{
											"begin": 7843,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7904,
											"end": 7914,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 7899,
											"end": 7902,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 7895,
											"end": 7915,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7885,
											"end": 7916,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7935,
											"end": 7939,
											"name": "PUSH",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 7925,
											"end": 7940,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7964,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.1.0/utils/Context.sol",
								"@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
								"@openzeppelin/contracts@5.1.0/utils/Panic.sol",
								"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.1.0/utils/Strings.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
								"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
								"contract-a9e49ce8b8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-a9e49ce8b8.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts@5.1.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.1.0/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts@5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts@5.1.0/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts@5.1.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contract-a9e49ce8b8.sol\":{\"keccak256\":\"0xe2c971409e7d600555c4e9fa96b1b051200332fab2274c1a200c82707e1a717f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb9cdf79ad251a4ef36304face2b646408685ae3a5346ba0525aa6be0b641b4\",\"dweb:/ipfs/QmT6XA9QSMR96gondg4cqPjMq5qoC8Kmq8BwHc9a5qhXMm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2166,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2168,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1014,
								"contract": "contract-a9e49ce8b8.sol:MyToken",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "IERC5267",
							"nameLocation": "143:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 4,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "247:28:0"
								},
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 7,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "537:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "569:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "633:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "698:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 19,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ArrayTypeName",
													"src": "698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:0"
									},
									"scope": 24,
									"src": "426:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "133:605:0",
							"usedErrors": [],
							"usedEvents": [
								4
							]
						}
					],
					"src": "107:632:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							161
						],
						"IERC20Errors": [
							66
						],
						"IERC721Errors": [
							114
						]
					},
					"id": 162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 36,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 41,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 46,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 55,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 60,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 65,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 162,
							"src": "280:1764:1",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 72,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 77,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 86,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 91,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 96,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 103,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 108,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 113,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 162,
							"src": "2190:2092:1",
							"usedErrors": [
								72,
								77,
								86,
								91,
								96,
								103,
								108,
								113
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 126,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 131,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 136,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 143,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 148,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 153,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 160,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 162,
							"src": "4430:2107:1",
							"usedErrors": [
								126,
								131,
								136,
								143,
								148,
								153,
								160
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1000
						],
						"ERC20": [
							676
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							934
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 163,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 755,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 164,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 935,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 166,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 934,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 1001,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 168,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1000,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 162,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 66,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1000,
										"src": "1133:7:2"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 175,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "1142:6:2"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 177,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 934,
										"src": "1150:14:2"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 179,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 66,
										"src": "1166:12:2"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								66,
								934,
								754,
								1000
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 189,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 676,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										921
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 218,
												"id": 220,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 676,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 676,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										933
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 234,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 676,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 676,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										711
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 260,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 676,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 274,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 271,
												"id": 284,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 676,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 296,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"id": 299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 676,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 313,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 312,
												"id": 325,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 676,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 357,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 676,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 381,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 385,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 391,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 390,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 396,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 676,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																428
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 428,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 453,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 432,
															"initialValue": {
																"baseExpression": {
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 430,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 443,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 442,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 437,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 438,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 428,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 439,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 436,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 441,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 452,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"id": 445,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 448,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 467,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 469,
																			"indexExpression": {
																				"id": 468,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 411,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 465,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 461,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 464,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 676,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 492,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 497,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 676,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 536,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 676,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 627,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 676,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 586,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 585,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 591,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 594,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 595,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 600,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 606,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 617,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 576,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 620,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 676,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 661,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 660,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 657,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 654,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 659,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 671,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 663,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 664,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 666,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 662,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				567,
																				627
																			],
																			"referencedDeclaration": 627,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 676,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "1106:9788:2",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 679,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 688,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 697,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 754,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 754,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 754,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 754,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 754,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 754,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 755,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
					"exportedSymbols": {
						"ECDSA": [
							2129
						],
						"EIP712": [
							2356
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							908
						],
						"IERC20Permit": [
							970
						],
						"Nonces": [
							1068
						]
					},
					"id": 909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 971,
							"src": "148:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 757,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 970,
										"src": "156:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 677,
							"src": "197:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 759,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "205:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
							"file": "../../../utils/cryptography/ECDSA.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 2130,
							"src": "233:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2129,
										"src": "241:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
							"file": "../../../utils/cryptography/EIP712.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 2357,
							"src": "294:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2356,
										"src": "302:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
							"file": "../../../utils/Nonces.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 1069,
							"src": "357:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "Nonces",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1068,
										"src": "365:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 768,
										"name": "ERC20",
										"nameLocations": [
											"931:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "931:5:4"
									},
									"id": 769,
									"nodeType": "InheritanceSpecifier",
									"src": "931:5:4"
								},
								{
									"baseName": {
										"id": 770,
										"name": "IERC20Permit",
										"nameLocations": [
											"938:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "938:12:4"
									},
									"id": 771,
									"nodeType": "InheritanceSpecifier",
									"src": "938:12:4"
								},
								{
									"baseName": {
										"id": 772,
										"name": "EIP712",
										"nameLocations": [
											"952:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2356,
										"src": "952:6:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "952:6:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "Nonces",
										"nameLocations": [
											"960:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1068,
										"src": "960:6:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "960:6:4"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 767,
								"nodeType": "StructuredDocumentation",
								"src": "408:489:4",
								"text": " @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 908,
							"linearizedBaseContracts": [
								908,
								1068,
								2356,
								24,
								970,
								676,
								66,
								934,
								754,
								1000
							],
							"name": "ERC20Permit",
							"nameLocation": "916:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 780,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "998:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 908,
									"src": "973:146:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 776,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "973:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 778,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1034:84:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 777,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1024:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 779,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1024:95:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1126:52:4",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 785,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1189:23:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1221:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "1213:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:18:4"
									},
									"src": "1183:48:4"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "1237:45:4",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 792,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1293:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1322:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1314:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1338:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1330:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:31:4"
									},
									"src": "1287:58:4"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "1627:2:4",
										"statements": []
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "1351:221:4",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."
									},
									"id": 803,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 798,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 795,
													"src": "1616:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1622:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 800,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 797,
												"name": "EIP712",
												"nameLocations": [
													"1609:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2356,
												"src": "1609:6:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1609:17:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1603:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "1589:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1589:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1588:20:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1627:0:4"
									},
									"scope": 908,
									"src": "1577:52:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "1872:483:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 821,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1886:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1892:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1886:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 823,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1904:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1886:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "1882:97:4",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "1914:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 826,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "1959:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 825,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "1935:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1935:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 828,
															"nodeType": "RevertStatement",
															"src": "1928:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1997:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "1989:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 831,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 836,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2031:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 837,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "2048:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 838,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "2055:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2064:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 841,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "2081:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 840,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "2071:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2071:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 843,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "2089:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 834,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2020:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2024:6:4",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2020:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2020:78:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 833,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2010:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2010:89:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:110:4"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2118:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2110:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 847,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2110:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"arguments": [
														{
															"id": 850,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2142:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 849,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "2125:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2125:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2110:43:4"
											},
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2172:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2164:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 853,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2164:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"arguments": [
														{
															"id": 857,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2195:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 858,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2201:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 859,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "2204:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 860,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "2207:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 855,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "2181:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2129_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2187:7:4",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2079,
														"src": "2181:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2164:45:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2223:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 864,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "2233:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2223:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "2219:88:4",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "2240:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 867,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "2282:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 868,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "2290:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 866,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "2261:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2261:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "2254:42:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "2326:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "2333:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2342:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "2317:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "2317:31:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "1635:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1692:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1716:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1708:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1739:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1731:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1764:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1756:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1787:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1779:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1811:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1805:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 813,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1805:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1830:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1822:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1849:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1841:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:158:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1872:0:4"
									},
									"scope": 908,
									"src": "1683:672:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										963,
										1027
									],
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "2509:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "2539:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 891,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2526:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$908_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2532:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1027,
														"src": "2526:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 895,
												"nodeType": "Return",
												"src": "2519:26:4"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "2361:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2418:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 887,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 885,
												"name": "IERC20Permit",
												"nameLocations": [
													"2469:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 970,
												"src": "2469:12:4"
											},
											{
												"id": 886,
												"name": "Nonces",
												"nameLocations": [
													"2483:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1068,
												"src": "2483:6:4"
											}
										],
										"src": "2460:30:4"
									},
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2500:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2500:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:9:4"
									},
									"scope": 908,
									"src": "2409:143:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										969
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2727:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 903,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "2744:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 902,
												"id": 905,
												"nodeType": "Return",
												"src": "2737:27:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2558:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2668:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:2:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2718:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 900,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:9:4"
									},
									"scope": 908,
									"src": "2659:112:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 909,
							"src": "898:1875:4",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								785,
								792,
								1010,
								1134,
								1136,
								1792,
								1797,
								1802
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "122:2652:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						],
						"IERC20Metadata": [
							934
						]
					},
					"id": 935,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 755,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 911,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 914,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "306:6:5"
									},
									"id": 915,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 934,
							"linearizedBaseContracts": [
								934,
								754
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 934,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 934,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 930,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 934,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 935,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							970
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 936,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 937,
								"nodeType": "StructuredDocumentation",
								"src": "149:1965:6",
								"text": " @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 970,
							"linearizedBaseContracts": [
								970
							],
							"name": "IERC20Permit",
							"nameLocation": "2125:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2144:850:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3008:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3032:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3024:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3055:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3047:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3080:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3072:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3103:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3095:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3127:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3121:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 947,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3146:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3138:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3165:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3157:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 951,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:158:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:0:6"
									},
									"scope": 970,
									"src": "2999:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "3188:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3496:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3511:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3503:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3502:15:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3541:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:9:6"
									},
									"scope": 970,
									"src": "3487:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "3556:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3751:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3793:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 966,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:9:6"
									},
									"scope": 970,
									"src": "3742:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 971,
							"src": "2115:1689:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3682:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.1.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1000
						]
					},
					"id": 1001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 973,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1000,
							"linearizedBaseContracts": [
								1000
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 978,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 977,
												"id": 980,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1000,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 987,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 986,
												"id": 989,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1000,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 995,
												"id": 997,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1000,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1001,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.1.0/utils/Nonces.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Nonces.sol",
					"exportedSymbols": {
						"Nonces": [
							1068
						]
					},
					"id": 1069,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1002,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1003,
								"nodeType": "StructuredDocumentation",
								"src": "125:83:8",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 1068,
							"linearizedBaseContracts": [
								1068
							],
							"name": "Nonces",
							"nameLocation": "227:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "240:90:8",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 1010,
									"name": "InvalidAccountNonce",
									"nameLocation": "341:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "361:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "386:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "378:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:39:8"
									},
									"src": "335:65:8"
								},
								{
									"constant": false,
									"id": 1014,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "450:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1068,
									"src": "406:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1013,
										"keyName": "account",
										"keyNameLocation": "422:7:8",
										"keyType": {
											"id": 1011,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1012,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "607:38:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1022,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "624:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1024,
													"indexExpression": {
														"id": 1023,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "632:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "624:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1025,
												"nodeType": "Return",
												"src": "617:21:8"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "464:69:8",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "547:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "562:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "554:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:15:8"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "598:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:9:8"
									},
									"scope": 1068,
									"src": "538:107:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "828:326:8",
										"statements": [
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "1031:117:8",
												"statements": [
													{
														"expression": {
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1121:16:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1035,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "1121:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1037,
																"indexExpression": {
																	"id": 1036,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "1129:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1121:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1034,
														"id": 1039,
														"nodeType": "Return",
														"src": "1114:23:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "651:103:8",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "768:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "786:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "778:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:15:8"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "819:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:8"
									},
									"scope": 1068,
									"src": "759:395:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1338:149:8",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1356:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1066,
														"src": "1348:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"arguments": [
														{
															"id": 1053,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1376:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1052,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1366:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "1396:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1057,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1405:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "1392:89:8",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "1414:67:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1060,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "1455:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "1462:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1059,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "1435:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1063,
															"nodeType": "RevertStatement",
															"src": "1428:42:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "1160:100:8",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1274:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1299:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1291:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1314:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1306:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:30:8"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:8"
									},
									"scope": 1068,
									"src": "1265:222:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1069,
							"src": "209:1280:8",
							"usedErrors": [
								1010
							],
							"usedEvents": []
						}
					],
					"src": "99:1391:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.1.0/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							1120
						]
					},
					"id": 1121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1070,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1071,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:9",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1120,
							"linearizedBaseContracts": [
								1120
							],
							"name": "Panic",
							"nameLocation": "665:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:9",
										"text": "@dev generic / unspecified error"
									},
									"id": 1075,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "718:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1073,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 1074,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:9",
										"text": "@dev used by the assert() builtin"
									},
									"id": 1079,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "806:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 1078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:9",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 1083,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "897:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 1082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:9",
										"text": "@dev division or modulo by zero"
									},
									"id": 1087,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "990:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1085,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 1086,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:9",
										"text": "@dev enum conversion error"
									},
									"id": 1091,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1080:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1089,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 1090,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:9",
										"text": "@dev invalid encoding in storage"
									},
									"id": 1095,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1181:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1093,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 1094,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:9",
										"text": "@dev empty array pop"
									},
									"id": 1099,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1271:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1097,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 1098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:9",
										"text": "@dev array out of bounds access"
									},
									"id": 1103,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1365:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 1102,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:9",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 1107,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1493:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 1106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:9",
										"text": "@dev calling invalid internal function"
									},
									"id": 1111,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:9",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1593:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1109,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 1110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "1819:151:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:9",
													"nodeType": "YulBlock",
													"src": "1854:110:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:9",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:9",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:9",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:9"
																},
																"nativeSrc": "1868:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:9"
															},
															"nativeSrc": "1868:24:9",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:9",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:9"
																},
																"nativeSrc": "1905:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:9"
															},
															"nativeSrc": "1905:18:9",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:9",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:9"
																},
																"nativeSrc": "1936:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:9"
															},
															"nativeSrc": "1936:18:9",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1114,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1117,
												"nodeType": "InlineAssembly",
												"src": "1829:135:9"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:9",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1791:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:9"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:9"
									},
									"scope": 1120,
									"src": "1776:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1121,
							"src": "657:1315:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1126
						],
						"ShortStrings": [
							1337
						],
						"StorageSlot": [
							1461
						]
					},
					"id": 1338,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1338,
							"sourceUnit": 1462,
							"src": "132:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1123,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1461,
										"src": "140:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1126,
							"name": "ShortString",
							"nameLocation": "353:11:10",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:10",
							"underlyingType": {
								"id": 1125,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:10",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1127,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:10",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1337,
							"linearizedBaseContracts": [
								1337
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1130,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "1345:111:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1128,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1134,
									"name": "StringTooLong",
									"nameLocation": "1469:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:10"
									},
									"src": "1463:32:10"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1136,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:10"
									},
									"src": "1500:27:10"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "1786:208:10",
										"statements": [
											{
												"assignments": [
													1146
												],
												"declarations": [
													{
														"constant": false,
														"id": 1146,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1179,
														"src": "1796:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1145,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"arguments": [
														{
															"id": 1149,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "1822:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1147,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1152,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "1840:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1161,
												"nodeType": "IfStatement",
												"src": "1836:72:10",
												"trueBody": {
													"id": 1160,
													"nodeType": "Block",
													"src": "1858:50:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1157,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "1893:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1156,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "1879:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1159,
															"nodeType": "RevertStatement",
															"src": "1872:25:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1170,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1146,
																						"src": "1965:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1168,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1166,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1173,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "1974:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1164,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1162,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "1924:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1126_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:10",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1126_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1178,
												"nodeType": "Return",
												"src": "1917:70:10"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:10",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1731:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:10"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1773:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1141,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "1773:11:10"
													},
													"referencedDeclaration": 1126,
													"src": "1773:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:10"
									},
									"scope": 1337,
									"src": "1708:286:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "2152:304:10",
										"statements": [
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "2162:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1189,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"id": 1192,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "2187:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																"typeString": "ShortString"
															}
														],
														"id": 1191,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "2176:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:10"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "2280:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1195,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1197,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:10"
											},
											{
												"AST": {
													"nativeSrc": "2349:81:10",
													"nodeType": "YulBlock",
													"src": "2349:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2370:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2370:3:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2375:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2375:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2363:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2363:6:10"
																},
																"nativeSrc": "2363:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2363:16:10"
															},
															"nativeSrc": "2363:16:10",
															"nodeType": "YulExpressionStatement",
															"src": "2363:16:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2403:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2408:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2408:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2399:3:10"
																		},
																		"nativeSrc": "2399:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2399:14:10"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2415:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2415:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2392:6:10"
																},
																"nativeSrc": "2392:28:10",
																"nodeType": "YulFunctionCall",
																"src": "2392:28:10"
															},
															"nativeSrc": "2392:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "2392:28:10"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1190,
														"isOffset": false,
														"isSlot": false,
														"src": "2375:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1184,
														"isOffset": false,
														"isSlot": false,
														"src": "2415:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1196,
														"isOffset": false,
														"isSlot": false,
														"src": "2370:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1196,
														"isOffset": false,
														"isSlot": false,
														"src": "2403:3:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1202,
												"nodeType": "InlineAssembly",
												"src": "2324:106:10"
											},
											{
												"expression": {
													"id": 1203,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1196,
													"src": "2446:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1204,
												"nodeType": "Return",
												"src": "2439:10:10"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:10",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2096:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1182,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "2096:11:10"
													},
													"referencedDeclaration": 1126,
													"src": "2096:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:10"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2137:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:10"
									},
									"scope": 1337,
									"src": "2078:378:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "2598:175:10",
										"statements": [
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2616:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "2608:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2608:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1221,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "2652:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1219,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "2633:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1126_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2645:6:10",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2633:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2633:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2625:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1217,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2625:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2625:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2661:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2625:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2608:57:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1227,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2679:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2679:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "IfStatement",
												"src": "2675:69:10",
												"trueBody": {
													"id": 1233,
													"nodeType": "Block",
													"src": "2692:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1230,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "2713:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2713:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1232,
															"nodeType": "RevertStatement",
															"src": "2706:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1235,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1216,
													"src": "2760:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1236,
												"nodeType": "Return",
												"src": "2753:13:10"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "2462:61:10",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2537:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2560:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2548:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1209,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1208,
														"name": "ShortString",
														"nameLocations": [
															"2548:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "2548:11:10"
													},
													"referencedDeclaration": 1126,
													"src": "2548:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:18:10"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2589:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:9:10"
									},
									"scope": 1337,
									"src": "2528:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "2996:231:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1251,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "3016:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3010:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1249,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3010:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3010:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3023:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3010:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3032:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3010:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "3094:127:10",
													"statements": [
														{
															"expression": {
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1264,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1243,
																				"src": "3134:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1261,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "3108:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1461_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3120:13:10",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1438,
																			"src": "3108:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1358_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3108:32:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1358_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3141:5:10",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1357,
																	"src": "3108:38:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1267,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "3149:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3108:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1269,
															"nodeType": "ExpressionStatement",
															"src": "3108:46:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1272,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "3192:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1270,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "3175:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1126_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3187:4:10",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3175:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1126_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3175:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1248,
															"id": 1274,
															"nodeType": "Return",
															"src": "3168:42:10"
														}
													]
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "3006:215:10",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "3036:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1257,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "3071:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1256,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "3057:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1126_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3057:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1248,
															"id": 1259,
															"nodeType": "Return",
															"src": "3050:27:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "2779:103:10",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2896:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2936:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2922:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2922:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2958:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2943:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1242,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2943:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:43:10"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "2983:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1246,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1245,
														"name": "ShortString",
														"nameLocations": [
															"2983:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "2983:11:10"
													},
													"referencedDeclaration": 1126,
													"src": "2983:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:13:10"
									},
									"scope": 1337,
									"src": "2887:340:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "3467:158:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1291,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "3500:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1289,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "3481:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1126_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3493:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3481:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3481:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1293,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "3510:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3481:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "3582:37:10",
													"statements": [
														{
															"expression": {
																"id": 1300,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "3603:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1288,
															"id": 1301,
															"nodeType": "Return",
															"src": "3596:12:10"
														}
													]
												},
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "3477:142:10",
												"trueBody": {
													"id": 1299,
													"nodeType": "Block",
													"src": "3529:47:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1296,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "3559:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1295,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "3550:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3550:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1288,
															"id": 1298,
															"nodeType": "Return",
															"src": "3543:22:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "3233:120:10",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3367:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3400:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3388:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1280,
														"name": "ShortString",
														"nameLocations": [
															"3388:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "3388:11:10"
													},
													"referencedDeclaration": 1126,
													"src": "3388:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3422:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3407:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3407:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3387:41:10"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3452:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3452:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:15:10"
									},
									"scope": 1337,
									"src": "3358:267:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "4105:174:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "4138:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1316,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "4119:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1126_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4131:6:10",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4119:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4119:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1320,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "4148:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4119:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "4222:51:10",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1329,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "4249:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4243:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1327,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4243:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4243:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4256:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4243:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1315,
															"id": 1332,
															"nodeType": "Return",
															"src": "4236:26:10"
														}
													]
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "4115:158:10",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "4167:49:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1323,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "4199:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1322,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "4188:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4188:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1315,
															"id": 1325,
															"nodeType": "Return",
															"src": "4181:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "3631:364:10",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4009:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4044:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4032:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1307,
														"name": "ShortString",
														"nameLocations": [
															"4032:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "4032:11:10"
													},
													"referencedDeclaration": 1126,
													"src": "4032:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4066:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4051:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4051:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4031:41:10"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4096:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4096:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4095:9:10"
									},
									"scope": 1337,
									"src": "4000:279:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "1255:3026:10",
							"usedErrors": [
								1134,
								1136
							],
							"usedEvents": []
						}
					],
					"src": "106:4176:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1461
						]
					},
					"id": 1462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1339,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1461,
							"linearizedBaseContracts": [
								1461
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1343,
									"members": [
										{
											"constant": false,
											"id": 1342,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1343,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1341,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1346,
									"members": [
										{
											"constant": false,
											"id": 1345,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1346,
											"src": "1517:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1344,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:11",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "1488:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1349,
									"members": [
										{
											"constant": false,
											"id": 1348,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1349,
											"src": "1569:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1347,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:11",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "1540:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1352,
									"members": [
										{
											"constant": false,
											"id": 1351,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1352,
											"src": "1624:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1350,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:11",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "1595:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1355,
									"members": [
										{
											"constant": false,
											"id": 1354,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1355,
											"src": "1678:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1353,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:11",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "1650:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1358,
									"members": [
										{
											"constant": false,
											"id": 1357,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1358,
											"src": "1731:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1356,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:11",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "1703:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1361,
									"members": [
										{
											"constant": false,
											"id": 1360,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1361,
											"src": "1783:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1359,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:11",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "1756:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "1983:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:11",
													"nodeType": "YulBlock",
													"src": "2018:38:11",
													"statements": [
														{
															"nativeSrc": "2032:14:11",
															"nodeType": "YulAssignment",
															"src": "2032:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:11",
																"nodeType": "YulIdentifier",
																"src": "2042:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1370,
												"nodeType": "InlineAssembly",
												"src": "1993:63:11"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1923:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:11"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "1960:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1343_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1366,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1343,
														"src": "1960:11:11"
													},
													"referencedDeclaration": 1343,
													"src": "1960:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1343_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:11"
									},
									"scope": 1461,
									"src": "1899:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "2243:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:11",
													"nodeType": "YulBlock",
													"src": "2278:38:11",
													"statements": [
														{
															"nativeSrc": "2292:14:11",
															"nodeType": "YulAssignment",
															"src": "2292:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:11",
																"nodeType": "YulIdentifier",
																"src": "2302:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1379,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1375,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1381,
												"nodeType": "InlineAssembly",
												"src": "2253:63:11"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:11",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2183:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:11"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2220:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1346_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1377,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1346,
														"src": "2220:11:11"
													},
													"referencedDeclaration": 1346,
													"src": "2220:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1346_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:11"
									},
									"scope": 1461,
									"src": "2159:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "2503:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:11",
													"nodeType": "YulBlock",
													"src": "2538:38:11",
													"statements": [
														{
															"nativeSrc": "2552:14:11",
															"nodeType": "YulAssignment",
															"src": "2552:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:11",
																"nodeType": "YulIdentifier",
																"src": "2562:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1390,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1386,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1392,
												"nodeType": "InlineAssembly",
												"src": "2513:63:11"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:11",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "2443:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:11"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "2480:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1349_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1349,
														"src": "2480:11:11"
													},
													"referencedDeclaration": 1349,
													"src": "2480:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1349_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:11"
									},
									"scope": 1461,
									"src": "2419:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "2763:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:11",
													"nodeType": "YulBlock",
													"src": "2798:38:11",
													"statements": [
														{
															"nativeSrc": "2812:14:11",
															"nodeType": "YulAssignment",
															"src": "2812:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:11",
																"nodeType": "YulIdentifier",
																"src": "2822:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1401,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1397,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1403,
												"nodeType": "InlineAssembly",
												"src": "2773:63:11"
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:11",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2703:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:11"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2740:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1352_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1399,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1352,
														"src": "2740:11:11"
													},
													"referencedDeclaration": 1352,
													"src": "2740:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1352_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:11"
									},
									"scope": 1461,
									"src": "2679:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "3020:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:11",
													"nodeType": "YulBlock",
													"src": "3055:38:11",
													"statements": [
														{
															"nativeSrc": "3069:14:11",
															"nodeType": "YulAssignment",
															"src": "3069:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:11",
																"nodeType": "YulIdentifier",
																"src": "3079:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1408,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1414,
												"nodeType": "InlineAssembly",
												"src": "3030:63:11"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:11",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2961:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:11"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2998:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1355_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1410,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1355,
														"src": "2998:10:11"
													},
													"referencedDeclaration": 1355,
													"src": "2998:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1355_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:11"
									},
									"scope": 1461,
									"src": "2938:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "3277:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:11",
													"nodeType": "YulBlock",
													"src": "3312:38:11",
													"statements": [
														{
															"nativeSrc": "3326:14:11",
															"nodeType": "YulAssignment",
															"src": "3326:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:11",
																"nodeType": "YulIdentifier",
																"src": "3336:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1423,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1419,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1425,
												"nodeType": "InlineAssembly",
												"src": "3287:63:11"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:11",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3218:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:11"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3255:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1358_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1421,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1358,
														"src": "3255:10:11"
													},
													"referencedDeclaration": 1358,
													"src": "3255:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1358_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:11"
									},
									"scope": 1461,
									"src": "3195:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "3558:85:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:11",
													"nodeType": "YulBlock",
													"src": "3593:44:11",
													"statements": [
														{
															"nativeSrc": "3607:20:11",
															"nodeType": "YulAssignment",
															"src": "3607:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:11",
																"nodeType": "YulIdentifier",
																"src": "3617:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1434,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1430,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1436,
												"nodeType": "InlineAssembly",
												"src": "3568:69:11"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "3491:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:11"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "3536:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1358_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1433,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1432,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1358,
														"src": "3536:10:11"
													},
													"referencedDeclaration": 1358,
													"src": "3536:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1358_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:11"
									},
									"scope": 1461,
									"src": "3468:175:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "3818:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:11",
													"nodeType": "YulBlock",
													"src": "3853:38:11",
													"statements": [
														{
															"nativeSrc": "3867:14:11",
															"nodeType": "YulAssignment",
															"src": "3867:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:11",
																"nodeType": "YulIdentifier",
																"src": "3877:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1441,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1447,
												"nodeType": "InlineAssembly",
												"src": "3828:63:11"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:11",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "3760:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:11"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "3797:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1361_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1443,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1361,
														"src": "3797:9:11"
													},
													"referencedDeclaration": 1361,
													"src": "3797:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1361_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:11"
									},
									"scope": 1461,
									"src": "3738:159:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "4094:85:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:11",
													"nodeType": "YulBlock",
													"src": "4129:44:11",
													"statements": [
														{
															"nativeSrc": "4143:20:11",
															"nodeType": "YulAssignment",
															"src": "4143:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:11",
																"nodeType": "YulIdentifier",
																"src": "4153:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1456,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1458,
												"nodeType": "InlineAssembly",
												"src": "4104:69:11"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "4029:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:11"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "4073:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1361_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1454,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1361,
														"src": "4073:9:11"
													},
													"referencedDeclaration": 1361,
													"src": "4073:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1361_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:11"
									},
									"scope": 1461,
									"src": "4007:172:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1462,
							"src": "1407:2774:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts@5.1.0/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							4036
						],
						"SignedMath": [
							5945
						],
						"Strings": [
							1781
						]
					},
					"id": 1782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1463,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 4037,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1464,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4036,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 5946,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1466,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5945,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1468,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1781,
							"linearizedBaseContracts": [
								1781
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1471,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1469,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1470,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1474,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1472,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1473,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1481,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "708:561:12",
										"statements": [
											{
												"id": 1527,
												"nodeType": "UncheckedBlock",
												"src": "718:545:12",
												"statements": [
													{
														"assignments": [
															1490
														],
														"declarations": [
															{
																"constant": false,
																"id": 1490,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1527,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1489,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1497,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1493,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1491,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4036,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$4036_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3808,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1499
														],
														"declarations": [
															{
																"constant": false,
																"id": 1499,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1527,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1498,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1504,
														"initialValue": {
															"arguments": [
																{
																	"id": 1502,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1506
														],
														"declarations": [
															{
																"constant": false,
																"id": 1506,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1527,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1505,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1507,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "899:67:12",
															"nodeType": "YulBlock",
															"src": "899:67:12",
															"statements": [
																{
																	"nativeSrc": "917:35:12",
																	"nodeType": "YulAssignment",
																	"src": "917:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "928:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "940:2:12",
																						"nodeType": "YulLiteral",
																						"src": "940:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "944:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "936:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "936:3:12"
																				},
																				"nativeSrc": "936:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "936:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "924:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:12"
																		},
																		"nativeSrc": "924:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "924:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "917:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1499,
																"isOffset": false,
																"isSlot": false,
																"src": "928:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1490,
																"isOffset": false,
																"isSlot": false,
																"src": "944:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "917:3:12",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1508,
														"nodeType": "InlineAssembly",
														"src": "874:92:12"
													},
													{
														"body": {
															"id": 1523,
															"nodeType": "Block",
															"src": "992:234:12",
															"statements": [
																{
																	"expression": {
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1010:5:12",
																		"subExpression": {
																			"id": 1510,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "1010:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1512,
																	"nodeType": "ExpressionStatement",
																	"src": "1010:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1058:86:12",
																		"nodeType": "YulBlock",
																		"src": "1058:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1088:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1088:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1102:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1102:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1109:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1109:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1098:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1098:3:12"
																									},
																									"nativeSrc": "1098:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1098:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1114:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1114:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1093:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1093:4:12"
																							},
																							"nativeSrc": "1093:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1093:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1080:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1080:7:12"
																					},
																					"nativeSrc": "1080:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1080:46:12"
																				},
																				"nativeSrc": "1080:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1080:46:12"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1471,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1114:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1506,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1088:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1484,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1102:5:12",
																			"valueSize": 1
																		}
																	],
																	"flags": [
																		"memory-safe"
																	],
																	"id": 1513,
																	"nodeType": "InlineAssembly",
																	"src": "1033:111:12"
																},
																{
																	"expression": {
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1514,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "1161:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1170:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1161:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1517,
																	"nodeType": "ExpressionStatement",
																	"src": "1161:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1518,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "1194:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1203:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1194:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1522,
																	"nodeType": "IfStatement",
																	"src": "1190:21:12",
																	"trueBody": {
																		"id": 1521,
																		"nodeType": "Break",
																		"src": "1206:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1524,
														"nodeType": "WhileStatement",
														"src": "979:247:12"
													},
													{
														"expression": {
															"id": 1525,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "1246:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1488,
														"id": 1526,
														"nodeType": "Return",
														"src": "1239:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1781,
									"src": "637:632:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "1445:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1540,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "1476:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1484:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1476:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1494:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1476:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "1522:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1547,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5945,
																			"src": "1507:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$5945_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1518:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5944,
																		"src": "1507:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1507:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1546,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "1498:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1498:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1537,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1462:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1469:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1462:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1553,
												"nodeType": "Return",
												"src": "1455:75:12"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "1275:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1378:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1400:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1393:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1531,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:14:12"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1430:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:15:12"
									},
									"scope": 1781,
									"src": "1369:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "1716:100:12",
										"statements": [
											{
												"id": 1573,
												"nodeType": "UncheckedBlock",
												"src": "1726:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1564,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "1769:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1567,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1558,
																				"src": "1788:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1565,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4036,
																				"src": "1776:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$4036_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1781:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3979,
																			"src": "1776:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1776:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1797:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1776:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1563,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1575,
																	1658,
																	1678
																],
																"referencedDeclaration": 1658,
																"src": "1757:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1757:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1562,
														"id": 1572,
														"nodeType": "Return",
														"src": "1750:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "1543:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1651:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1671:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1663:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:12"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1701:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:12"
									},
									"scope": 1781,
									"src": "1642:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "2029:435:12",
										"statements": [
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2047:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1657,
														"src": "2039:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2039:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"id": 1587,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1578,
													"src": "2060:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2039:26:12"
											},
											{
												"assignments": [
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2088:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1657,
														"src": "2075:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1589,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2075:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1599,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1594,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "2111:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2107:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2120:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2107:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2097:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2101:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:47:12"
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1600,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "2132:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1602,
														"indexExpression": {
															"hexValue": "30",
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2139:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2132:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2144:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2132:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "2132:15:12"
											},
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1606,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "2157:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1608,
														"indexExpression": {
															"hexValue": "31",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2164:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2157:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2169:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2157:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "2157:15:12"
											},
											{
												"body": {
													"id": 1640,
													"nodeType": "Block",
													"src": "2227:95:12",
													"statements": [
														{
															"expression": {
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1626,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "2241:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1628,
																	"indexExpression": {
																		"id": 1627,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "2248:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2241:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1629,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "2253:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1633,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1630,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "2264:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2277:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2264:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2253:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2241:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1635,
															"nodeType": "ExpressionStatement",
															"src": "2241:40:12"
														},
														{
															"expression": {
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1636,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "2295:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2310:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2295:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "2295:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1620,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "2215:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2219:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2215:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1641,
												"initializationExpression": {
													"assignments": [
														1613
													],
													"declarations": [
														{
															"constant": false,
															"id": 1613,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2195:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1641,
															"src": "2187:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1612,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2187:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1619,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2199:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1615,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "2203:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2199:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2199:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2187:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2222:3:12",
														"subExpression": {
															"id": 1623,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "2224:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1625,
													"nodeType": "ExpressionStatement",
													"src": "2222:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2182:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1642,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2335:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2349:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2335:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "2331:96:12",
												"trueBody": {
													"id": 1650,
													"nodeType": "Block",
													"src": "2352:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1646,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "2402:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1647,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "2409:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1645,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "2373:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2373:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1649,
															"nodeType": "RevertStatement",
															"src": "2366:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1654,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "2450:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2443:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1652,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2443:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1656,
												"nodeType": "Return",
												"src": "2436:21:12"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "1822:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1948:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1968:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "1960:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1983:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "1975:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:31:12"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "2014:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:15:12"
									},
									"scope": 1781,
									"src": "1939:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "2696:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1671,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "2741:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2733:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1669,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2733:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2733:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2725:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1667,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2725:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2725:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1674,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "2749:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1666,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1575,
															1658,
															1678
														],
														"referencedDeclaration": 1658,
														"src": "2713:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1665,
												"id": 1676,
												"nodeType": "Return",
												"src": "2706:58:12"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2632:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2652:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "2644:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:14:12"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "2681:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2681:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:15:12"
									},
									"scope": 1781,
									"src": "2623:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "3028:642:12",
										"statements": [
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3051:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1742,
														"src": "3038:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1686,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3038:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1694,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1691,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1681,
																	"src": "3078:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1690,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1575,
																	1658,
																	1678
																],
																"referencedDeclaration": 1678,
																"src": "3066:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (address) pure returns (string memory)"
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3066:17:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3060:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1688,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3060:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3038:46:12"
											},
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "hashValue",
														"nameLocation": "3177:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1742,
														"src": "3169:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3169:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1697,
												"nodeType": "VariableDeclarationStatement",
												"src": "3169:17:12"
											},
											{
												"AST": {
													"nativeSrc": "3221:78:12",
													"nodeType": "YulBlock",
													"src": "3221:78:12",
													"statements": [
														{
															"nativeSrc": "3235:54:12",
															"nodeType": "YulAssignment",
															"src": "3235:54:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:12",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "buffer",
																						"nativeSrc": "3270:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3270:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3278:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3278:4:12",
																						"type": "",
																						"value": "0x22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:12"
																				},
																				"nativeSrc": "3266:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:17:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3285:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3285:2:12",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3256:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "3256:9:12"
																		},
																		"nativeSrc": "3256:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:32:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3248:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:12"
																},
																"nativeSrc": "3248:41:12",
																"nodeType": "YulFunctionCall",
																"src": "3248:41:12"
															},
															"variableNames": [
																{
																	"name": "hashValue",
																	"nativeSrc": "3235:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3235:9:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1687,
														"isOffset": false,
														"isSlot": false,
														"src": "3270:6:12",
														"valueSize": 1
													},
													{
														"declaration": 1696,
														"isOffset": false,
														"isSlot": false,
														"src": "3235:9:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1698,
												"nodeType": "InlineAssembly",
												"src": "3196:103:12"
											},
											{
												"body": {
													"id": 1735,
													"nodeType": "Block",
													"src": "3342:291:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1709,
																			"name": "hashValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1696,
																			"src": "3448:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3460:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "3448:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3466:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "3448:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1716,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1687,
																					"src": "3477:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1718,
																				"indexExpression": {
																					"id": 1717,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "3484:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3477:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3471:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 1714,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3471:5:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3471:16:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3490:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "3471:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3448:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1730,
															"nodeType": "IfStatement",
															"src": "3444:150:12",
															"trueBody": {
																"id": 1729,
																"nodeType": "Block",
																"src": "3494:100:12",
																"statements": [
																	{
																		"expression": {
																			"id": 1727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1723,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1687,
																					"src": "3562:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1725,
																				"indexExpression": {
																					"id": 1724,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "3569:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3562:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "^=",
																			"rightHandSide": {
																				"hexValue": "30783230",
																				"id": 1726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3575:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "0x20"
																			},
																			"src": "3562:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 1728,
																		"nodeType": "ExpressionStatement",
																		"src": "3562:17:12"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1731,
																	"name": "hashValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "3607:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3621:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3607:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1734,
															"nodeType": "ExpressionStatement",
															"src": "3607:15:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1703,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "3330:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3334:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3330:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1736,
												"initializationExpression": {
													"assignments": [
														1700
													],
													"declarations": [
														{
															"constant": false,
															"id": 1700,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3322:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1736,
															"src": "3314:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1699,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3314:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1702,
													"initialValue": {
														"hexValue": "3431",
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3326:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_41_by_1",
															"typeString": "int_const 41"
														},
														"value": "41"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3314:14:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "3337:3:12",
														"subExpression": {
															"id": 1706,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "3339:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1708,
													"nodeType": "ExpressionStatement",
													"src": "3337:3:12"
												},
												"nodeType": "ForStatement",
												"src": "3309:324:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1739,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "3656:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3649:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1737,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3649:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1685,
												"id": 1741,
												"nodeType": "Return",
												"src": "3642:21:12"
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "2777:165:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toChecksumHexString",
									"nameLocation": "2956:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2984:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "2976:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:14:12"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "3013:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3013:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:15:12"
									},
									"scope": 1781,
									"src": "2947:723:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "3825:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1755,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "3848:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3842:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1753,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3842:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3842:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3842:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1760,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "3867:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3861:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1758,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3861:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3861:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3870:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3861:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3842:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1767,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "3896:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3890:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1765,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3890:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3890:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1764,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3880:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3880:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1773,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1748,
																			"src": "3919:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3913:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1771,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3913:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3913:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1770,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3903:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3880:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3842:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1752,
												"id": 1778,
												"nodeType": "Return",
												"src": "3835:87:12"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "3676:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3756:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3776:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3762:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3762:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3793:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3779:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3779:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:34:12"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3819:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:12"
									},
									"scope": 1781,
									"src": "3747:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1782,
							"src": "251:3680:12",
							"usedErrors": [
								1481
							],
							"usedEvents": []
						}
					],
					"src": "101:3831:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							2129
						]
					},
					"id": 2130,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1784,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:13",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2129,
							"linearizedBaseContracts": [
								2129
							],
							"name": "ECDSA",
							"nameLocation": "352:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1789,
									"members": [
										{
											"id": 1785,
											"name": "NoError",
											"nameLocation": "392:7:13",
											"nodeType": "EnumValue",
											"src": "392:7:13"
										},
										{
											"id": 1786,
											"name": "InvalidSignature",
											"nameLocation": "409:16:13",
											"nodeType": "EnumValue",
											"src": "409:16:13"
										},
										{
											"id": 1787,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:13",
											"nodeType": "EnumValue",
											"src": "435:22:13"
										},
										{
											"id": 1788,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:13",
											"nodeType": "EnumValue",
											"src": "467:17:13"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:13",
									"nodeType": "EnumDefinition",
									"src": "364:126:13"
								},
								{
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:13",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1792,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:13"
									},
									"src": "564:30:13"
								},
								{
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:13",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1797,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "699:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:13"
									},
									"src": "665:50:13"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:13",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1802,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "840:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1799,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:13"
									},
									"src": "811:40:13"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "2285:622:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1817,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "2299:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2299:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2319:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2299:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1852,
													"nodeType": "Block",
													"src": "2793:108:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2823:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2815:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1839,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2815:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2815:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1843,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "2827:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2840:22:13",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1787,
																		"src": "2827:35:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1789",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1847,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1807,
																					"src": "2872:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2882:6:13",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2872:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2864:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1845,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2864:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2864:25:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2814:76:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1816,
															"id": 1851,
															"nodeType": "Return",
															"src": "2807:83:13"
														}
													]
												},
												"id": 1853,
												"nodeType": "IfStatement",
												"src": "2295:606:13",
												"trueBody": {
													"id": 1838,
													"nodeType": "Block",
													"src": "2323:464:13",
													"statements": [
														{
															"assignments": [
																1822
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1822,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2345:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1838,
																	"src": "2337:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1821,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2337:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1823,
															"nodeType": "VariableDeclarationStatement",
															"src": "2337:9:13"
														},
														{
															"assignments": [
																1825
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1825,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2368:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1838,
																	"src": "2360:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1824,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2360:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1826,
															"nodeType": "VariableDeclarationStatement",
															"src": "2360:9:13"
														},
														{
															"assignments": [
																1828
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1828,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2389:1:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1838,
																	"src": "2383:7:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1827,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2383:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1829,
															"nodeType": "VariableDeclarationStatement",
															"src": "2383:7:13"
														},
														{
															"AST": {
																"nativeSrc": "2560:171:13",
																"nodeType": "YulBlock",
																"src": "2560:171:13",
																"statements": [
																	{
																		"nativeSrc": "2578:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2578:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2593:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2593:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2604:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2604:4:13",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2589:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2589:3:13"
																					},
																					"nativeSrc": "2589:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2589:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2583:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:13"
																			},
																			"nativeSrc": "2583:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2583:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2578:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2578:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2627:32:13",
																		"nodeType": "YulAssignment",
																		"src": "2627:32:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2642:9:13",
																							"nodeType": "YulIdentifier",
																							"src": "2642:9:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2653:4:13",
																							"nodeType": "YulLiteral",
																							"src": "2653:4:13",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2638:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2638:3:13"
																					},
																					"nativeSrc": "2638:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2638:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2632:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2632:5:13"
																			},
																			"nativeSrc": "2632:27:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2632:27:13"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2627:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2627:1:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2676:41:13",
																		"nodeType": "YulAssignment",
																		"src": "2676:41:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2686:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2699:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "2699:9:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2710:4:13",
																									"nodeType": "YulLiteral",
																									"src": "2710:4:13",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:13"
																							},
																							"nativeSrc": "2695:20:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:20:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:13"
																					},
																					"nativeSrc": "2689:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:27:13"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2681:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2681:4:13"
																			},
																			"nativeSrc": "2681:36:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2681:36:13"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2676:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "2676:1:13"
																			}
																		]
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1822,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2578:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1825,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2627:1:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1807,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2593:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1807,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2642:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1807,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2699:9:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1828,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2676:1:13",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1830,
															"nodeType": "InlineAssembly",
															"src": "2535:196:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1832,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "2762:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1833,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "2768:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1834,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1822,
																		"src": "2771:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1835,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "2774:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1831,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1855,
																		1935,
																		2043
																	],
																	"referencedDeclaration": 2043,
																	"src": "2751:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:25:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1816,
															"id": 1837,
															"nodeType": "Return",
															"src": "2744:32:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2166:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "2158:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1804,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2193:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "2180:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:60:13"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "2240:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "2232:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "2264:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "2251:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1789",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1811,
														"name": "RecoverError",
														"nameLocations": [
															"2251:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "2251:12:13"
													},
													"referencedDeclaration": 1789,
													"src": "2251:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1789",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "2277:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "2269:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1814,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:53:13"
									},
									"scope": 2129,
									"src": "2129:778:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "3801:168:13",
										"statements": [
											{
												"assignments": [
													1866,
													1869,
													1871
												],
												"declarations": [
													{
														"constant": false,
														"id": 1866,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3820:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1884,
														"src": "3812:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1865,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1869,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3844:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1884,
														"src": "3831:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1789",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1868,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1867,
																"name": "RecoverError",
																"nameLocations": [
																	"3831:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1789,
																"src": "3831:12:13"
															},
															"referencedDeclaration": 1789,
															"src": "3831:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1871,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3859:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1884,
														"src": "3851:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1870,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"arguments": [
														{
															"id": 1873,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "3882:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1874,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "3888:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1872,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1855,
															1935,
															2043
														],
														"referencedDeclaration": 1855,
														"src": "3871:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3811:87:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1878,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "3920:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1879,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "3927:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1877,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "3908:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1789_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:13"
											},
											{
												"expression": {
													"id": 1882,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1866,
													"src": "3953:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1864,
												"id": 1883,
												"nodeType": "Return",
												"src": "3946:16:13"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "2913:796:13",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3723:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3739:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "3731:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3758:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "3745:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3745:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:38:13"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "3792:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:9:13"
									},
									"scope": 2129,
									"src": "3714:255:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "4348:342:13",
										"statements": [
											{
												"id": 1933,
												"nodeType": "UncheckedBlock",
												"src": "4358:326:13",
												"statements": [
													{
														"assignments": [
															1903
														],
														"declarations": [
															{
																"constant": false,
																"id": 1903,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4390:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1933,
																"src": "4382:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1902,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4382:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1910,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "4394:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4407:66:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1905,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4399:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:75:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4394:80:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4382:92:13"
													},
													{
														"assignments": [
															1912
														],
														"declarations": [
															{
																"constant": false,
																"id": 1912,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4591:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1933,
																"src": "4585:7:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1911,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4585:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1925,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1917,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1892,
																							"src": "4610:2:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4602:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1915,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4602:7:13",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1918,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4602:11:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1919,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4617:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4602:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1921,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4601:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4624:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4601:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1913,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4595:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:32:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4585:42:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1927,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "4659:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1928,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1912,
																	"src": "4665:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1929,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "4668:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1930,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "4671:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1926,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1855,
																	1935,
																	2043
																],
																"referencedDeclaration": 2043,
																"src": "4648:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4648:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1901,
														"id": 1932,
														"nodeType": "Return",
														"src": "4641:32:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "3975:205:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4194:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4222:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4214:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1887,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4244:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4236:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1889,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4263:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4255:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:67:13"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "4303:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4295:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "4327:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4314:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1789",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1896,
														"name": "RecoverError",
														"nameLocations": [
															"4314:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "4314:12:13"
													},
													"referencedDeclaration": 1789,
													"src": "4314:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1789",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "4340:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "4332:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:53:13"
									},
									"scope": 2129,
									"src": "4185:505:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "4903:164:13",
										"statements": [
											{
												"assignments": [
													1948,
													1951,
													1953
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4922:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "4914:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1951,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4946:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "4933:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1789",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1950,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1949,
																"name": "RecoverError",
																"nameLocations": [
																	"4933:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1789,
																"src": "4933:12:13"
															},
															"referencedDeclaration": 1789,
															"src": "4933:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1953,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4961:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 1967,
														"src": "4953:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1952,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4953:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1959,
												"initialValue": {
													"arguments": [
														{
															"id": 1955,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "4984:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1956,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "4990:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1957,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "4993:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1954,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1855,
															1935,
															2043
														],
														"referencedDeclaration": 1935,
														"src": "4973:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4913:83:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1961,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "5018:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1962,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "5025:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1960,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "5006:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1789_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "5006:28:13"
											},
											{
												"expression": {
													"id": 1965,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1948,
													"src": "5051:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1966,
												"nodeType": "Return",
												"src": "5044:16:13"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "4696:116:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4826:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4842:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "4834:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4856:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "4848:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1939,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4867:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "4859:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1941,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:37:13"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "4894:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:9:13"
									},
									"scope": 2129,
									"src": "4817:250:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "5382:1372:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1989,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "6278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6270:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6270:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6270:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6283:66:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6270:79:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "IfStatement",
												"src": "6266:164:13",
												"trueBody": {
													"id": 2002,
													"nodeType": "Block",
													"src": "6351:79:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6381:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6373:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1993,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6373:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1997,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "6385:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6398:17:13",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1788,
																		"src": "6385:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1789",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1999,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1977,
																		"src": "6417:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2000,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6372:47:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1986,
															"id": 2001,
															"nodeType": "Return",
															"src": "6365:54:13"
														}
													]
												}
											},
											{
												"assignments": [
													2005
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6532:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2042,
														"src": "6524:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2004,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2012,
												"initialValue": {
													"arguments": [
														{
															"id": 2007,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "6551:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2008,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "6557:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2009,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "6560:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2010,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "6563:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2006,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6541:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6541:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2013,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "6579:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6597:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6589:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6589:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6589:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6579:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2032,
												"nodeType": "IfStatement",
												"src": "6575:113:13",
												"trueBody": {
													"id": 2031,
													"nodeType": "Block",
													"src": "6601:87:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6631:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6623:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2019,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6623:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6623:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2023,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "6635:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6648:16:13",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1786,
																		"src": "6635:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1789",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6674:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6666:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2025,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6666:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6666:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2029,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6622:55:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1986,
															"id": 2030,
															"nodeType": "Return",
															"src": "6615:62:13"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2033,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "6706:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2034,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "6714:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6727:7:13",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1785,
															"src": "6714:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6744:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6736:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2036,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6736:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2040,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6705:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1986,
												"id": 2041,
												"nodeType": "Return",
												"src": "6698:49:13"
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "5073:125:13",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5212:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5240:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "5232:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1970,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5260:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "5254:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1972,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5254:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5279:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "5271:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5298:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "5290:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1976,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5222:83:13"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "5337:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "5329:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "5361:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "5348:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1789",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1982,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1981,
														"name": "RecoverError",
														"nameLocations": [
															"5348:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "5348:12:13"
													},
													"referencedDeclaration": 1789,
													"src": "5348:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1789",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "5374:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "5366:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:53:13"
									},
									"scope": 2129,
									"src": "5203:1551:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "6981:166:13",
										"statements": [
											{
												"assignments": [
													2058,
													2061,
													2063
												],
												"declarations": [
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7000:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "6992:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2057,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6992:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2061,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7024:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "7011:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1789",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2060,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2059,
																"name": "RecoverError",
																"nameLocations": [
																	"7011:12:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1789,
																"src": "7011:12:13"
															},
															"referencedDeclaration": 1789,
															"src": "7011:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2063,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7039:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "7031:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2062,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"initialValue": {
													"arguments": [
														{
															"id": 2065,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "7062:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2066,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "7068:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2067,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "7071:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2068,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "7074:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2064,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1855,
															1935,
															2043
														],
														"referencedDeclaration": 2043,
														"src": "7051:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1789_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6991:85:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2072,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "7098:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2073,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "7105:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2071,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "7086:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1789_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "7086:28:13"
											},
											{
												"expression": {
													"id": 2076,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2058,
													"src": "7131:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2056,
												"id": 2077,
												"nodeType": "Return",
												"src": "7124:16:13"
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "6760:122:13",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6896:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6912:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6904:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2045,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6924:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6918:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2047,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6918:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6935:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6927:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2049,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6946:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6938:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2051,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:45:13"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "6972:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6971:9:13"
									},
									"scope": 2129,
									"src": "6887:260:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "7352:460:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1789",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2088,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "7366:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1789",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2089,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "7375:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7388:7:13",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "7375:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1789",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7366:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1789",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2094,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2083,
															"src": "7462:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2095,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "7471:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7484:16:13",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1786,
															"src": "7471:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7462:38:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1789",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2102,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "7567:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1789",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2103,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "7576:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7589:22:13",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1787,
																"src": "7576:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1789",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7567:44:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1789",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2114,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "7701:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1789",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2115,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "7710:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1789_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7723:17:13",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1788,
																	"src": "7710:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1789",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7701:39:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2123,
															"nodeType": "IfStatement",
															"src": "7697:109:13",
															"trueBody": {
																"id": 2122,
																"nodeType": "Block",
																"src": "7742:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2119,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2085,
																					"src": "7786:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2118,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1802,
																				"src": "7763:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7763:32:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2121,
																		"nodeType": "RevertStatement",
																		"src": "7756:39:13"
																	}
																]
															}
														},
														"id": 2124,
														"nodeType": "IfStatement",
														"src": "7563:243:13",
														"trueBody": {
															"id": 2113,
															"nodeType": "Block",
															"src": "7613:78:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2109,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2085,
																						"src": "7670:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2108,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7662:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2107,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7662:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7662:17:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2106,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "7634:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7634:46:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2112,
																	"nodeType": "RevertStatement",
																	"src": "7627:53:13"
																}
															]
														}
													},
													"id": 2125,
													"nodeType": "IfStatement",
													"src": "7458:348:13",
													"trueBody": {
														"id": 2101,
														"nodeType": "Block",
														"src": "7502:55:13",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2098,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1792,
																		"src": "7523:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7523:23:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 2100,
																"nodeType": "RevertStatement",
																"src": "7516:30:13"
															}
														]
													}
												},
												"id": 2126,
												"nodeType": "IfStatement",
												"src": "7362:444:13",
												"trueBody": {
													"id": 2093,
													"nodeType": "Block",
													"src": "7397:55:13",
													"statements": [
														{
															"functionReturnParameters": 2087,
															"id": 2092,
															"nodeType": "Return",
															"src": "7411:7:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "7153:122:13",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7289:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7314:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "7301:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1789",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "RecoverError",
														"nameLocations": [
															"7301:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1789,
														"src": "7301:12:13"
													},
													"referencedDeclaration": 1789,
													"src": "7301:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1789",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7329:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "7321:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:38:13"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7352:0:13"
									},
									"scope": 2129,
									"src": "7280:532:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2130,
							"src": "344:7470:13",
							"usedErrors": [
								1792,
								1797,
								1802
							],
							"usedEvents": []
						}
					],
					"src": "112:7703:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2356
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							2430
						],
						"ShortString": [
							1126
						],
						"ShortStrings": [
							1337
						]
					},
					"id": 2357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2131,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2357,
							"sourceUnit": 2431,
							"src": "139:56:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2132,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2430,
										"src": "147:16:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2357,
							"sourceUnit": 1338,
							"src": "196:62:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2134,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1337,
										"src": "204:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2135,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1126,
										"src": "218:11:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2357,
							"sourceUnit": 25,
							"src": "259:55:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2137,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 24,
										"src": "267:8:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2140,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "1988:8:14"
									},
									"id": 2141,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:14"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2139,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:14",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2356,
							"linearizedBaseContracts": [
								2356,
								24
							],
							"name": "EIP712",
							"nameLocation": "1978:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2143,
									"libraryName": {
										"id": 2142,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "2009:12:14"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:14"
								},
								{
									"constant": true,
									"id": 2148,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2034:140:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2144,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2146,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2145,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2150,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2373:48:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2149,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2152,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2427:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2154,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2473:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2156,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2517:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2155,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2158,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2560:40:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2157,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2161,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2607:35:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2160,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2159,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1126,
											"src": "2607:11:14"
										},
										"referencedDeclaration": 1126,
										"src": "2607:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2164,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2648:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2163,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2162,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1126,
											"src": "2648:11:14"
										},
										"referencedDeclaration": 1126,
										"src": "2648:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2166,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2692:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2165,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2168,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 2356,
									"src": "2726:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2167,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "3383:376:14",
										"statements": [
											{
												"expression": {
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2176,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "3393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2179,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "3432:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2177,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "3401:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1278,
															"src": "3401:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1126_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"id": 2182,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:14"
											},
											{
												"expression": {
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2183,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2164,
														"src": "3456:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2186,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "3501:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2184,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "3467:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:14",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1278,
															"src": "3467:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1126_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:14",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
														"typeString": "ShortString"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:14"
											},
											{
												"expression": {
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2190,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "3528:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2194,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2171,
																		"src": "3558:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2192,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2191,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:14"
											},
											{
												"expression": {
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2199,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "3574:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2203,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "3607:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2201,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2200,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:14"
											},
											{
												"expression": {
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2208,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "3627:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2209,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:14",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:14"
											},
											{
												"expression": {
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2213,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "3667:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2214,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "3692:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2217,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:14"
											},
											{
												"expression": {
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2218,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "3725:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2221,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2356",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2356",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2219,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:14"
											}
										]
									},
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:14",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2226,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "3340:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "3360:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:14"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:14"
									},
									"scope": 2356,
									"src": "3328:431:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "3907:200:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2234,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2356",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2356",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2236,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "3938:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2238,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2240,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "3970:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2249,
													"nodeType": "Block",
													"src": "4046:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2246,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "4067:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2231,
															"id": 2248,
															"nodeType": "Return",
															"src": "4060:30:14"
														}
													]
												},
												"id": 2250,
												"nodeType": "IfStatement",
												"src": "3917:184:14",
												"trueBody": {
													"id": 2245,
													"nodeType": "Block",
													"src": "3986:54:14",
													"statements": [
														{
															"expression": {
																"id": 2243,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "4007:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2231,
															"id": 2244,
															"nodeType": "Return",
															"src": "4000:29:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:14",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:14"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "3898:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:14"
									},
									"scope": 2356,
									"src": "3845:262:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "4177:115:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2260,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "4215:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2261,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "4226:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2262,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2158,
																	"src": "4239:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2263,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:14",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2356",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2356",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2258,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:14",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2257,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2256,
												"id": 2271,
												"nodeType": "Return",
												"src": "4187:98:14"
											}
										]
									},
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:14"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "4168:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:14"
									},
									"scope": 2356,
									"src": "4113:179:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "5003:90:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2283,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2252,
																"src": "5053:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2285,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "5075:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2281,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2430,
															"src": "5020:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2430_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:14",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2429,
														"src": "5020:32:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2280,
												"id": 2287,
												"nodeType": "Return",
												"src": "5013:73:14"
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:14",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "4943:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:14"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "4994:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:14"
									},
									"scope": 2356,
									"src": "4917:176:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "5472:229:14",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2309,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "5533:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2311,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "5560:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2313,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:14",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2317,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2356",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2356",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2319,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2323,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2324,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2328,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2307,
												"id": 2329,
												"nodeType": "Return",
												"src": "5482:212:14"
											}
										]
									},
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:14",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:14"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5242:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2292,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5269:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5301:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5336:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5365:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5404:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "5430:27:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2304,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2305,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:14"
									},
									"scope": 2356,
									"src": "5144:557:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2342,
										"nodeType": "Block",
										"src": "6082:65:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2339,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "6126:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2337,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "6099:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																"typeString": "ShortString"
															}
														},
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1305,
														"src": "6099:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1126_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2336,
												"id": 2341,
												"nodeType": "Return",
												"src": "6092:48:14"
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:14",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:14"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "6067:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2334,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:14"
									},
									"scope": 2356,
									"src": "6021:126:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "6537:71:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2351,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "6584:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2349,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "6554:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1126",
																"typeString": "ShortString"
															}
														},
														"id": 2350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:14",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1305,
														"src": "6554:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1126_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1126_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2348,
												"id": 2353,
												"nodeType": "Return",
												"src": "6547:54:14"
											}
										]
									},
									"documentation": {
										"id": 2344,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:14",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:14"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "6522:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:14"
									},
									"scope": 2356,
									"src": "6473:135:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2357,
							"src": "1960:4650:14",
							"usedErrors": [
								1134,
								1136
							],
							"usedEvents": [
								4
							]
						}
					],
					"src": "113:6498:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2430
						],
						"Strings": [
							1781
						]
					},
					"id": 2431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2431,
							"sourceUnit": 1782,
							"src": "149:39:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2359,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1781,
										"src": "157:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2361,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:15",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2430,
							"linearizedBaseContracts": [
								2430
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "1314:341:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1349:300:15",
													"nodeType": "YulBlock",
													"src": "1349:300:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1370:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1370:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1376:34:15",
																		"nodeType": "YulLiteral",
																		"src": "1376:34:15",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1363:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:15"
																},
																"nativeSrc": "1363:48:15",
																"nodeType": "YulFunctionCall",
																"src": "1363:48:15"
															},
															"nativeSrc": "1363:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "1363:48:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:15",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1478:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "1478:11:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1465:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1465:6:15"
																},
																"nativeSrc": "1465:25:15",
																"nodeType": "YulFunctionCall",
																"src": "1465:25:15"
															},
															"nativeSrc": "1465:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "1465:25:15"
														},
														{
															"nativeSrc": "1544:31:15",
															"nodeType": "YulAssignment",
															"src": "1544:31:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1564:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1564:4:15",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1570:4:15",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1554:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1554:9:15"
																},
																"nativeSrc": "1554:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1554:21:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1544:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2367,
														"isOffset": false,
														"isSlot": false,
														"src": "1544:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2364,
														"isOffset": false,
														"isSlot": false,
														"src": "1478:11:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2369,
												"nodeType": "InlineAssembly",
												"src": "1324:325:15"
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:15",
										"text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "1254:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:15"
									},
									"returnParameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "1298:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:15"
									},
									"scope": 2430,
									"src": "1222:433:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "2207:143:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2259:32:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2388,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2374,
																						"src": "2316:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2324:6:15",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2316:14:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2386,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1781,
																					"src": "2299:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1781_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2307:8:15",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1529,
																				"src": "2299:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2299:32:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2293:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2384,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2293:5:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2293:39:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2392,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "2334:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2246:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2380,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2246:5:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2252:6:15",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2246:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2246:96:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2379,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2236:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:107:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2378,
												"id": 2395,
												"nodeType": "Return",
												"src": "2217:126:15"
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "1661:455:15",
										"text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2130:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2166:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "2153:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2153:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:22:15"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "2198:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:9:15"
									},
									"scope": 2430,
									"src": "2121:229:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "2804:80:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2848:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2411,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "2860:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2412,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "2871:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2408,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2831:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2835:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2831:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2831:45:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2407,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2821:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2821:56:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2406,
												"id": 2415,
												"nodeType": "Return",
												"src": "2814:63:15"
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "2356:332:15",
										"text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2702:31:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2742:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2734:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2766:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2753:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2753:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:38:15"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2795:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:9:15"
									},
									"scope": 2430,
									"src": "2693:191:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "3435:265:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3470:224:15",
													"nodeType": "YulBlock",
													"src": "3470:224:15",
													"statements": [
														{
															"nativeSrc": "3484:22:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3484:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3501:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3501:4:15",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3495:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3495:5:15"
																},
																"nativeSrc": "3495:11:15",
																"nodeType": "YulFunctionCall",
																"src": "3495:11:15"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3488:3:15",
																	"nodeType": "YulTypedName",
																	"src": "3488:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3526:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:15"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3531:10:15",
																		"nodeType": "YulLiteral",
																		"src": "3531:10:15",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3519:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:15"
																},
																"nativeSrc": "3519:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3519:23:15"
															},
															"nativeSrc": "3519:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "3519:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3566:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3566:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3571:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3571:4:15",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3562:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:15"
																		},
																		"nativeSrc": "3562:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:14:15"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3578:15:15",
																		"nodeType": "YulIdentifier",
																		"src": "3578:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3555:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:15"
																},
																"nativeSrc": "3555:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3555:39:15"
															},
															"nativeSrc": "3555:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "3555:39:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3618:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3618:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3623:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3623:4:15",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3614:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3614:3:15"
																		},
																		"nativeSrc": "3614:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3614:14:15"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3630:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3630:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3607:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:15"
																},
																"nativeSrc": "3607:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3607:34:15"
															},
															"nativeSrc": "3607:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3607:34:15"
														},
														{
															"nativeSrc": "3654:30:15",
															"nodeType": "YulAssignment",
															"src": "3654:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3674:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3674:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:15",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3664:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "3664:9:15"
																},
																"nativeSrc": "3664:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3664:20:15"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3654:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2425,
														"isOffset": false,
														"isSlot": false,
														"src": "3654:6:15",
														"valueSize": 1
													},
													{
														"declaration": 2420,
														"isOffset": false,
														"isSlot": false,
														"src": "3578:15:15",
														"valueSize": 1
													},
													{
														"declaration": 2422,
														"isOffset": false,
														"isSlot": false,
														"src": "3630:10:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2427,
												"nodeType": "InlineAssembly",
												"src": "3445:249:15"
											}
										]
									},
									"documentation": {
										"id": 2418,
										"nodeType": "StructuredDocumentation",
										"src": "2890:431:15",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3335:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3359:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3351:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2419,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3384:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3376:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3350:45:15"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3427:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3419:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:16:15"
									},
									"scope": 2430,
									"src": "3326:374:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2431,
							"src": "521:3181:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3580:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts@5.1.0/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							4036
						],
						"Panic": [
							1120
						],
						"SafeCast": [
							5801
						]
					},
					"id": 4037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 2434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4037,
							"sourceUnit": 1121,
							"src": "129:35:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2433,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1120,
										"src": "137:5:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 2436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4037,
							"sourceUnit": 5802,
							"src": "165:40:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2435,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5801,
										"src": "173:8:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2437,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 4036,
							"linearizedBaseContracts": [
								4036
							],
							"name": "Math",
							"nameLocation": "289:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 2442,
									"members": [
										{
											"id": 2438,
											"name": "Floor",
											"nameLocation": "324:5:16",
											"nodeType": "EnumValue",
											"src": "324:5:16"
										},
										{
											"id": 2439,
											"name": "Ceil",
											"nameLocation": "367:4:16",
											"nodeType": "EnumValue",
											"src": "367:4:16"
										},
										{
											"id": 2440,
											"name": "Trunc",
											"nameLocation": "409:5:16",
											"nodeType": "EnumValue",
											"src": "409:5:16"
										},
										{
											"id": 2441,
											"name": "Expand",
											"nameLocation": "439:6:16",
											"nodeType": "EnumValue",
											"src": "439:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:16",
									"nodeType": "EnumDefinition",
									"src": "300:169:16"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "677:140:16",
										"statements": [
											{
												"id": 2472,
												"nodeType": "UncheckedBlock",
												"src": "687:124:16",
												"statements": [
													{
														"assignments": [
															2455
														],
														"declarations": [
															{
																"constant": false,
																"id": 2455,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2472,
																"src": "711:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2454,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2459,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2456,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "723:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2457,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "727:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2460,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2455,
																"src": "746:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2461,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "750:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2467,
														"nodeType": "IfStatement",
														"src": "742:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2465,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2453,
															"id": 2466,
															"nodeType": "Return",
															"src": "753:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2469,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2455,
																	"src": "798:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2470,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2453,
														"id": 2471,
														"nodeType": "Return",
														"src": "784:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2443,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:16",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "602:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "613:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:16"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "647:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "661:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:16"
									},
									"scope": 4036,
									"src": "586:231:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "1028:113:16",
										"statements": [
											{
												"id": 2500,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2486,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "1066:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2487,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "1070:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2493,
														"nodeType": "IfStatement",
														"src": "1062:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2491,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2485,
															"id": 2492,
															"nodeType": "Return",
															"src": "1073:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2495,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2477,
																		"src": "1118:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2496,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "1122:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2498,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2485,
														"id": 2499,
														"nodeType": "Return",
														"src": "1104:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2475,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "953:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "964:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:16"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "998:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1012:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:16"
									},
									"scope": 4036,
									"src": "937:204:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2543,
										"nodeType": "Block",
										"src": "1355:417:16",
										"statements": [
											{
												"id": 2542,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2514,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "1623:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2521,
														"nodeType": "IfStatement",
														"src": "1619:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2519,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2513,
															"id": 2520,
															"nodeType": "Return",
															"src": "1631:16:16"
														}
													},
													{
														"assignments": [
															2523
														],
														"declarations": [
															{
																"constant": false,
																"id": 2523,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2542,
																"src": "1661:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2522,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2527,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2524,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "1673:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2525,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "1677:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2528,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "1696:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2529,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "1700:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2531,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "1705:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2537,
														"nodeType": "IfStatement",
														"src": "1692:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2535,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2513,
															"id": 2536,
															"nodeType": "Return",
															"src": "1708:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2539,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "1753:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2540,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2513,
														"id": 2541,
														"nodeType": "Return",
														"src": "1739:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "1280:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "1291:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:16"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "1325:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "1339:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:16"
									},
									"scope": 4036,
									"src": "1264:508:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2571,
										"nodeType": "Block",
										"src": "1987:114:16",
										"statements": [
											{
												"id": 2570,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2556,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "2025:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2563,
														"nodeType": "IfStatement",
														"src": "2021:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2561,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2555,
															"id": 2562,
															"nodeType": "Return",
															"src": "2033:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2565,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2547,
																		"src": "2078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2566,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2549,
																		"src": "2082:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2568,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2555,
														"id": 2569,
														"nodeType": "Return",
														"src": "2064:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2545,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:16",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "1912:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "1923:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:16"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "1957:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "1971:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:16"
									},
									"scope": 4036,
									"src": "1896:205:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "2326:114:16",
										"statements": [
											{
												"id": 2598,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2584,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2577,
																"src": "2364:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "2360:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2589,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2583,
															"id": 2590,
															"nodeType": "Return",
															"src": "2372:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2593,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2575,
																		"src": "2417:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2594,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "2421:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2596,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2583,
														"id": 2597,
														"nodeType": "Return",
														"src": "2403:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2573,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "2251:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "2262:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:16"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "2296:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "2310:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:16"
									},
									"scope": 4036,
									"src": "2235:205:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2626,
										"nodeType": "Block",
										"src": "2912:207:16",
										"statements": [
											{
												"id": 2625,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:16",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "3060:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2613,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2605,
																						"src": "3066:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 2614,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2607,
																						"src": "3070:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2616,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2619,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2603,
																					"src": "3091:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 2617,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5801,
																					"src": "3075:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:16",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5800,
																				"src": "3075:15:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2622,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2611,
														"id": 2624,
														"nodeType": "Return",
														"src": "3053:49:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:16",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 2627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2842:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2602,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2858:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2869:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:16"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "2903:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:16"
									},
									"scope": 4036,
									"src": "2825:294:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "3256:44:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2638,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2630,
																"src": "3281:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2639,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "3285:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2641,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2630,
															"src": "3288:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2642,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "3291:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2637,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "3273:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2636,
												"id": 2644,
												"nodeType": "Return",
												"src": "3266:27:16"
											}
										]
									},
									"documentation": {
										"id": 2628,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3202:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3213:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:16"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3247:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:16"
									},
									"scope": 4036,
									"src": "3189:111:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "3438:44:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2657,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2649,
																"src": "3463:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2658,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2660,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "3470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2661,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2651,
															"src": "3473:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2656,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "3455:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2655,
												"id": 2663,
												"nodeType": "Return",
												"src": "3448:27:16"
											}
										]
									},
									"documentation": {
										"id": 2647,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3384:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:16"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "3429:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:16"
									},
									"scope": 4036,
									"src": "3371:111:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "3666:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2675,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "3721:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2676,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2670,
																	"src": "3725:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2678,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2679,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2668,
																		"src": "3731:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2680,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2670,
																		"src": "3735:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2682,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2674,
												"id": 2686,
												"nodeType": "Return",
												"src": "3713:28:16"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "3612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "3623:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:16"
									},
									"returnParameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "3657:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:16"
									},
									"scope": 4036,
									"src": "3595:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2728,
										"nodeType": "Block",
										"src": "4040:633:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2698,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2693,
														"src": "4054:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2709,
												"nodeType": "IfStatement",
												"src": "4050:150:16",
												"trueBody": {
													"id": 2708,
													"nodeType": "Block",
													"src": "4062:138:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2704,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "4166:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:16",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "4166:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2701,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "4154:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:16",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1119,
																	"src": "4154:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2707,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:16"
														}
													]
												}
											},
											{
												"id": 2727,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:16",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2712,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2691,
																			"src": "4630:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2710,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "4614:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "4614:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2718,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2716,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2691,
																							"src": "4641:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2717,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2719,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2720,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2693,
																				"src": "4650:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2724,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2697,
														"id": 2726,
														"nodeType": "Return",
														"src": "4607:49:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "3986:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "3997:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:16"
									},
									"returnParameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "4031:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:16"
									},
									"scope": 4036,
									"src": "3969:704:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "5094:4128:16",
										"statements": [
											{
												"id": 2864,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:16",
												"statements": [
													{
														"assignments": [
															2742
														],
														"declarations": [
															{
																"constant": false,
																"id": 2742,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2864,
																"src": "5433:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2741,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2746,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2743,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "5449:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2744,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2734,
																"src": "5453:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:16"
													},
													{
														"assignments": [
															2748
														],
														"declarations": [
															{
																"constant": false,
																"id": 2748,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2864,
																"src": "5513:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2747,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2749,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:16"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:16",
															"nodeType": "YulBlock",
															"src": "5593:122:16",
															"statements": [
																{
																	"nativeSrc": "5611:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:16",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:16"
																				},
																				"nativeSrc": "5634:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:16"
																		},
																		"nativeSrc": "5621:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:16",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:16",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:16"
																				},
																				"nativeSrc": "5671:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:16"
																				},
																				"nativeSrc": "5687:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:16"
																		},
																		"nativeSrc": "5667:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2742,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2742,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2748,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2732,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2734,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:16",
																"valueSize": 1
															}
														],
														"id": 2750,
														"nodeType": "InlineAssembly",
														"src": "5584:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2751,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2748,
																"src": "5796:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2759,
														"nodeType": "IfStatement",
														"src": "5792:368:16",
														"trueBody": {
															"id": 2758,
															"nodeType": "Block",
															"src": "5808:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2754,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "6126:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2755,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "6134:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2740,
																	"id": 2757,
																	"nodeType": "Return",
																	"src": "6119:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2760,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "6270:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2761,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2748,
																"src": "6285:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2778,
														"nodeType": "IfStatement",
														"src": "6266:143:16",
														"trueBody": {
															"id": 2777,
															"nodeType": "Block",
															"src": "6292:117:16",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2769,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2767,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2736,
																							"src": "6330:11:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 2768,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 2770,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1120,
																							"src": "6348:5:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:16",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1087,
																						"src": "6348:22:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 2772,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1120,
																							"src": "6372:5:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2773,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:16",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1083,
																						"src": "6372:20:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2766,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "6322:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2763,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1120,
																				"src": "6310:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:16",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1119,
																			"src": "6310:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:16"
																}
															]
														}
													},
													{
														"assignments": [
															2780
														],
														"declarations": [
															{
																"constant": false,
																"id": 2780,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2864,
																"src": "6664:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2779,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2781,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:16"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:16",
															"nodeType": "YulBlock",
															"src": "6704:291:16",
															"statements": [
																{
																	"nativeSrc": "6773:38:16",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:16"
																		},
																		"nativeSrc": "6786:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:16",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:16"
																				},
																				"nativeSrc": "6913:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:16"
																		},
																		"nativeSrc": "6902:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:16",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:16"
																		},
																		"nativeSrc": "6960:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2736,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2742,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2742,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2742,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2748,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2748,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2780,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2780,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2780,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2732,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2734,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:16",
																"valueSize": 1
															}
														],
														"id": 2782,
														"nodeType": "InlineAssembly",
														"src": "6695:300:16"
													},
													{
														"assignments": [
															2784
														],
														"declarations": [
															{
																"constant": false,
																"id": 2784,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2864,
																"src": "7199:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2783,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2791,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2785,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2736,
																"src": "7214:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2787,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "7233:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2789,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:16"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:16",
															"nodeType": "YulBlock",
															"src": "7268:366:16",
															"statements": [
																{
																	"nativeSrc": "7333:37:16",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:16"
																		},
																		"nativeSrc": "7348:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:16",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:16"
																		},
																		"nativeSrc": "7446:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:16",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:16",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:16"
																						},
																						"nativeSrc": "7597:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:16"
																				},
																				"nativeSrc": "7593:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:16"
																		},
																		"nativeSrc": "7589:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2736,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2736,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2742,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2742,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2784,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2784,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2784,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2784,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2784,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:16",
																"valueSize": 1
															}
														],
														"id": 2792,
														"nodeType": "InlineAssembly",
														"src": "7259:375:16"
													},
													{
														"expression": {
															"id": 2797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2793,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "7700:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2794,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2748,
																	"src": "7709:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2795,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "7717:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2798,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:16"
													},
													{
														"assignments": [
															2800
														],
														"declarations": [
															{
																"constant": false,
																"id": 2800,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2864,
																"src": "8056:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2799,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2807,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2802,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2736,
																			"src": "8079:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2804,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:16"
													},
													{
														"expression": {
															"id": 2814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2808,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2800,
																"src": "8312:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "8327:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2811,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "8341:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2815,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:16"
													},
													{
														"expression": {
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2816,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2800,
																"src": "8382:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2818,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "8397:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2819,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "8411:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2823,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:16"
													},
													{
														"expression": {
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2824,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2800,
																"src": "8454:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2826,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "8469:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2827,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "8483:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2831,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:16"
													},
													{
														"expression": {
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2832,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2800,
																"src": "8525:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2834,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "8540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2835,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "8554:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2839,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:16"
													},
													{
														"expression": {
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2840,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2800,
																"src": "8598:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2842,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "8613:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2843,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "8627:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2847,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:16"
													},
													{
														"expression": {
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2848,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2800,
																"src": "8672:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2850,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2736,
																		"src": "8687:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2851,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "8701:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2855,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:16"
													},
													{
														"expression": {
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2856,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2739,
																"src": "9154:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2857,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "9163:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2858,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2800,
																	"src": "9171:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2861,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:16"
													},
													{
														"expression": {
															"id": 2862,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "9199:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2740,
														"id": 2863,
														"nodeType": "Return",
														"src": "9192:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2730,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:16",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "5012:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "5023:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "5034:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:16"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "5078:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:16"
									},
									"scope": 4036,
									"src": "4996:4226:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2902,
										"nodeType": "Block",
										"src": "9461:128:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2882,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2869,
																"src": "9485:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2883,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "9488:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2884,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "9491:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2881,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2866,
																2903
															],
															"referencedDeclaration": 2866,
															"src": "9478:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2889,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2876,
																			"src": "9539:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$2442",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$2442",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 2888,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4035,
																		"src": "9522:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2442_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2892,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2869,
																				"src": "9559:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2893,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "9562:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2894,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2873,
																				"src": "9565:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2891,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2886,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5801,
																"src": "9506:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:16",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5800,
															"src": "9506:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2880,
												"id": 2901,
												"nodeType": "Return",
												"src": "9471:111:16"
											}
										]
									},
									"documentation": {
										"id": 2867,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:16",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "9367:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "9378:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "9389:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "9410:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2442",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2874,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2442,
														"src": "9410:8:16"
													},
													"referencedDeclaration": 2442,
													"src": "9410:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2442",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:16"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "9452:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:16"
									},
									"scope": 4036,
									"src": "9351:238:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2999,
										"nodeType": "Block",
										"src": "10223:1849:16",
										"statements": [
											{
												"id": 2998,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2913,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2908,
																"src": "10261:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2918,
														"nodeType": "IfStatement",
														"src": "10257:20:16",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2912,
															"id": 2917,
															"nodeType": "Return",
															"src": "10269:8:16"
														}
													},
													{
														"assignments": [
															2920
														],
														"declarations": [
															{
																"constant": false,
																"id": 2920,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2998,
																"src": "10748:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2919,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2924,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2921,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2906,
																"src": "10768:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2922,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2908,
																"src": "10772:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:16"
													},
													{
														"assignments": [
															2926
														],
														"declarations": [
															{
																"constant": false,
																"id": 2926,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:16",
																"nodeType": "VariableDeclaration",
																"scope": 2998,
																"src": "10787:11:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2928,
														"initialValue": {
															"id": 2927,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2908,
															"src": "10801:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:16"
													},
													{
														"assignments": [
															2930
														],
														"declarations": [
															{
																"constant": false,
																"id": 2930,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2998,
																"src": "10938:8:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2929,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2932,
														"initialValue": {
															"hexValue": "30",
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:16"
													},
													{
														"assignments": [
															2934
														],
														"declarations": [
															{
																"constant": false,
																"id": 2934,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2998,
																"src": "10964:8:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2933,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2936,
														"initialValue": {
															"hexValue": "31",
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:16"
													},
													{
														"body": {
															"id": 2973,
															"nodeType": "Block",
															"src": "11014:882:16",
															"statements": [
																{
																	"assignments": [
																		2941
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2941,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:16",
																			"nodeType": "VariableDeclaration",
																			"scope": 2973,
																			"src": "11032:16:16",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2940,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2945,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2942,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2926,
																			"src": "11051:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2943,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2920,
																			"src": "11057:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:16"
																},
																{
																	"expression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2946,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2926,
																					"src": "11086:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2947,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "11091:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2948,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2949,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "11191:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2950,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2926,
																						"src": "11436:3:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2951,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2920,
																							"src": "11442:9:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2952,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2941,
																							"src": "11454:8:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2955,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2957,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:16"
																},
																{
																	"expression": {
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2958,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2930,
																					"src": "11500:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 2959,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2934,
																					"src": "11503:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2960,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2961,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2934,
																					"src": "11585:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 2969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2962,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2930,
																						"src": "11839:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 2968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2963,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2934,
																							"src": "11843:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2966,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2941,
																									"src": "11854:8:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2965,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 2964,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:16",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2967,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:16",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2970,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2972,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:16"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2937,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "10998:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2974,
														"nodeType": "WhileStatement",
														"src": "10991:905:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2975,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2926,
																"src": "11914:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2980,
														"nodeType": "IfStatement",
														"src": "11910:22:16",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2912,
															"id": 2979,
															"nodeType": "Return",
															"src": "11924:8:16"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2982,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2930,
																		"src": "11983:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2985,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2908,
																		"src": "11990:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:16",
																				"subExpression": {
																					"id": 2988,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2930,
																					"src": "12003:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2986,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:16",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2994,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2930,
																			"src": "12015:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2992,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2981,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2627,
																"src": "11975:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2912,
														"id": 2997,
														"nodeType": "Return",
														"src": "11968:50:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2904,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:16",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 3000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "10169:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "10180:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:16"
									},
									"returnParameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "10214:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:16"
									},
									"scope": 4036,
									"src": "10153:1919:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3020,
										"nodeType": "Block",
										"src": "12672:82:16",
										"statements": [
											{
												"id": 3019,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 3012,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3003,
																	"src": "12725:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3013,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3005,
																		"src": "12728:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3016,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "12735:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3010,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4036,
																	"src": "12713:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$4036_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 3011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:16",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3057,
																"src": "12713:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3009,
														"id": 3018,
														"nodeType": "Return",
														"src": "12706:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3001,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:16",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 3021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "12618:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "12629:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:16"
									},
									"returnParameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "12663:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:16"
									},
									"scope": 4036,
									"src": "12597:157:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3056,
										"nodeType": "Block",
										"src": "13524:174:16",
										"statements": [
											{
												"assignments": [
													3034,
													3036
												],
												"declarations": [
													{
														"constant": false,
														"id": 3034,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 3056,
														"src": "13535:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3033,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3036,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3056,
														"src": "13549:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3042,
												"initialValue": {
													"arguments": [
														{
															"id": 3038,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "13577:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3039,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3026,
															"src": "13580:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3040,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3028,
															"src": "13583:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3037,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3081,
															3163
														],
														"referencedDeclaration": 3081,
														"src": "13567:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:16"
											},
											{
												"condition": {
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:16",
													"subExpression": {
														"id": 3043,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3034,
														"src": "13600:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3053,
												"nodeType": "IfStatement",
												"src": "13595:74:16",
												"trueBody": {
													"id": 3052,
													"nodeType": "Block",
													"src": "13609:60:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3048,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "13635:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 3049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:16",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "13635:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3045,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "13623:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:16",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1119,
																	"src": "13623:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3051,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3054,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3036,
													"src": "13685:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3032,
												"id": 3055,
												"nodeType": "Return",
												"src": "13678:13:16"
											}
										]
									},
									"documentation": {
										"id": 3022,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:16",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 3057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "13459:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "13470:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "13481:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:16"
									},
									"returnParameters": {
										"id": 3032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "13515:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:16"
									},
									"scope": 4036,
									"src": "13443:255:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "14552:1493:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3071,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "14566:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3078,
												"nodeType": "IfStatement",
												"src": "14562:29:16",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 3076,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 3070,
													"id": 3077,
													"nodeType": "Return",
													"src": "14574:17:16"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:16",
													"nodeType": "YulBlock",
													"src": "14626:1413:16",
													"statements": [
														{
															"nativeSrc": "14640:22:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:16",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:16"
																},
																"nativeSrc": "14651:11:16",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:16"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:16",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:16"
																},
																"nativeSrc": "15563:17:16",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:16"
															},
															"nativeSrc": "15563:17:16",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:16",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:16"
																		},
																		"nativeSrc": "15600:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:16"
																},
																"nativeSrc": "15593:28:16",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:16"
															},
															"nativeSrc": "15593:28:16",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:16",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:16",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:16"
																		},
																		"nativeSrc": "15641:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:16"
																},
																"nativeSrc": "15634:28:16",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:16"
															},
															"nativeSrc": "15634:28:16",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:16",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:16",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:16"
																		},
																		"nativeSrc": "15682:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:16"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:16"
																},
																"nativeSrc": "15675:25:16",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:16"
															},
															"nativeSrc": "15675:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:16",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:16",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:16"
																		},
																		"nativeSrc": "15720:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:16"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:16"
																},
																"nativeSrc": "15713:25:16",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:16"
															},
															"nativeSrc": "15713:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:16",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:16",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:16"
																		},
																		"nativeSrc": "15758:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:16"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:16"
																},
																"nativeSrc": "15751:25:16",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:16"
															},
															"nativeSrc": "15751:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:16"
														},
														{
															"nativeSrc": "15938:57:16",
															"nodeType": "YulAssignment",
															"src": "15938:57:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:16"
																		},
																		"nativeSrc": "15960:5:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:16",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:16",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:16",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:16",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:16"
																},
																"nativeSrc": "15949:46:16",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:16"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:16"
																}
															]
														},
														{
															"nativeSrc": "16008:21:16",
															"nodeType": "YulAssignment",
															"src": "16008:21:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:16",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:16",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:16"
																},
																"nativeSrc": "16018:11:16",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3060,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:16",
														"valueSize": 1
													},
													{
														"declaration": 3062,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:16",
														"valueSize": 1
													},
													{
														"declaration": 3064,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:16",
														"valueSize": 1
													},
													{
														"declaration": 3069,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:16",
														"valueSize": 1
													},
													{
														"declaration": 3067,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 3079,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:16"
											}
										]
									},
									"documentation": {
										"id": 3058,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:16",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 3081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "14466:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "14477:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "14488:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:16"
									},
									"returnParameters": {
										"id": 3070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "14522:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "14536:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:16"
									},
									"scope": 4036,
									"src": "14447:1598:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3116,
										"nodeType": "Block",
										"src": "16242:179:16",
										"statements": [
											{
												"assignments": [
													3094,
													3096
												],
												"declarations": [
													{
														"constant": false,
														"id": 3094,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 3116,
														"src": "16253:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3093,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3096,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3116,
														"src": "16267:19:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3095,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3102,
												"initialValue": {
													"arguments": [
														{
															"id": 3098,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3084,
															"src": "16300:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 3099,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "16303:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 3100,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3088,
															"src": "16306:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3097,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3081,
															3163
														],
														"referencedDeclaration": 3163,
														"src": "16290:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:16"
											},
											{
												"condition": {
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:16",
													"subExpression": {
														"id": 3103,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3094,
														"src": "16323:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3113,
												"nodeType": "IfStatement",
												"src": "16318:74:16",
												"trueBody": {
													"id": 3112,
													"nodeType": "Block",
													"src": "16332:60:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3108,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "16358:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:16",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "16358:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3105,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "16346:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1120_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:16",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1119,
																	"src": "16346:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3111,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3114,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3096,
													"src": "16408:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 3092,
												"id": 3115,
												"nodeType": "Return",
												"src": "16401:13:16"
											}
										]
									},
									"documentation": {
										"id": 3082,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:16",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 3117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "16157:14:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "16173:14:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3088,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "16189:14:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:16"
									},
									"returnParameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "16228:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:16"
									},
									"scope": 4036,
									"src": "16141:280:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3162,
										"nodeType": "Block",
										"src": "16675:771:16",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 3132,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3124,
															"src": "16700:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3131,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3196,
														"src": "16689:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 3133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3141,
												"nodeType": "IfStatement",
												"src": "16685:47:16",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 3134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 3135,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 3139,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 3130,
													"id": 3140,
													"nodeType": "Return",
													"src": "16704:28:16"
												}
											},
											{
												"assignments": [
													3143
												],
												"declarations": [
													{
														"constant": false,
														"id": 3143,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 3162,
														"src": "16743:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3146,
												"initialValue": {
													"expression": {
														"id": 3144,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3124,
														"src": "16758:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 3145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:16",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:16"
											},
											{
												"expression": {
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3147,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3129,
														"src": "16848:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3150,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3120,
																	"src": "16874:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:16",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3152,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "16884:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:16",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3154,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3143,
																"src": "16894:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "16900:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 3156,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "16903:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 3157,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3124,
																"src": "16906:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 3148,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 3149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:16",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 3158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 3160,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:16"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:16",
													"nodeType": "YulBlock",
													"src": "16944:496:16",
													"statements": [
														{
															"nativeSrc": "16958:32:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:16",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:16"
																},
																"nativeSrc": "16973:17:16",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:16"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:16",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:16",
															"nodeType": "YulAssignment",
															"src": "17080:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:16"
																		},
																		"nativeSrc": "17102:5:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:16",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:16"
																		},
																		"nativeSrc": "17124:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:16"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:16"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:16"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:16",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:16"
																},
																"nativeSrc": "17091:62:16",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:16"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:16"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:16"
																},
																"nativeSrc": "17302:20:16",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:16"
															},
															"nativeSrc": "17302:20:16",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:16",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:16"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:16"
																		},
																		"nativeSrc": "17411:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:16"
																},
																"nativeSrc": "17398:32:16",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:16"
															},
															"nativeSrc": "17398:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:16"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3143,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:16",
														"valueSize": 1
													},
													{
														"declaration": 3143,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:16",
														"valueSize": 1
													},
													{
														"declaration": 3143,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:16",
														"valueSize": 1
													},
													{
														"declaration": 3129,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:16",
														"valueSize": 1
													},
													{
														"declaration": 3129,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:16",
														"valueSize": 1
													},
													{
														"declaration": 3129,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:16",
														"valueSize": 1
													},
													{
														"declaration": 3127,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 3161,
												"nodeType": "InlineAssembly",
												"src": "16919:521:16"
											}
										]
									},
									"documentation": {
										"id": 3118,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:16",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 3163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "16548:14:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "16572:14:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "16596:14:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:16"
									},
									"returnParameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "16640:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "16654:19:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:16"
									},
									"scope": 4036,
									"src": "16520:926:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3195,
										"nodeType": "Block",
										"src": "17601:176:16",
										"statements": [
											{
												"body": {
													"id": 3191,
													"nodeType": "Block",
													"src": "17658:92:16",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 3186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3182,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3166,
																		"src": "17676:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3184,
																	"indexExpression": {
																		"id": 3183,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3172,
																		"src": "17686:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3190,
															"nodeType": "IfStatement",
															"src": "17672:68:16",
															"trueBody": {
																"id": 3189,
																"nodeType": "Block",
																"src": "17695:45:16",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 3187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 3170,
																		"id": 3188,
																		"nodeType": "Return",
																		"src": "17713:12:16"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3175,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3172,
														"src": "17631:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3176,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3166,
															"src": "17635:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3192,
												"initializationExpression": {
													"assignments": [
														3172
													],
													"declarations": [
														{
															"constant": false,
															"id": 3172,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 3192,
															"src": "17616:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3171,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3174,
													"initialValue": {
														"hexValue": "30",
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:16"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:16",
														"subExpression": {
															"id": 3179,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3172,
															"src": "17655:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3181,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:16"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:16"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3170,
												"id": 3194,
												"nodeType": "Return",
												"src": "17759:11:16"
											}
										]
									},
									"documentation": {
										"id": 3164,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:16",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 3196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "17549:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:16"
									},
									"returnParameters": {
										"id": 3170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "17595:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:16"
									},
									"scope": 4036,
									"src": "17529:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3414,
										"nodeType": "Block",
										"src": "18137:5124:16",
										"statements": [
											{
												"id": 3413,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3204,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3199,
																"src": "18241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3210,
														"nodeType": "IfStatement",
														"src": "18237:53:16",
														"trueBody": {
															"id": 3209,
															"nodeType": "Block",
															"src": "18249:41:16",
															"statements": [
																{
																	"expression": {
																		"id": 3207,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3199,
																		"src": "18274:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 3203,
																	"id": 3208,
																	"nodeType": "Return",
																	"src": "18267:8:16"
																}
															]
														}
													},
													{
														"assignments": [
															3212
														],
														"declarations": [
															{
																"constant": false,
																"id": 3212,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:16",
																"nodeType": "VariableDeclaration",
																"scope": 3413,
																"src": "19217:10:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3211,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3214,
														"initialValue": {
															"id": 3213,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3199,
															"src": "19230:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:16"
													},
													{
														"assignments": [
															3216
														],
														"declarations": [
															{
																"constant": false,
																"id": 3216,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:16",
																"nodeType": "VariableDeclaration",
																"scope": 3413,
																"src": "19245:10:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3215,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3218,
														"initialValue": {
															"hexValue": "31",
															"id": 3217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3219,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "19278:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 3221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 3223,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3234,
														"nodeType": "IfStatement",
														"src": "19274:92:16",
														"trueBody": {
															"id": 3233,
															"nodeType": "Block",
															"src": "19296:70:16",
															"statements": [
																{
																	"expression": {
																		"id": 3227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3225,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3212,
																			"src": "19314:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3228,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:16"
																},
																{
																	"expression": {
																		"id": 3231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3229,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "19342:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3232,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3235,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "19383:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 3238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 3237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 3239,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3250,
														"nodeType": "IfStatement",
														"src": "19379:90:16",
														"trueBody": {
															"id": 3249,
															"nodeType": "Block",
															"src": "19400:69:16",
															"statements": [
																{
																	"expression": {
																		"id": 3243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3241,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3212,
																			"src": "19418:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3244,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:16"
																},
																{
																	"expression": {
																		"id": 3247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3245,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "19445:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3248,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3251,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "19486:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 3254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 3253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 3255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3266,
														"nodeType": "IfStatement",
														"src": "19482:90:16",
														"trueBody": {
															"id": 3265,
															"nodeType": "Block",
															"src": "19503:69:16",
															"statements": [
																{
																	"expression": {
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3257,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3212,
																			"src": "19521:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3260,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:16"
																},
																{
																	"expression": {
																		"id": 3263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3261,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "19548:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3264,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3267,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "19589:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 3270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 3269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 3271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3282,
														"nodeType": "IfStatement",
														"src": "19585:89:16",
														"trueBody": {
															"id": 3281,
															"nodeType": "Block",
															"src": "19606:68:16",
															"statements": [
																{
																	"expression": {
																		"id": 3275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3273,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3212,
																			"src": "19624:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3276,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:16"
																},
																{
																	"expression": {
																		"id": 3279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3277,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "19651:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3280,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3283,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "19691:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 3286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 3285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 3287,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3298,
														"nodeType": "IfStatement",
														"src": "19687:87:16",
														"trueBody": {
															"id": 3297,
															"nodeType": "Block",
															"src": "19707:67:16",
															"statements": [
																{
																	"expression": {
																		"id": 3291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3289,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3212,
																			"src": "19725:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3292,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:16"
																},
																{
																	"expression": {
																		"id": 3295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3293,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "19751:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3296,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3299,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "19791:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 3302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 3301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 3303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3314,
														"nodeType": "IfStatement",
														"src": "19787:87:16",
														"trueBody": {
															"id": 3313,
															"nodeType": "Block",
															"src": "19807:67:16",
															"statements": [
																{
																	"expression": {
																		"id": 3307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3305,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3212,
																			"src": "19825:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3308,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:16"
																},
																{
																	"expression": {
																		"id": 3311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3309,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "19851:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3312,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3315,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "19891:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 3318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 3317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 3319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3326,
														"nodeType": "IfStatement",
														"src": "19887:61:16",
														"trueBody": {
															"id": 3325,
															"nodeType": "Block",
															"src": "19907:41:16",
															"statements": [
																{
																	"expression": {
																		"id": 3323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3321,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "19925:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3324,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:16"
																}
															]
														}
													},
													{
														"expression": {
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3327,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "20368:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 3328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3329,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "20378:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3331,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3335,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:16"
													},
													{
														"expression": {
															"id": 3345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3336,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "22273:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3337,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "22279:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3338,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "22284:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3339,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3216,
																					"src": "22288:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3342,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3346,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:16"
													},
													{
														"expression": {
															"id": 3356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3347,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "22382:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3348,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "22388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3349,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "22393:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3350,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3216,
																					"src": "22397:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3353,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3357,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:16"
													},
													{
														"expression": {
															"id": 3367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3358,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "22493:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3359,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "22499:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3360,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "22504:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3361,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3216,
																					"src": "22508:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3364,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3368,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:16"
													},
													{
														"expression": {
															"id": 3378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3369,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "22602:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3370,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "22608:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3371,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "22613:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3372,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3216,
																					"src": "22617:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3375,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3379,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:16"
													},
													{
														"expression": {
															"id": 3389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3380,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "22712:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3381,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "22718:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "22723:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3383,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3216,
																					"src": "22727:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3390,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:16"
													},
													{
														"expression": {
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3391,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "22822:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3392,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "22828:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3199,
																					"src": "22833:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3394,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3216,
																					"src": "22837:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3401,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3402,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "23211:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3405,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3216,
																			"src": "23232:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3406,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3199,
																				"src": "23237:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3407,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3216,
																				"src": "23241:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3403,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "23216:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "23216:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3203,
														"id": 3412,
														"nodeType": "Return",
														"src": "23204:40:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3197,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 3415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3415,
												"src": "18094:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:16"
									},
									"returnParameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3415,
												"src": "18128:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:16"
									},
									"scope": 4036,
									"src": "18080:5181:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3448,
										"nodeType": "Block",
										"src": "23434:171:16",
										"statements": [
											{
												"id": 3447,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:16",
												"statements": [
													{
														"assignments": [
															3427
														],
														"declarations": [
															{
																"constant": false,
																"id": 3427,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3447,
																"src": "23468:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3426,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3431,
														"initialValue": {
															"arguments": [
																{
																	"id": 3429,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3418,
																	"src": "23490:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3428,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3415,
																	3449
																],
																"referencedDeclaration": 3415,
																"src": "23485:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3432,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3427,
																"src": "23513:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3436,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3421,
																					"src": "23555:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3435,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4035,
																				"src": "23538:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2442_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3427,
																					"src": "23568:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3439,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3427,
																					"src": "23577:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3441,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3418,
																				"src": "23586:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3433,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "23522:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "23522:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3425,
														"id": 3446,
														"nodeType": "Return",
														"src": "23506:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3416,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:16",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "23372:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "23383:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2442",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3419,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2442,
														"src": "23383:8:16"
													},
													"referencedDeclaration": 2442,
													"src": "23383:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2442",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:16"
									},
									"returnParameters": {
										"id": 3425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3449,
												"src": "23425:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:16"
									},
									"scope": 4036,
									"src": "23358:247:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3644,
										"nodeType": "Block",
										"src": "23796:981:16",
										"statements": [
											{
												"assignments": [
													3458
												],
												"declarations": [
													{
														"constant": false,
														"id": 3458,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3644,
														"src": "23806:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3460,
												"initialValue": {
													"hexValue": "30",
													"id": 3459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:16"
											},
											{
												"assignments": [
													3462
												],
												"declarations": [
													{
														"constant": false,
														"id": 3462,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:16",
														"nodeType": "VariableDeclaration",
														"scope": 3644,
														"src": "23834:11:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3463,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:16"
											},
											{
												"id": 3641,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:16",
												"statements": [
													{
														"expression": {
															"id": 3478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3464,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "23879:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 3465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3468,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3452,
																				"src": "23907:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 3474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 3471,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3469,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 3470,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 3472,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3466,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5801,
																			"src": "23891:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:16",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5800,
																		"src": "23891:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3479,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:16"
													},
													{
														"expression": {
															"id": 3482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "23944:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3481,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "23954:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3483,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:16"
													},
													{
														"expression": {
															"id": 3486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3484,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "23971:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3485,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "23981:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3487,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:16"
													},
													{
														"expression": {
															"id": 3502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3488,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "23999:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 3489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3492,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3452,
																				"src": "24026:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 3498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 3495,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3493,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 3494,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 3496,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3497,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3490,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5801,
																			"src": "24010:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:16",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5800,
																		"src": "24010:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3503,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:16"
													},
													{
														"expression": {
															"id": 3506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3504,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "24062:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3505,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24072:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3507,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:16"
													},
													{
														"expression": {
															"id": 3510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3508,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "24089:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3509,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24099:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3511,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:16"
													},
													{
														"expression": {
															"id": 3526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3512,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24117:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 3513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3516,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3452,
																				"src": "24144:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 3522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 3519,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3517,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 3518,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 3520,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3521,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3514,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5801,
																			"src": "24128:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:16",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5800,
																		"src": "24128:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3527,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:16"
													},
													{
														"expression": {
															"id": 3530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3528,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "24180:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3529,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24190:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3531,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:16"
													},
													{
														"expression": {
															"id": 3534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3532,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "24207:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3533,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24217:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3535,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:16"
													},
													{
														"expression": {
															"id": 3550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3536,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24235:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 3537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3540,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3452,
																				"src": "24262:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 3546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 3543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3541,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 3542,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 3544,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3545,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3538,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5801,
																			"src": "24246:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:16",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5800,
																		"src": "24246:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3551,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:16"
													},
													{
														"expression": {
															"id": 3554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "24298:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3553,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24308:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3555,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:16"
													},
													{
														"expression": {
															"id": 3558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3556,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "24325:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3557,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24335:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3559,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:16"
													},
													{
														"expression": {
															"id": 3574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3560,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24353:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 3561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3564,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3452,
																				"src": "24379:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 3570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 3567,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3565,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 3566,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 3568,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3562,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5801,
																			"src": "24363:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:16",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5800,
																		"src": "24363:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3575,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:16"
													},
													{
														"expression": {
															"id": 3578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3576,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "24414:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3577,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24424:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3579,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:16"
													},
													{
														"expression": {
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3580,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "24441:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3581,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24451:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3583,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:16"
													},
													{
														"expression": {
															"id": 3598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3584,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24469:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 3585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3588,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3452,
																				"src": "24495:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 3594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 3591,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3589,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 3590,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 3592,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3586,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5801,
																			"src": "24479:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:16",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5800,
																		"src": "24479:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3599,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:16"
													},
													{
														"expression": {
															"id": 3602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3600,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "24530:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3601,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24540:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3603,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:16"
													},
													{
														"expression": {
															"id": 3606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3604,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "24557:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3605,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24567:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3607,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:16"
													},
													{
														"expression": {
															"id": 3622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3608,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24585:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3612,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3452,
																				"src": "24611:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 3618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 3615,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3613,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 3614,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 3616,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3610,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5801,
																			"src": "24595:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:16",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5800,
																		"src": "24595:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3623,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:16"
													},
													{
														"expression": {
															"id": 3626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3624,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3452,
																"src": "24646:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3625,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24656:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3627,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:16"
													},
													{
														"expression": {
															"id": 3630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3628,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "24673:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3629,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "24683:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3631,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:16"
													},
													{
														"expression": {
															"id": 3639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3632,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "24701:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3452,
																			"src": "24727:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3633,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "24711:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "24711:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3640,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:16"
													}
												]
											},
											{
												"expression": {
													"id": 3642,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3458,
													"src": "24764:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3456,
												"id": 3643,
												"nodeType": "Return",
												"src": "24757:13:16"
											}
										]
									},
									"documentation": {
										"id": 3450,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "23749:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:16"
									},
									"returnParameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "23787:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:16"
									},
									"scope": 4036,
									"src": "23735:1042:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3678,
										"nodeType": "Block",
										"src": "25010:175:16",
										"statements": [
											{
												"id": 3677,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:16",
												"statements": [
													{
														"assignments": [
															3657
														],
														"declarations": [
															{
																"constant": false,
																"id": 3657,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3677,
																"src": "25044:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3661,
														"initialValue": {
															"arguments": [
																{
																	"id": 3659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3648,
																	"src": "25066:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3658,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3645,
																	3679
																],
																"referencedDeclaration": 3645,
																"src": "25061:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3662,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3657,
																"src": "25093:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3666,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3651,
																					"src": "25135:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3665,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4035,
																				"src": "25118:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2442_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 3669,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3657,
																					"src": "25153:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3671,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3648,
																				"src": "25162:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3663,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "25102:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "25102:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3655,
														"id": 3676,
														"nodeType": "Return",
														"src": "25086:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3646,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3679,
												"src": "24944:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3651,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3679,
												"src": "24959:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2442",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3649,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2442,
														"src": "24959:8:16"
													},
													"referencedDeclaration": 2442,
													"src": "24959:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2442",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:16"
									},
									"returnParameters": {
										"id": 3655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3679,
												"src": "25001:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:16"
									},
									"scope": 4036,
									"src": "24930:255:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3807,
										"nodeType": "Block",
										"src": "25378:854:16",
										"statements": [
											{
												"assignments": [
													3688
												],
												"declarations": [
													{
														"constant": false,
														"id": 3688,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3807,
														"src": "25388:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3690,
												"initialValue": {
													"hexValue": "30",
													"id": 3689,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:16"
											},
											{
												"id": 3804,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3691,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3682,
																"src": "25444:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3707,
														"nodeType": "IfStatement",
														"src": "25440:103:16",
														"trueBody": {
															"id": 3706,
															"nodeType": "Block",
															"src": "25463:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3696,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3682,
																			"src": "25481:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3701,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:16"
																},
																{
																	"expression": {
																		"id": 3704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3702,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3688,
																			"src": "25516:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3705,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3682,
																"src": "25560:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3724,
														"nodeType": "IfStatement",
														"src": "25556:103:16",
														"trueBody": {
															"id": 3723,
															"nodeType": "Block",
															"src": "25579:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3682,
																			"src": "25597:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3718,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:16"
																},
																{
																	"expression": {
																		"id": 3721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3688,
																			"src": "25632:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3722,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3725,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3682,
																"src": "25676:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3741,
														"nodeType": "IfStatement",
														"src": "25672:103:16",
														"trueBody": {
															"id": 3740,
															"nodeType": "Block",
															"src": "25695:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3682,
																			"src": "25713:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3735,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:16"
																},
																{
																	"expression": {
																		"id": 3738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3736,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3688,
																			"src": "25748:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3739,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3742,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3682,
																"src": "25792:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3758,
														"nodeType": "IfStatement",
														"src": "25788:100:16",
														"trueBody": {
															"id": 3757,
															"nodeType": "Block",
															"src": "25810:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3682,
																			"src": "25828:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3752,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:16"
																},
																{
																	"expression": {
																		"id": 3755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3753,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3688,
																			"src": "25862:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3756,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3759,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3682,
																"src": "25905:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3775,
														"nodeType": "IfStatement",
														"src": "25901:100:16",
														"trueBody": {
															"id": 3774,
															"nodeType": "Block",
															"src": "25923:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3764,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3682,
																			"src": "25941:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3769,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:16"
																},
																{
																	"expression": {
																		"id": 3772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3770,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3688,
																			"src": "25975:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3773,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3776,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3682,
																"src": "26018:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3792,
														"nodeType": "IfStatement",
														"src": "26014:100:16",
														"trueBody": {
															"id": 3791,
															"nodeType": "Block",
															"src": "26036:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3781,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3682,
																			"src": "26054:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3786,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:16"
																},
																{
																	"expression": {
																		"id": 3789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3688,
																			"src": "26088:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3790,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3682,
																"src": "26131:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3803,
														"nodeType": "IfStatement",
														"src": "26127:66:16",
														"trueBody": {
															"id": 3802,
															"nodeType": "Block",
															"src": "26149:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3798,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3688,
																			"src": "26167:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3801,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3805,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3688,
													"src": "26219:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3686,
												"id": 3806,
												"nodeType": "Return",
												"src": "26212:13:16"
											}
										]
									},
									"documentation": {
										"id": 3680,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3808,
												"src": "25331:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:16"
									},
									"returnParameters": {
										"id": 3686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3808,
												"src": "25369:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:16"
									},
									"scope": 4036,
									"src": "25316:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3841,
										"nodeType": "Block",
										"src": "26467:177:16",
										"statements": [
											{
												"id": 3840,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:16",
												"statements": [
													{
														"assignments": [
															3820
														],
														"declarations": [
															{
																"constant": false,
																"id": 3820,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3840,
																"src": "26501:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3819,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3824,
														"initialValue": {
															"arguments": [
																{
																	"id": 3822,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3811,
																	"src": "26524:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3821,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3808,
																	3842
																],
																"referencedDeclaration": 3808,
																"src": "26518:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3825,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3820,
																"src": "26551:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3829,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3814,
																					"src": "26593:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3828,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4035,
																				"src": "26576:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2442_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 3831,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 3832,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3820,
																					"src": "26612:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3834,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3811,
																				"src": "26621:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3826,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "26560:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "26560:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3818,
														"id": 3839,
														"nodeType": "Return",
														"src": "26544:83:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3809,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3842,
												"src": "26401:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3814,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3842,
												"src": "26416:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2442",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3812,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2442,
														"src": "26416:8:16"
													},
													"referencedDeclaration": 2442,
													"src": "26416:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2442",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:16"
									},
									"returnParameters": {
										"id": 3818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3842,
												"src": "26458:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:16"
									},
									"scope": 4036,
									"src": "26386:258:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3978,
										"nodeType": "Block",
										"src": "26964:674:16",
										"statements": [
											{
												"assignments": [
													3851
												],
												"declarations": [
													{
														"constant": false,
														"id": 3851,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3978,
														"src": "26974:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3853,
												"initialValue": {
													"hexValue": "30",
													"id": 3852,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:16"
											},
											{
												"assignments": [
													3855
												],
												"declarations": [
													{
														"constant": false,
														"id": 3855,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 3978,
														"src": "27002:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3856,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:16"
											},
											{
												"id": 3975,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:16",
												"statements": [
													{
														"expression": {
															"id": 3869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3857,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3855,
																"src": "27048:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3860,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3845,
																			"src": "27071:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 3866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 3863,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3861,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 3862,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 3864,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3858,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "27055:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "27055:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3870,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:16"
													},
													{
														"expression": {
															"id": 3875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3871,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3845,
																"src": "27108:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3872,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27118:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3876,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:16"
													},
													{
														"expression": {
															"id": 3881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3877,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3851,
																"src": "27142:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3878,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27152:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3882,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:16"
													},
													{
														"expression": {
															"id": 3895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3883,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3855,
																"src": "27176:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3886,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3845,
																			"src": "27199:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 3892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 3889,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3887,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 3888,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 3890,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3884,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "27183:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "27183:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3896,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:16"
													},
													{
														"expression": {
															"id": 3901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3897,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3845,
																"src": "27235:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3898,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27245:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3902,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:16"
													},
													{
														"expression": {
															"id": 3907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3903,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3851,
																"src": "27268:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3904,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27278:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3908,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:16"
													},
													{
														"expression": {
															"id": 3921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3909,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3855,
																"src": "27301:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3912,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3845,
																			"src": "27324:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 3918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 3915,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3913,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 3914,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 3916,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3910,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "27308:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "27308:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3922,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:16"
													},
													{
														"expression": {
															"id": 3927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3923,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3845,
																"src": "27360:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3924,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27370:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3928,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:16"
													},
													{
														"expression": {
															"id": 3933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3929,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3851,
																"src": "27393:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3930,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27403:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3934,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:16"
													},
													{
														"expression": {
															"id": 3947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3935,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3855,
																"src": "27426:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3938,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3845,
																			"src": "27449:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 3944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 3941,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3939,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 3940,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 3942,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3936,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "27433:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "27433:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3948,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:16"
													},
													{
														"expression": {
															"id": 3953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3949,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3845,
																"src": "27485:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3950,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27495:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3954,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:16"
													},
													{
														"expression": {
															"id": 3959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3955,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3851,
																"src": "27518:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3956,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3855,
																	"src": "27528:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3960,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:16"
													},
													{
														"expression": {
															"id": 3973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3961,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3851,
																"src": "27551:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3964,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3845,
																			"src": "27577:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 3970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 3967,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3965,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 3966,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 3968,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3962,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "27561:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "27561:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3974,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:16"
													}
												]
											},
											{
												"expression": {
													"id": 3976,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3851,
													"src": "27625:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3849,
												"id": 3977,
												"nodeType": "Return",
												"src": "27618:13:16"
											}
										]
									},
									"documentation": {
										"id": 3843,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3845,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3979,
												"src": "26917:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:16"
									},
									"returnParameters": {
										"id": 3849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3979,
												"src": "26955:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:16"
									},
									"scope": 4036,
									"src": "26901:737:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4015,
										"nodeType": "Block",
										"src": "27875:184:16",
										"statements": [
											{
												"id": 4014,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:16",
												"statements": [
													{
														"assignments": [
															3991
														],
														"declarations": [
															{
																"constant": false,
																"id": 3991,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 4014,
																"src": "27909:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3990,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3995,
														"initialValue": {
															"arguments": [
																{
																	"id": 3993,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3982,
																	"src": "27933:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3992,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3979,
																	4016
																],
																"referencedDeclaration": 3979,
																"src": "27926:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3991,
																"src": "27960:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 4010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 4000,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3985,
																					"src": "28002:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2442",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3999,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4035,
																				"src": "27985:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2442_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 4001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 4002,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 4005,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 4003,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3991,
																								"src": "28021:6:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 4004,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 4006,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 4008,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3982,
																				"src": "28036:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3997,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5801,
																		"src": "27969:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:16",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5800,
																	"src": "27969:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 4011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3989,
														"id": 4013,
														"nodeType": "Return",
														"src": "27953:89:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3980,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 4016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3982,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 4016,
												"src": "27809:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3985,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 4016,
												"src": "27824:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2442",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3984,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3983,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2442,
														"src": "27824:8:16"
													},
													"referencedDeclaration": 2442,
													"src": "27824:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2442",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:16"
									},
									"returnParameters": {
										"id": 3989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4016,
												"src": "27866:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:16"
									},
									"scope": 4036,
									"src": "27793:266:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4034,
										"nodeType": "Block",
										"src": "28257:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 4032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 4030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 4027,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4020,
																	"src": "28280:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2442",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2442",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 4026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 4025,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 4028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 4029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 4031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4024,
												"id": 4033,
												"nodeType": "Return",
												"src": "28267:31:16"
											}
										]
									},
									"documentation": {
										"id": 4017,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 4035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4020,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 4035,
												"src": "28209:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2442",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 4019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4018,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2442,
														"src": "28209:8:16"
													},
													"referencedDeclaration": 2442,
													"src": "28209:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2442",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:16"
									},
									"returnParameters": {
										"id": 4024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4035,
												"src": "28251:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:16"
									},
									"scope": 4036,
									"src": "28183:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4037,
							"src": "281:28026:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							5801
						]
					},
					"id": 5802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4038,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4039,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:17",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 5801,
							"linearizedBaseContracts": [
								5801
							],
							"name": "SafeCast",
							"nameLocation": "777:8:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 4040,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:17",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 4046,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4042,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 4046,
												"src": "902:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4041,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4046,
												"src": "914:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:17"
									},
									"src": "865:64:17"
								},
								{
									"documentation": {
										"id": 4047,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:17",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 4051,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4049,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4051,
												"src": "1049:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4048,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:17"
									},
									"src": "1015:48:17"
								},
								{
									"documentation": {
										"id": 4052,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:17",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 4058,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4054,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 4058,
												"src": "1177:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4053,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4056,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4058,
												"src": "1189:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4055,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:17"
									},
									"src": "1141:62:17"
								},
								{
									"documentation": {
										"id": 4059,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:17",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 4063,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4061,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4063,
												"src": "1323:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:17"
									},
									"src": "1289:49:17"
								},
								{
									"body": {
										"id": 4090,
										"nodeType": "Block",
										"src": "1695:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4071,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4066,
														"src": "1709:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 4073,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 4072,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 4076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4084,
												"nodeType": "IfStatement",
												"src": "1705:105:17",
												"trueBody": {
													"id": 4083,
													"nodeType": "Block",
													"src": "1736:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 4079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 4080,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4066,
																		"src": "1793:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4078,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "1757:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4082,
															"nodeType": "RevertStatement",
															"src": "1750:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4087,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4066,
															"src": "1834:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 4085,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 4070,
												"id": 4089,
												"nodeType": "Return",
												"src": "1819:21:17"
											}
										]
									},
									"documentation": {
										"id": 4064,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:17",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 4091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4066,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "1648:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:17"
									},
									"returnParameters": {
										"id": 4070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "1686:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 4068,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:17"
									},
									"scope": 5801,
									"src": "1629:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4118,
										"nodeType": "Block",
										"src": "2204:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4099,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4094,
														"src": "2218:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 4101,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 4100,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 4104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4112,
												"nodeType": "IfStatement",
												"src": "2214:105:17",
												"trueBody": {
													"id": 4111,
													"nodeType": "Block",
													"src": "2245:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 4107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 4108,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4094,
																		"src": "2302:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4106,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "2266:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4110,
															"nodeType": "RevertStatement",
															"src": "2259:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4115,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4094,
															"src": "2343:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 4113,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 4098,
												"id": 4117,
												"nodeType": "Return",
												"src": "2328:21:17"
											}
										]
									},
									"documentation": {
										"id": 4092,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:17",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 4119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4119,
												"src": "2157:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:17"
									},
									"returnParameters": {
										"id": 4098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4119,
												"src": "2195:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 4096,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:17"
									},
									"scope": 5801,
									"src": "2138:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4146,
										"nodeType": "Block",
										"src": "2713:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4127,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4122,
														"src": "2727:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 4129,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 4128,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 4132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4140,
												"nodeType": "IfStatement",
												"src": "2723:105:17",
												"trueBody": {
													"id": 4139,
													"nodeType": "Block",
													"src": "2754:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 4135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 4136,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4122,
																		"src": "2811:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4134,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "2775:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4138,
															"nodeType": "RevertStatement",
															"src": "2768:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4143,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4122,
															"src": "2852:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 4141,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 4126,
												"id": 4145,
												"nodeType": "Return",
												"src": "2837:21:17"
											}
										]
									},
									"documentation": {
										"id": 4120,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:17",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 4147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4122,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4147,
												"src": "2666:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:17"
									},
									"returnParameters": {
										"id": 4126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4147,
												"src": "2704:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 4124,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:17"
									},
									"scope": 5801,
									"src": "2647:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4174,
										"nodeType": "Block",
										"src": "3222:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4155,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4150,
														"src": "3236:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 4157,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 4156,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 4160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4168,
												"nodeType": "IfStatement",
												"src": "3232:105:17",
												"trueBody": {
													"id": 4167,
													"nodeType": "Block",
													"src": "3263:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 4163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 4164,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4150,
																		"src": "3320:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4162,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "3284:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4166,
															"nodeType": "RevertStatement",
															"src": "3277:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4171,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4150,
															"src": "3361:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 4169,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 4154,
												"id": 4173,
												"nodeType": "Return",
												"src": "3346:21:17"
											}
										]
									},
									"documentation": {
										"id": 4148,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:17",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 4175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4175,
												"src": "3175:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:17"
									},
									"returnParameters": {
										"id": 4154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4175,
												"src": "3213:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 4152,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:17"
									},
									"scope": 5801,
									"src": "3156:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4202,
										"nodeType": "Block",
										"src": "3731:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4183,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4178,
														"src": "3745:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 4185,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 4184,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 4188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4196,
												"nodeType": "IfStatement",
												"src": "3741:105:17",
												"trueBody": {
													"id": 4195,
													"nodeType": "Block",
													"src": "3772:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 4191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 4192,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4178,
																		"src": "3829:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4190,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "3793:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4194,
															"nodeType": "RevertStatement",
															"src": "3786:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4199,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4178,
															"src": "3870:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 4197,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 4182,
												"id": 4201,
												"nodeType": "Return",
												"src": "3855:21:17"
											}
										]
									},
									"documentation": {
										"id": 4176,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:17",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 4203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4178,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4203,
												"src": "3684:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:17"
									},
									"returnParameters": {
										"id": 4182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4203,
												"src": "3722:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 4180,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:17"
									},
									"scope": 5801,
									"src": "3665:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4230,
										"nodeType": "Block",
										"src": "4240:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4211,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4206,
														"src": "4254:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 4213,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 4212,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 4216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4224,
												"nodeType": "IfStatement",
												"src": "4250:105:17",
												"trueBody": {
													"id": 4223,
													"nodeType": "Block",
													"src": "4281:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 4219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 4220,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4206,
																		"src": "4338:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4218,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "4302:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4222,
															"nodeType": "RevertStatement",
															"src": "4295:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4227,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4206,
															"src": "4379:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 4225,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 4210,
												"id": 4229,
												"nodeType": "Return",
												"src": "4364:21:17"
											}
										]
									},
									"documentation": {
										"id": 4204,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:17",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 4231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4231,
												"src": "4193:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:17"
									},
									"returnParameters": {
										"id": 4210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4231,
												"src": "4231:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 4208,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:17"
									},
									"scope": 5801,
									"src": "4174:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4258,
										"nodeType": "Block",
										"src": "4749:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4239,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4234,
														"src": "4763:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 4241,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 4240,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 4244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4252,
												"nodeType": "IfStatement",
												"src": "4759:105:17",
												"trueBody": {
													"id": 4251,
													"nodeType": "Block",
													"src": "4790:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 4247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 4248,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4234,
																		"src": "4847:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4246,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "4811:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4250,
															"nodeType": "RevertStatement",
															"src": "4804:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4234,
															"src": "4888:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 4253,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 4238,
												"id": 4257,
												"nodeType": "Return",
												"src": "4873:21:17"
											}
										]
									},
									"documentation": {
										"id": 4232,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:17",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 4259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4259,
												"src": "4702:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:17"
									},
									"returnParameters": {
										"id": 4238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4259,
												"src": "4740:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 4236,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:17"
									},
									"scope": 5801,
									"src": "4683:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4286,
										"nodeType": "Block",
										"src": "5258:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4267,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4262,
														"src": "5272:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 4269,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 4268,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 4272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4280,
												"nodeType": "IfStatement",
												"src": "5268:105:17",
												"trueBody": {
													"id": 4279,
													"nodeType": "Block",
													"src": "5299:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 4275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 4276,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4262,
																		"src": "5356:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4274,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "5320:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4278,
															"nodeType": "RevertStatement",
															"src": "5313:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4283,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4262,
															"src": "5397:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 4281,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 4266,
												"id": 4285,
												"nodeType": "Return",
												"src": "5382:21:17"
											}
										]
									},
									"documentation": {
										"id": 4260,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:17",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 4287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "5211:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:17"
									},
									"returnParameters": {
										"id": 4266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "5249:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 4264,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:17"
									},
									"scope": 5801,
									"src": "5192:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4314,
										"nodeType": "Block",
										"src": "5767:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4295,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4290,
														"src": "5781:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 4297,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 4296,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 4300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4308,
												"nodeType": "IfStatement",
												"src": "5777:105:17",
												"trueBody": {
													"id": 4307,
													"nodeType": "Block",
													"src": "5808:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4304,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4290,
																		"src": "5865:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4302,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "5829:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4306,
															"nodeType": "RevertStatement",
															"src": "5822:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4311,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4290,
															"src": "5906:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 4309,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 4294,
												"id": 4313,
												"nodeType": "Return",
												"src": "5891:21:17"
											}
										]
									},
									"documentation": {
										"id": 4288,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:17",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "5720:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:17"
									},
									"returnParameters": {
										"id": 4294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "5758:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 4292,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:17"
									},
									"scope": 5801,
									"src": "5701:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4342,
										"nodeType": "Block",
										"src": "6276:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4323,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4318,
														"src": "6290:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 4325,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 4324,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 4328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4336,
												"nodeType": "IfStatement",
												"src": "6286:105:17",
												"trueBody": {
													"id": 4335,
													"nodeType": "Block",
													"src": "6317:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4332,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4318,
																		"src": "6374:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4330,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "6338:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4334,
															"nodeType": "RevertStatement",
															"src": "6331:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4339,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4318,
															"src": "6415:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 4337,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 4322,
												"id": 4341,
												"nodeType": "Return",
												"src": "6400:21:17"
											}
										]
									},
									"documentation": {
										"id": 4316,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:17",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4343,
												"src": "6229:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:17"
									},
									"returnParameters": {
										"id": 4322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4343,
												"src": "6267:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 4320,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:17"
									},
									"scope": 5801,
									"src": "6210:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4370,
										"nodeType": "Block",
										"src": "6785:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4351,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4346,
														"src": "6799:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 4353,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 4352,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 4356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4364,
												"nodeType": "IfStatement",
												"src": "6795:105:17",
												"trueBody": {
													"id": 4363,
													"nodeType": "Block",
													"src": "6826:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4360,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4346,
																		"src": "6883:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4358,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "6847:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4362,
															"nodeType": "RevertStatement",
															"src": "6840:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4367,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4346,
															"src": "6924:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 4365,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 4350,
												"id": 4369,
												"nodeType": "Return",
												"src": "6909:21:17"
											}
										]
									},
									"documentation": {
										"id": 4344,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:17",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4371,
												"src": "6738:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:17"
									},
									"returnParameters": {
										"id": 4350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4371,
												"src": "6776:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 4348,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:17"
									},
									"scope": 5801,
									"src": "6719:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4398,
										"nodeType": "Block",
										"src": "7294:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4379,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4374,
														"src": "7308:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 4381,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 4380,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 4384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4392,
												"nodeType": "IfStatement",
												"src": "7304:105:17",
												"trueBody": {
													"id": 4391,
													"nodeType": "Block",
													"src": "7335:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4388,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4374,
																		"src": "7392:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4386,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "7356:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4390,
															"nodeType": "RevertStatement",
															"src": "7349:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4395,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4374,
															"src": "7433:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 4393,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 4378,
												"id": 4397,
												"nodeType": "Return",
												"src": "7418:21:17"
											}
										]
									},
									"documentation": {
										"id": 4372,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:17",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4399,
												"src": "7247:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:17"
									},
									"returnParameters": {
										"id": 4378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4399,
												"src": "7285:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4376,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:17"
									},
									"scope": 5801,
									"src": "7228:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4426,
										"nodeType": "Block",
										"src": "7803:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4407,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4402,
														"src": "7817:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 4409,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 4408,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 4412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4420,
												"nodeType": "IfStatement",
												"src": "7813:105:17",
												"trueBody": {
													"id": 4419,
													"nodeType": "Block",
													"src": "7844:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 4415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 4416,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4402,
																		"src": "7901:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4414,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "7865:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4418,
															"nodeType": "RevertStatement",
															"src": "7858:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4423,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4402,
															"src": "7942:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 4421,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 4406,
												"id": 4425,
												"nodeType": "Return",
												"src": "7927:21:17"
											}
										]
									},
									"documentation": {
										"id": 4400,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:17",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4427,
												"src": "7756:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:17"
									},
									"returnParameters": {
										"id": 4406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4427,
												"src": "7794:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 4404,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:17"
									},
									"scope": 5801,
									"src": "7737:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4454,
										"nodeType": "Block",
										"src": "8312:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4435,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4430,
														"src": "8326:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 4437,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 4436,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 4440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4448,
												"nodeType": "IfStatement",
												"src": "8322:105:17",
												"trueBody": {
													"id": 4447,
													"nodeType": "Block",
													"src": "8353:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4444,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4430,
																		"src": "8410:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4442,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "8374:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4446,
															"nodeType": "RevertStatement",
															"src": "8367:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4451,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4430,
															"src": "8451:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 4449,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 4434,
												"id": 4453,
												"nodeType": "Return",
												"src": "8436:21:17"
											}
										]
									},
									"documentation": {
										"id": 4428,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:17",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4455,
												"src": "8265:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:17"
									},
									"returnParameters": {
										"id": 4434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4455,
												"src": "8303:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 4432,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:17"
									},
									"scope": 5801,
									"src": "8246:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4482,
										"nodeType": "Block",
										"src": "8821:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4463,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4458,
														"src": "8835:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 4465,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 4464,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 4468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4476,
												"nodeType": "IfStatement",
												"src": "8831:105:17",
												"trueBody": {
													"id": 4475,
													"nodeType": "Block",
													"src": "8862:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4472,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4458,
																		"src": "8919:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4470,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "8883:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4474,
															"nodeType": "RevertStatement",
															"src": "8876:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4458,
															"src": "8960:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 4477,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 4462,
												"id": 4481,
												"nodeType": "Return",
												"src": "8945:21:17"
											}
										]
									},
									"documentation": {
										"id": 4456,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:17",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4483,
												"src": "8774:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:17"
									},
									"returnParameters": {
										"id": 4462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4483,
												"src": "8812:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 4460,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:17"
									},
									"scope": 5801,
									"src": "8755:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4510,
										"nodeType": "Block",
										"src": "9330:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4491,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4486,
														"src": "9344:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 4493,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 4492,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 4496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4504,
												"nodeType": "IfStatement",
												"src": "9340:105:17",
												"trueBody": {
													"id": 4503,
													"nodeType": "Block",
													"src": "9371:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4500,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4486,
																		"src": "9428:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4498,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "9392:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4502,
															"nodeType": "RevertStatement",
															"src": "9385:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4507,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4486,
															"src": "9469:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 4505,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 4490,
												"id": 4509,
												"nodeType": "Return",
												"src": "9454:21:17"
											}
										]
									},
									"documentation": {
										"id": 4484,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:17",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4511,
												"src": "9283:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:17"
									},
									"returnParameters": {
										"id": 4490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4511,
												"src": "9321:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4488,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:17"
									},
									"scope": 5801,
									"src": "9264:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4538,
										"nodeType": "Block",
										"src": "9839:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4519,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4514,
														"src": "9853:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 4521,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 4520,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 4524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4532,
												"nodeType": "IfStatement",
												"src": "9849:105:17",
												"trueBody": {
													"id": 4531,
													"nodeType": "Block",
													"src": "9880:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4528,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4514,
																		"src": "9937:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4526,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "9901:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4530,
															"nodeType": "RevertStatement",
															"src": "9894:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4514,
															"src": "9978:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 4533,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 4518,
												"id": 4537,
												"nodeType": "Return",
												"src": "9963:21:17"
											}
										]
									},
									"documentation": {
										"id": 4512,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:17",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4539,
												"src": "9792:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:17"
									},
									"returnParameters": {
										"id": 4518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4539,
												"src": "9830:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 4516,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:17"
									},
									"scope": 5801,
									"src": "9773:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4566,
										"nodeType": "Block",
										"src": "10348:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4547,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4542,
														"src": "10362:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 4549,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 4548,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 4552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4560,
												"nodeType": "IfStatement",
												"src": "10358:105:17",
												"trueBody": {
													"id": 4559,
													"nodeType": "Block",
													"src": "10389:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4556,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4542,
																		"src": "10446:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4554,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "10410:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4558,
															"nodeType": "RevertStatement",
															"src": "10403:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4563,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4542,
															"src": "10487:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 4561,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 4546,
												"id": 4565,
												"nodeType": "Return",
												"src": "10472:21:17"
											}
										]
									},
									"documentation": {
										"id": 4540,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:17",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4567,
												"src": "10301:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:17"
									},
									"returnParameters": {
										"id": 4546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4567,
												"src": "10339:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 4544,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:17"
									},
									"scope": 5801,
									"src": "10282:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4594,
										"nodeType": "Block",
										"src": "10857:152:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4575,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4570,
														"src": "10871:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 4577,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 4576,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 4580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4588,
												"nodeType": "IfStatement",
												"src": "10867:105:17",
												"trueBody": {
													"id": 4587,
													"nodeType": "Block",
													"src": "10898:74:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4570,
																		"src": "10955:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4582,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "10919:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4586,
															"nodeType": "RevertStatement",
															"src": "10912:49:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4591,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4570,
															"src": "10996:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 4589,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 4574,
												"id": 4593,
												"nodeType": "Return",
												"src": "10981:21:17"
											}
										]
									},
									"documentation": {
										"id": 4568,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:17",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4595,
												"src": "10810:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:17"
									},
									"returnParameters": {
										"id": 4574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4595,
												"src": "10848:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 4572,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:17"
									},
									"scope": 5801,
									"src": "10791:218:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4622,
										"nodeType": "Block",
										"src": "11360:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4603,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4598,
														"src": "11374:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 4605,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 4604,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 4608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4616,
												"nodeType": "IfStatement",
												"src": "11370:103:17",
												"trueBody": {
													"id": 4615,
													"nodeType": "Block",
													"src": "11400:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4612,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4598,
																		"src": "11456:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4610,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "11421:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4614,
															"nodeType": "RevertStatement",
															"src": "11414:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4619,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4598,
															"src": "11496:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 4617,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 4602,
												"id": 4621,
												"nodeType": "Return",
												"src": "11482:20:17"
											}
										]
									},
									"documentation": {
										"id": 4596,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:17",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4623,
												"src": "11314:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:17"
									},
									"returnParameters": {
										"id": 4602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4623,
												"src": "11352:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4600,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:17"
									},
									"scope": 5801,
									"src": "11296:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4650,
										"nodeType": "Block",
										"src": "11860:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4631,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4626,
														"src": "11874:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 4633,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 4632,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 4636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4644,
												"nodeType": "IfStatement",
												"src": "11870:103:17",
												"trueBody": {
													"id": 4643,
													"nodeType": "Block",
													"src": "11900:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4626,
																		"src": "11956:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4638,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "11921:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4642,
															"nodeType": "RevertStatement",
															"src": "11914:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4647,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4626,
															"src": "11996:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 4645,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 4630,
												"id": 4649,
												"nodeType": "Return",
												"src": "11982:20:17"
											}
										]
									},
									"documentation": {
										"id": 4624,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:17",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4651,
												"src": "11814:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:17"
									},
									"returnParameters": {
										"id": 4630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4651,
												"src": "11852:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 4628,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:17"
									},
									"scope": 5801,
									"src": "11796:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4678,
										"nodeType": "Block",
										"src": "12360:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4659,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4654,
														"src": "12374:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 4661,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 4660,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 4664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4672,
												"nodeType": "IfStatement",
												"src": "12370:103:17",
												"trueBody": {
													"id": 4671,
													"nodeType": "Block",
													"src": "12400:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4668,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4654,
																		"src": "12456:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4666,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "12421:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4670,
															"nodeType": "RevertStatement",
															"src": "12414:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4654,
															"src": "12496:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 4673,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 4658,
												"id": 4677,
												"nodeType": "Return",
												"src": "12482:20:17"
											}
										]
									},
									"documentation": {
										"id": 4652,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:17",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4679,
												"src": "12314:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:17"
									},
									"returnParameters": {
										"id": 4658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4679,
												"src": "12352:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 4656,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:17"
									},
									"scope": 5801,
									"src": "12296:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4706,
										"nodeType": "Block",
										"src": "12860:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4687,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4682,
														"src": "12874:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 4689,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 4688,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 4692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4700,
												"nodeType": "IfStatement",
												"src": "12870:103:17",
												"trueBody": {
													"id": 4699,
													"nodeType": "Block",
													"src": "12900:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4696,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4682,
																		"src": "12956:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4694,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "12921:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4698,
															"nodeType": "RevertStatement",
															"src": "12914:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4703,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4682,
															"src": "12996:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 4701,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 4686,
												"id": 4705,
												"nodeType": "Return",
												"src": "12982:20:17"
											}
										]
									},
									"documentation": {
										"id": 4680,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:17",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4707,
												"src": "12814:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:17"
									},
									"returnParameters": {
										"id": 4686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4707,
												"src": "12852:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 4684,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:17"
									},
									"scope": 5801,
									"src": "12796:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4734,
										"nodeType": "Block",
										"src": "13360:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4715,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4710,
														"src": "13374:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 4717,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 4716,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 4720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4728,
												"nodeType": "IfStatement",
												"src": "13370:103:17",
												"trueBody": {
													"id": 4727,
													"nodeType": "Block",
													"src": "13400:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4724,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4710,
																		"src": "13456:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4722,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "13421:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4726,
															"nodeType": "RevertStatement",
															"src": "13414:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4731,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4710,
															"src": "13496:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 4729,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 4714,
												"id": 4733,
												"nodeType": "Return",
												"src": "13482:20:17"
											}
										]
									},
									"documentation": {
										"id": 4708,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:17",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4710,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4735,
												"src": "13314:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:17"
									},
									"returnParameters": {
										"id": 4714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4735,
												"src": "13352:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4712,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:17"
									},
									"scope": 5801,
									"src": "13296:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4762,
										"nodeType": "Block",
										"src": "13860:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4743,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4738,
														"src": "13874:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 4745,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 4744,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 4748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4756,
												"nodeType": "IfStatement",
												"src": "13870:103:17",
												"trueBody": {
													"id": 4755,
													"nodeType": "Block",
													"src": "13900:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4752,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4738,
																		"src": "13956:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4750,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "13921:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4754,
															"nodeType": "RevertStatement",
															"src": "13914:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4759,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4738,
															"src": "13996:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 4757,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 4742,
												"id": 4761,
												"nodeType": "Return",
												"src": "13982:20:17"
											}
										]
									},
									"documentation": {
										"id": 4736,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:17",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4763,
												"src": "13814:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:17"
									},
									"returnParameters": {
										"id": 4742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4763,
												"src": "13852:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 4740,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:17"
									},
									"scope": 5801,
									"src": "13796:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4790,
										"nodeType": "Block",
										"src": "14360:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4771,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4766,
														"src": "14374:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 4773,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 4772,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 4776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4784,
												"nodeType": "IfStatement",
												"src": "14370:103:17",
												"trueBody": {
													"id": 4783,
													"nodeType": "Block",
													"src": "14400:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4780,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4766,
																		"src": "14456:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4778,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "14421:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4782,
															"nodeType": "RevertStatement",
															"src": "14414:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4787,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4766,
															"src": "14496:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 4785,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 4770,
												"id": 4789,
												"nodeType": "Return",
												"src": "14482:20:17"
											}
										]
									},
									"documentation": {
										"id": 4764,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:17",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4791,
												"src": "14314:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:17"
									},
									"returnParameters": {
										"id": 4770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4791,
												"src": "14352:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 4768,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:17"
									},
									"scope": 5801,
									"src": "14296:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4818,
										"nodeType": "Block",
										"src": "14860:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4799,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4794,
														"src": "14874:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 4801,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 4800,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 4804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4812,
												"nodeType": "IfStatement",
												"src": "14870:103:17",
												"trueBody": {
													"id": 4811,
													"nodeType": "Block",
													"src": "14900:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4808,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4794,
																		"src": "14956:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4806,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "14921:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4810,
															"nodeType": "RevertStatement",
															"src": "14914:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4794,
															"src": "14996:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 4813,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 4798,
												"id": 4817,
												"nodeType": "Return",
												"src": "14982:20:17"
											}
										]
									},
									"documentation": {
										"id": 4792,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:17",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4819,
												"src": "14814:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:17"
									},
									"returnParameters": {
										"id": 4798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4819,
												"src": "14852:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 4796,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:17"
									},
									"scope": 5801,
									"src": "14796:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4846,
										"nodeType": "Block",
										"src": "15360:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4827,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4822,
														"src": "15374:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 4829,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 4828,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 4832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4840,
												"nodeType": "IfStatement",
												"src": "15370:103:17",
												"trueBody": {
													"id": 4839,
													"nodeType": "Block",
													"src": "15400:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4836,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4822,
																		"src": "15456:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4834,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "15421:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4838,
															"nodeType": "RevertStatement",
															"src": "15414:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4843,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4822,
															"src": "15496:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 4841,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 4826,
												"id": 4845,
												"nodeType": "Return",
												"src": "15482:20:17"
											}
										]
									},
									"documentation": {
										"id": 4820,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:17",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4847,
												"src": "15314:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:17"
									},
									"returnParameters": {
										"id": 4826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4847,
												"src": "15352:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4824,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:17"
									},
									"scope": 5801,
									"src": "15296:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4874,
										"nodeType": "Block",
										"src": "15860:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4855,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4850,
														"src": "15874:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 4857,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 4856,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 4860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4868,
												"nodeType": "IfStatement",
												"src": "15870:103:17",
												"trueBody": {
													"id": 4867,
													"nodeType": "Block",
													"src": "15900:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4864,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4850,
																		"src": "15956:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4862,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "15921:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4866,
															"nodeType": "RevertStatement",
															"src": "15914:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4871,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4850,
															"src": "15996:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 4869,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 4854,
												"id": 4873,
												"nodeType": "Return",
												"src": "15982:20:17"
											}
										]
									},
									"documentation": {
										"id": 4848,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:17",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4875,
												"src": "15814:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:17"
									},
									"returnParameters": {
										"id": 4854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4875,
												"src": "15852:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 4852,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:17"
									},
									"scope": 5801,
									"src": "15796:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4902,
										"nodeType": "Block",
										"src": "16360:149:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4883,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4878,
														"src": "16374:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 4885,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 4884,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 4888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4896,
												"nodeType": "IfStatement",
												"src": "16370:103:17",
												"trueBody": {
													"id": 4895,
													"nodeType": "Block",
													"src": "16400:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4892,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4878,
																		"src": "16456:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4890,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "16421:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4894,
															"nodeType": "RevertStatement",
															"src": "16414:48:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4878,
															"src": "16496:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 4897,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 4900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 4882,
												"id": 4901,
												"nodeType": "Return",
												"src": "16482:20:17"
											}
										]
									},
									"documentation": {
										"id": 4876,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:17",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4878,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4903,
												"src": "16314:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:17"
									},
									"returnParameters": {
										"id": 4882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4903,
												"src": "16352:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4880,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:17"
									},
									"scope": 5801,
									"src": "16296:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4930,
										"nodeType": "Block",
										"src": "16854:146:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4911,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4906,
														"src": "16868:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 4913,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:17",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 4912,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 4916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:17",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4924,
												"nodeType": "IfStatement",
												"src": "16864:101:17",
												"trueBody": {
													"id": 4923,
													"nodeType": "Block",
													"src": "16893:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4920,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4906,
																		"src": "16948:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4918,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4046,
																	"src": "16914:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4922,
															"nodeType": "RevertStatement",
															"src": "16907:47:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4927,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4906,
															"src": "16987:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 4925,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:17",
															"typeDescriptions": {}
														}
													},
													"id": 4928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 4910,
												"id": 4929,
												"nodeType": "Return",
												"src": "16974:19:17"
											}
										]
									},
									"documentation": {
										"id": 4904,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:17",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4931,
												"src": "16809:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:17"
									},
									"returnParameters": {
										"id": 4910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4931,
												"src": "16847:5:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4908,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:17"
									},
									"scope": 5801,
									"src": "16792:208:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4953,
										"nodeType": "Block",
										"src": "17236:128:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4939,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4934,
														"src": "17250:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 4940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4947,
												"nodeType": "IfStatement",
												"src": "17246:81:17",
												"trueBody": {
													"id": 4946,
													"nodeType": "Block",
													"src": "17261:66:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4943,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4934,
																		"src": "17310:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4942,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4051,
																	"src": "17282:27:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 4944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4945,
															"nodeType": "RevertStatement",
															"src": "17275:41:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4934,
															"src": "17351:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 4949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 4948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 4951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4938,
												"id": 4952,
												"nodeType": "Return",
												"src": "17336:21:17"
											}
										]
									},
									"documentation": {
										"id": 4932,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:17",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 4954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4954,
												"src": "17190:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4933,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:17"
									},
									"returnParameters": {
										"id": 4938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4954,
												"src": "17227:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:17"
									},
									"scope": 5801,
									"src": "17171:193:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4979,
										"nodeType": "Block",
										"src": "17761:150:17",
										"statements": [
											{
												"expression": {
													"id": 4967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4962,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4960,
														"src": "17771:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4965,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4957,
																"src": "17791:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 4963,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 4966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 4968,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4969,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4960,
														"src": "17811:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4970,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4957,
														"src": "17825:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4978,
												"nodeType": "IfStatement",
												"src": "17807:98:17",
												"trueBody": {
													"id": 4977,
													"nodeType": "Block",
													"src": "17832:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 4973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 4974,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4957,
																		"src": "17888:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4972,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "17853:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4976,
															"nodeType": "RevertStatement",
															"src": "17846:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4955,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:17",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 4980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4980,
												"src": "17705:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4956,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:17"
									},
									"returnParameters": {
										"id": 4961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4960,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 4980,
												"src": "17742:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 4959,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:17"
									},
									"scope": 5801,
									"src": "17687:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5005,
										"nodeType": "Block",
										"src": "18308:150:17",
										"statements": [
											{
												"expression": {
													"id": 4993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4988,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4986,
														"src": "18318:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4991,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4983,
																"src": "18338:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 4989,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 4992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 4994,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4995,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4986,
														"src": "18358:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4996,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4983,
														"src": "18372:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5004,
												"nodeType": "IfStatement",
												"src": "18354:98:17",
												"trueBody": {
													"id": 5003,
													"nodeType": "Block",
													"src": "18379:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 4999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 5000,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4983,
																		"src": "18435:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4998,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "18400:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5002,
															"nodeType": "RevertStatement",
															"src": "18393:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4981,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:17",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 5006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5006,
												"src": "18252:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4982,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:17"
									},
									"returnParameters": {
										"id": 4987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4986,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5006,
												"src": "18289:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 4985,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:17"
									},
									"scope": 5801,
									"src": "18234:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5031,
										"nodeType": "Block",
										"src": "18855:150:17",
										"statements": [
											{
												"expression": {
													"id": 5019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5014,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5012,
														"src": "18865:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5017,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5009,
																"src": "18885:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 5015,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 5020,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5021,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5012,
														"src": "18905:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5022,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5009,
														"src": "18919:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5030,
												"nodeType": "IfStatement",
												"src": "18901:98:17",
												"trueBody": {
													"id": 5029,
													"nodeType": "Block",
													"src": "18926:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 5025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 5026,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5009,
																		"src": "18982:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5024,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "18947:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5028,
															"nodeType": "RevertStatement",
															"src": "18940:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5007,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:17",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 5032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5009,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5032,
												"src": "18799:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5008,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:17"
									},
									"returnParameters": {
										"id": 5013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5012,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5032,
												"src": "18836:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 5011,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:17"
									},
									"scope": 5801,
									"src": "18781:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5057,
										"nodeType": "Block",
										"src": "19402:150:17",
										"statements": [
											{
												"expression": {
													"id": 5045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5040,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5038,
														"src": "19412:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5035,
																"src": "19432:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 5041,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 5046,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5047,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5038,
														"src": "19452:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5048,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5035,
														"src": "19466:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5056,
												"nodeType": "IfStatement",
												"src": "19448:98:17",
												"trueBody": {
													"id": 5055,
													"nodeType": "Block",
													"src": "19473:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 5051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 5052,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5035,
																		"src": "19529:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5050,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "19494:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5054,
															"nodeType": "RevertStatement",
															"src": "19487:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5033,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:17",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 5058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5035,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5058,
												"src": "19346:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5034,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:17"
									},
									"returnParameters": {
										"id": 5039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5038,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5058,
												"src": "19383:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 5037,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:17"
									},
									"scope": 5801,
									"src": "19328:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5083,
										"nodeType": "Block",
										"src": "19949:150:17",
										"statements": [
											{
												"expression": {
													"id": 5071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5066,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5064,
														"src": "19959:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5069,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5061,
																"src": "19979:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 5067,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 5072,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5073,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5064,
														"src": "19999:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5074,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5061,
														"src": "20013:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5082,
												"nodeType": "IfStatement",
												"src": "19995:98:17",
												"trueBody": {
													"id": 5081,
													"nodeType": "Block",
													"src": "20020:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 5077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 5078,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5061,
																		"src": "20076:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5076,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "20041:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5080,
															"nodeType": "RevertStatement",
															"src": "20034:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5059,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:17",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 5084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5061,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5084,
												"src": "19893:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5060,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:17"
									},
									"returnParameters": {
										"id": 5065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5064,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5084,
												"src": "19930:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 5063,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:17"
									},
									"scope": 5801,
									"src": "19875:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5109,
										"nodeType": "Block",
										"src": "20496:150:17",
										"statements": [
											{
												"expression": {
													"id": 5097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5092,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5090,
														"src": "20506:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5095,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5087,
																"src": "20526:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 5093,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 5098,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5099,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5090,
														"src": "20546:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5100,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5087,
														"src": "20560:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5108,
												"nodeType": "IfStatement",
												"src": "20542:98:17",
												"trueBody": {
													"id": 5107,
													"nodeType": "Block",
													"src": "20567:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 5103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 5104,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5087,
																		"src": "20623:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5102,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "20588:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5106,
															"nodeType": "RevertStatement",
															"src": "20581:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5085,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:17",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 5110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5087,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5110,
												"src": "20440:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5086,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:17"
									},
									"returnParameters": {
										"id": 5091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5090,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5110,
												"src": "20477:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 5089,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:17"
									},
									"scope": 5801,
									"src": "20422:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5135,
										"nodeType": "Block",
										"src": "21043:150:17",
										"statements": [
											{
												"expression": {
													"id": 5123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5118,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5116,
														"src": "21053:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5121,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5113,
																"src": "21073:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 5119,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 5124,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5125,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5116,
														"src": "21093:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5126,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5113,
														"src": "21107:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5134,
												"nodeType": "IfStatement",
												"src": "21089:98:17",
												"trueBody": {
													"id": 5133,
													"nodeType": "Block",
													"src": "21114:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 5129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 5130,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5113,
																		"src": "21170:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5128,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "21135:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5132,
															"nodeType": "RevertStatement",
															"src": "21128:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5111,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:17",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 5136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5113,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5136,
												"src": "20987:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5112,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:17"
									},
									"returnParameters": {
										"id": 5117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5116,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5136,
												"src": "21024:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 5115,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:17"
									},
									"scope": 5801,
									"src": "20969:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5161,
										"nodeType": "Block",
										"src": "21590:150:17",
										"statements": [
											{
												"expression": {
													"id": 5149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5144,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5142,
														"src": "21600:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5139,
																"src": "21620:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 5145,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 5150,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5151,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5142,
														"src": "21640:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5152,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5139,
														"src": "21654:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5160,
												"nodeType": "IfStatement",
												"src": "21636:98:17",
												"trueBody": {
													"id": 5159,
													"nodeType": "Block",
													"src": "21661:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 5155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 5156,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5139,
																		"src": "21717:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5154,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "21682:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5158,
															"nodeType": "RevertStatement",
															"src": "21675:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5137,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:17",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 5162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5162,
												"src": "21534:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5138,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:17"
									},
									"returnParameters": {
										"id": 5143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5142,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5162,
												"src": "21571:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 5141,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:17"
									},
									"scope": 5801,
									"src": "21516:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5187,
										"nodeType": "Block",
										"src": "22137:150:17",
										"statements": [
											{
												"expression": {
													"id": 5175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5170,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5168,
														"src": "22147:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5173,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5165,
																"src": "22167:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 5171,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 5176,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5177,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5168,
														"src": "22187:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5178,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5165,
														"src": "22201:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5186,
												"nodeType": "IfStatement",
												"src": "22183:98:17",
												"trueBody": {
													"id": 5185,
													"nodeType": "Block",
													"src": "22208:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 5181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 5182,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5165,
																		"src": "22264:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5180,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "22229:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5184,
															"nodeType": "RevertStatement",
															"src": "22222:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5163,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:17",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 5188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5165,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5188,
												"src": "22081:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5164,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:17"
									},
									"returnParameters": {
										"id": 5169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5168,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5188,
												"src": "22118:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 5167,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:17"
									},
									"scope": 5801,
									"src": "22063:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5213,
										"nodeType": "Block",
										"src": "22684:150:17",
										"statements": [
											{
												"expression": {
													"id": 5201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5196,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5194,
														"src": "22694:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5199,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5191,
																"src": "22714:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 5197,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 5202,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5203,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5194,
														"src": "22734:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5204,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5191,
														"src": "22748:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5212,
												"nodeType": "IfStatement",
												"src": "22730:98:17",
												"trueBody": {
													"id": 5211,
													"nodeType": "Block",
													"src": "22755:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 5207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 5208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5191,
																		"src": "22811:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5206,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "22776:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5210,
															"nodeType": "RevertStatement",
															"src": "22769:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5189,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:17",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 5214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5214,
												"src": "22628:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5190,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:17"
									},
									"returnParameters": {
										"id": 5195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5194,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5214,
												"src": "22665:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 5193,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:17"
									},
									"scope": 5801,
									"src": "22610:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5239,
										"nodeType": "Block",
										"src": "23231:150:17",
										"statements": [
											{
												"expression": {
													"id": 5227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5222,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5220,
														"src": "23241:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5225,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5217,
																"src": "23261:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 5223,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 5228,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5229,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5220,
														"src": "23281:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5230,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5217,
														"src": "23295:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5238,
												"nodeType": "IfStatement",
												"src": "23277:98:17",
												"trueBody": {
													"id": 5237,
													"nodeType": "Block",
													"src": "23302:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 5233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 5234,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5217,
																		"src": "23358:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5232,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "23323:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5236,
															"nodeType": "RevertStatement",
															"src": "23316:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5215,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:17",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 5240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5240,
												"src": "23175:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5216,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:17"
									},
									"returnParameters": {
										"id": 5221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5220,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5240,
												"src": "23212:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 5219,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:17"
									},
									"scope": 5801,
									"src": "23157:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5265,
										"nodeType": "Block",
										"src": "23778:150:17",
										"statements": [
											{
												"expression": {
													"id": 5253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5248,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5246,
														"src": "23788:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5251,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5243,
																"src": "23808:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 5249,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 5254,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5255,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5246,
														"src": "23828:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5256,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5243,
														"src": "23842:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5264,
												"nodeType": "IfStatement",
												"src": "23824:98:17",
												"trueBody": {
													"id": 5263,
													"nodeType": "Block",
													"src": "23849:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 5259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 5260,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5243,
																		"src": "23905:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5258,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "23870:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5262,
															"nodeType": "RevertStatement",
															"src": "23863:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5241,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:17",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 5266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5243,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5266,
												"src": "23722:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5242,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:17"
									},
									"returnParameters": {
										"id": 5247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5246,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5266,
												"src": "23759:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 5245,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:17"
									},
									"scope": 5801,
									"src": "23704:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5291,
										"nodeType": "Block",
										"src": "24325:150:17",
										"statements": [
											{
												"expression": {
													"id": 5279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5274,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5272,
														"src": "24335:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5277,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5269,
																"src": "24355:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 5275,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 5280,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5281,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5272,
														"src": "24375:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5282,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5269,
														"src": "24389:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5290,
												"nodeType": "IfStatement",
												"src": "24371:98:17",
												"trueBody": {
													"id": 5289,
													"nodeType": "Block",
													"src": "24396:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 5285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 5286,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5269,
																		"src": "24452:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5284,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "24417:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5288,
															"nodeType": "RevertStatement",
															"src": "24410:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5267,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:17",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 5292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5292,
												"src": "24269:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5268,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:17"
									},
									"returnParameters": {
										"id": 5273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5272,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5292,
												"src": "24306:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 5271,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:17"
									},
									"scope": 5801,
									"src": "24251:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5317,
										"nodeType": "Block",
										"src": "24872:150:17",
										"statements": [
											{
												"expression": {
													"id": 5305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5300,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5298,
														"src": "24882:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5303,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5295,
																"src": "24902:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 5301,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 5306,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5307,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5298,
														"src": "24922:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5308,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5295,
														"src": "24936:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5316,
												"nodeType": "IfStatement",
												"src": "24918:98:17",
												"trueBody": {
													"id": 5315,
													"nodeType": "Block",
													"src": "24943:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 5311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 5312,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5295,
																		"src": "24999:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5310,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "24964:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5314,
															"nodeType": "RevertStatement",
															"src": "24957:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5293,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:17",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 5318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5318,
												"src": "24816:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5294,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:17"
									},
									"returnParameters": {
										"id": 5299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5298,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5318,
												"src": "24853:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 5297,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:17"
									},
									"scope": 5801,
									"src": "24798:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5343,
										"nodeType": "Block",
										"src": "25419:150:17",
										"statements": [
											{
												"expression": {
													"id": 5331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5326,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5324,
														"src": "25429:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5321,
																"src": "25449:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 5327,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 5332,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5333,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5324,
														"src": "25469:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5334,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5321,
														"src": "25483:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5342,
												"nodeType": "IfStatement",
												"src": "25465:98:17",
												"trueBody": {
													"id": 5341,
													"nodeType": "Block",
													"src": "25490:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 5337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 5338,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5321,
																		"src": "25546:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5336,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "25511:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5340,
															"nodeType": "RevertStatement",
															"src": "25504:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5319,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:17",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 5344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5344,
												"src": "25363:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5320,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:17"
									},
									"returnParameters": {
										"id": 5325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5324,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5344,
												"src": "25400:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 5323,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:17"
									},
									"scope": 5801,
									"src": "25345:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5369,
										"nodeType": "Block",
										"src": "25966:150:17",
										"statements": [
											{
												"expression": {
													"id": 5357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5352,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5350,
														"src": "25976:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5355,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5347,
																"src": "25996:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 5353,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 5358,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5359,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5350,
														"src": "26016:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5360,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5347,
														"src": "26030:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5368,
												"nodeType": "IfStatement",
												"src": "26012:98:17",
												"trueBody": {
													"id": 5367,
													"nodeType": "Block",
													"src": "26037:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 5363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 5364,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5347,
																		"src": "26093:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5362,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "26058:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5366,
															"nodeType": "RevertStatement",
															"src": "26051:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5345,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:17",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 5370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5347,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5370,
												"src": "25910:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5346,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:17"
									},
									"returnParameters": {
										"id": 5351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5350,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5370,
												"src": "25947:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 5349,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:17"
									},
									"scope": 5801,
									"src": "25892:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5395,
										"nodeType": "Block",
										"src": "26513:150:17",
										"statements": [
											{
												"expression": {
													"id": 5383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5378,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5376,
														"src": "26523:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5381,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5373,
																"src": "26543:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 5379,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 5384,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5385,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5376,
														"src": "26563:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5386,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5373,
														"src": "26577:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5394,
												"nodeType": "IfStatement",
												"src": "26559:98:17",
												"trueBody": {
													"id": 5393,
													"nodeType": "Block",
													"src": "26584:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 5389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 5390,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5373,
																		"src": "26640:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5388,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "26605:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5392,
															"nodeType": "RevertStatement",
															"src": "26598:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5371,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:17",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 5396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5373,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5396,
												"src": "26457:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5372,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:17"
									},
									"returnParameters": {
										"id": 5377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5376,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5396,
												"src": "26494:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 5375,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:17"
									},
									"scope": 5801,
									"src": "26439:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5421,
										"nodeType": "Block",
										"src": "27060:150:17",
										"statements": [
											{
												"expression": {
													"id": 5409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5404,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5402,
														"src": "27070:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5407,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5399,
																"src": "27090:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 5405,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 5410,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5411,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5402,
														"src": "27110:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5412,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5399,
														"src": "27124:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5420,
												"nodeType": "IfStatement",
												"src": "27106:98:17",
												"trueBody": {
													"id": 5419,
													"nodeType": "Block",
													"src": "27131:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 5415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 5416,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5399,
																		"src": "27187:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5414,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "27152:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5418,
															"nodeType": "RevertStatement",
															"src": "27145:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5397,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:17",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 5422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5422,
												"src": "27004:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5398,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:17"
									},
									"returnParameters": {
										"id": 5403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5402,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5422,
												"src": "27041:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 5401,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:17"
									},
									"scope": 5801,
									"src": "26986:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5447,
										"nodeType": "Block",
										"src": "27607:150:17",
										"statements": [
											{
												"expression": {
													"id": 5435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5430,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5428,
														"src": "27617:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5433,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5425,
																"src": "27637:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 5431,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:17",
																"typeDescriptions": {}
															}
														},
														"id": 5434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 5436,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5437,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5428,
														"src": "27657:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5438,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5425,
														"src": "27671:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5446,
												"nodeType": "IfStatement",
												"src": "27653:98:17",
												"trueBody": {
													"id": 5445,
													"nodeType": "Block",
													"src": "27678:73:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 5441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 5442,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5425,
																		"src": "27734:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5440,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "27699:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5444,
															"nodeType": "RevertStatement",
															"src": "27692:48:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5423,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:17",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 5448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5448,
												"src": "27551:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5424,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:17"
									},
									"returnParameters": {
										"id": 5429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5428,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5448,
												"src": "27588:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 5427,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:17"
									},
									"scope": 5801,
									"src": "27533:224:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5473,
										"nodeType": "Block",
										"src": "28147:148:17",
										"statements": [
											{
												"expression": {
													"id": 5461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5456,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5454,
														"src": "28157:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5459,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5451,
																"src": "28176:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 5457,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 5462,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5463,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5454,
														"src": "28196:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5464,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5451,
														"src": "28210:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5472,
												"nodeType": "IfStatement",
												"src": "28192:97:17",
												"trueBody": {
													"id": 5471,
													"nodeType": "Block",
													"src": "28217:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 5467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 5468,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5451,
																		"src": "28272:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5466,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "28238:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5470,
															"nodeType": "RevertStatement",
															"src": "28231:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5449,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:17",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 5474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5474,
												"src": "28092:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5450,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:17"
									},
									"returnParameters": {
										"id": 5455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5454,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5474,
												"src": "28129:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 5453,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:17"
									},
									"scope": 5801,
									"src": "28075:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5499,
										"nodeType": "Block",
										"src": "28685:148:17",
										"statements": [
											{
												"expression": {
													"id": 5487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5482,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5480,
														"src": "28695:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5485,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5477,
																"src": "28714:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 5483,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 5488,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5489,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5480,
														"src": "28734:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5490,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5477,
														"src": "28748:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5498,
												"nodeType": "IfStatement",
												"src": "28730:97:17",
												"trueBody": {
													"id": 5497,
													"nodeType": "Block",
													"src": "28755:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 5493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 5494,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5477,
																		"src": "28810:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5492,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "28776:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5496,
															"nodeType": "RevertStatement",
															"src": "28769:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5475,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:17",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 5500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5500,
												"src": "28630:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5476,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:17"
									},
									"returnParameters": {
										"id": 5481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5480,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5500,
												"src": "28667:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 5479,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:17"
									},
									"scope": 5801,
									"src": "28613:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5525,
										"nodeType": "Block",
										"src": "29223:148:17",
										"statements": [
											{
												"expression": {
													"id": 5513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5508,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5506,
														"src": "29233:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5503,
																"src": "29252:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 5509,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 5514,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5515,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5506,
														"src": "29272:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5516,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5503,
														"src": "29286:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5524,
												"nodeType": "IfStatement",
												"src": "29268:97:17",
												"trueBody": {
													"id": 5523,
													"nodeType": "Block",
													"src": "29293:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 5519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 5520,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5503,
																		"src": "29348:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5518,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "29314:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5522,
															"nodeType": "RevertStatement",
															"src": "29307:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5501,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:17",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 5526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5526,
												"src": "29168:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5502,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:17"
									},
									"returnParameters": {
										"id": 5507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5506,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5526,
												"src": "29205:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 5505,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:17"
									},
									"scope": 5801,
									"src": "29151:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5551,
										"nodeType": "Block",
										"src": "29761:148:17",
										"statements": [
											{
												"expression": {
													"id": 5539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5534,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5532,
														"src": "29771:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5537,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5529,
																"src": "29790:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 5535,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 5540,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5541,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5532,
														"src": "29810:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5542,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5529,
														"src": "29824:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5550,
												"nodeType": "IfStatement",
												"src": "29806:97:17",
												"trueBody": {
													"id": 5549,
													"nodeType": "Block",
													"src": "29831:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 5545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 5546,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5529,
																		"src": "29886:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5544,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "29852:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5548,
															"nodeType": "RevertStatement",
															"src": "29845:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5527,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:17",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 5552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5552,
												"src": "29706:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5528,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:17"
									},
									"returnParameters": {
										"id": 5533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5532,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5552,
												"src": "29743:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 5531,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:17"
									},
									"scope": 5801,
									"src": "29689:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5577,
										"nodeType": "Block",
										"src": "30299:148:17",
										"statements": [
											{
												"expression": {
													"id": 5565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5560,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5558,
														"src": "30309:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5563,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5555,
																"src": "30328:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 5561,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 5566,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5567,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5558,
														"src": "30348:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5568,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5555,
														"src": "30362:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5576,
												"nodeType": "IfStatement",
												"src": "30344:97:17",
												"trueBody": {
													"id": 5575,
													"nodeType": "Block",
													"src": "30369:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 5571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 5572,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5555,
																		"src": "30424:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5570,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "30390:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5574,
															"nodeType": "RevertStatement",
															"src": "30383:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5553,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:17",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 5578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5555,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5578,
												"src": "30244:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5554,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:17"
									},
									"returnParameters": {
										"id": 5559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5558,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5578,
												"src": "30281:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 5557,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:17"
									},
									"scope": 5801,
									"src": "30227:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5603,
										"nodeType": "Block",
										"src": "30837:148:17",
										"statements": [
											{
												"expression": {
													"id": 5591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5586,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5584,
														"src": "30847:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5589,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5581,
																"src": "30866:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 5587,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 5592,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5593,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5584,
														"src": "30886:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5594,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5581,
														"src": "30900:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5602,
												"nodeType": "IfStatement",
												"src": "30882:97:17",
												"trueBody": {
													"id": 5601,
													"nodeType": "Block",
													"src": "30907:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 5597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 5598,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5581,
																		"src": "30962:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5596,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "30928:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5600,
															"nodeType": "RevertStatement",
															"src": "30921:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5579,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:17",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 5604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5604,
												"src": "30782:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5580,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:17"
									},
									"returnParameters": {
										"id": 5585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5584,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5604,
												"src": "30819:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 5583,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:17"
									},
									"scope": 5801,
									"src": "30765:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5629,
										"nodeType": "Block",
										"src": "31375:148:17",
										"statements": [
											{
												"expression": {
													"id": 5617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5612,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5610,
														"src": "31385:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5615,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5607,
																"src": "31404:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 5613,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 5618,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5619,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5610,
														"src": "31424:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5620,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5607,
														"src": "31438:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5628,
												"nodeType": "IfStatement",
												"src": "31420:97:17",
												"trueBody": {
													"id": 5627,
													"nodeType": "Block",
													"src": "31445:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 5623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 5624,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5607,
																		"src": "31500:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5622,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "31466:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5626,
															"nodeType": "RevertStatement",
															"src": "31459:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5605,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:17",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 5630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5607,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5630,
												"src": "31320:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5606,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:17"
									},
									"returnParameters": {
										"id": 5611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5610,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5630,
												"src": "31357:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 5609,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:17"
									},
									"scope": 5801,
									"src": "31303:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5655,
										"nodeType": "Block",
										"src": "31913:148:17",
										"statements": [
											{
												"expression": {
													"id": 5643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5638,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5636,
														"src": "31923:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5641,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5633,
																"src": "31942:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 5639,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 5644,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5645,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5636,
														"src": "31962:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5646,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5633,
														"src": "31976:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5654,
												"nodeType": "IfStatement",
												"src": "31958:97:17",
												"trueBody": {
													"id": 5653,
													"nodeType": "Block",
													"src": "31983:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 5649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 5650,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5633,
																		"src": "32038:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5648,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "32004:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5652,
															"nodeType": "RevertStatement",
															"src": "31997:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5631,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:17",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 5656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5656,
												"src": "31858:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5632,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:17"
									},
									"returnParameters": {
										"id": 5637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5636,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5656,
												"src": "31895:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 5635,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:17"
									},
									"scope": 5801,
									"src": "31841:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5681,
										"nodeType": "Block",
										"src": "32451:148:17",
										"statements": [
											{
												"expression": {
													"id": 5669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5664,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5662,
														"src": "32461:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5667,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5659,
																"src": "32480:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 5665,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 5670,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5671,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5662,
														"src": "32500:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5672,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5659,
														"src": "32514:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5680,
												"nodeType": "IfStatement",
												"src": "32496:97:17",
												"trueBody": {
													"id": 5679,
													"nodeType": "Block",
													"src": "32521:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 5675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 5676,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5659,
																		"src": "32576:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5674,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "32542:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5678,
															"nodeType": "RevertStatement",
															"src": "32535:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5657,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:17",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 5682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5682,
												"src": "32396:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5658,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:17"
									},
									"returnParameters": {
										"id": 5663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5662,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5682,
												"src": "32433:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 5661,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:17"
									},
									"scope": 5801,
									"src": "32379:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5707,
										"nodeType": "Block",
										"src": "32989:148:17",
										"statements": [
											{
												"expression": {
													"id": 5695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5690,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5688,
														"src": "32999:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5693,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5685,
																"src": "33018:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 5691,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 5696,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5697,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5688,
														"src": "33038:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5698,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5685,
														"src": "33052:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5706,
												"nodeType": "IfStatement",
												"src": "33034:97:17",
												"trueBody": {
													"id": 5705,
													"nodeType": "Block",
													"src": "33059:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 5701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 5702,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5685,
																		"src": "33114:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5700,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "33080:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5704,
															"nodeType": "RevertStatement",
															"src": "33073:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5683,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:17",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 5708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5685,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5708,
												"src": "32934:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5684,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:17"
									},
									"returnParameters": {
										"id": 5689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5688,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5708,
												"src": "32971:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 5687,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:17"
									},
									"scope": 5801,
									"src": "32917:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5733,
										"nodeType": "Block",
										"src": "33527:148:17",
										"statements": [
											{
												"expression": {
													"id": 5721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5716,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5714,
														"src": "33537:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5719,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5711,
																"src": "33556:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 5717,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:17",
																"typeDescriptions": {}
															}
														},
														"id": 5720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 5722,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5723,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5714,
														"src": "33576:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5724,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5711,
														"src": "33590:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5732,
												"nodeType": "IfStatement",
												"src": "33572:97:17",
												"trueBody": {
													"id": 5731,
													"nodeType": "Block",
													"src": "33597:72:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 5727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 5728,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5711,
																		"src": "33652:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5726,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "33618:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5730,
															"nodeType": "RevertStatement",
															"src": "33611:47:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5709,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:17",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 5734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5734,
												"src": "33472:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5710,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:17"
									},
									"returnParameters": {
										"id": 5715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5714,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5734,
												"src": "33509:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 5713,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:17"
									},
									"scope": 5801,
									"src": "33455:220:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5759,
										"nodeType": "Block",
										"src": "34058:146:17",
										"statements": [
											{
												"expression": {
													"id": 5747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5742,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5740,
														"src": "34068:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5745,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5737,
																"src": "34086:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 5743,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:17",
																"typeDescriptions": {}
															}
														},
														"id": 5746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 5748,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5749,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5740,
														"src": "34106:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5750,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5737,
														"src": "34120:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5758,
												"nodeType": "IfStatement",
												"src": "34102:96:17",
												"trueBody": {
													"id": 5757,
													"nodeType": "Block",
													"src": "34127:71:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 5753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 5754,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5737,
																		"src": "34181:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5752,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4058,
																	"src": "34148:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5756,
															"nodeType": "RevertStatement",
															"src": "34141:46:17"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5735,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:17",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 5760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5760,
												"src": "34004:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5736,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:17"
									},
									"returnParameters": {
										"id": 5741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5740,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 5760,
												"src": "34041:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 5739,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:17"
									},
									"scope": 5801,
									"src": "33988:216:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5789,
										"nodeType": "Block",
										"src": "34444:250:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5768,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5763,
														"src": "34557:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 5773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 5772,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:17",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 5771,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 5774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 5775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:17",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 5769,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:17",
																"typeDescriptions": {}
															}
														},
														"id": 5776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5783,
												"nodeType": "IfStatement",
												"src": "34553:105:17",
												"trueBody": {
													"id": 5782,
													"nodeType": "Block",
													"src": "34592:66:17",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 5779,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5763,
																		"src": "34641:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5778,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4063,
																	"src": "34613:27:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 5780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5781,
															"nodeType": "RevertStatement",
															"src": "34606:41:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5786,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5763,
															"src": "34681:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 5784,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:17",
															"typeDescriptions": {}
														}
													},
													"id": 5787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5767,
												"id": 5788,
												"nodeType": "Return",
												"src": "34667:20:17"
											}
										]
									},
									"documentation": {
										"id": 5761,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:17",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 5790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5763,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 5790,
												"src": "34398:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:17"
									},
									"returnParameters": {
										"id": 5767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5790,
												"src": "34436:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5765,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:17"
									},
									"scope": 5801,
									"src": "34380:314:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5799,
										"nodeType": "Block",
										"src": "34853:87:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:17",
													"nodeType": "YulBlock",
													"src": "34888:46:17",
													"statements": [
														{
															"nativeSrc": "34902:22:17",
															"nodeType": "YulAssignment",
															"src": "34902:22:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:17"
																		},
																		"nativeSrc": "34914:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:17"
																},
																"nativeSrc": "34907:17:17",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:17"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5793,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:17",
														"valueSize": 1
													},
													{
														"declaration": 5796,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 5798,
												"nodeType": "InlineAssembly",
												"src": "34863:71:17"
											}
										]
									},
									"documentation": {
										"id": 5791,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:17",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 5800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 5800,
												"src": "34811:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:17"
									},
									"returnParameters": {
										"id": 5797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5796,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 5800,
												"src": "34842:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:17"
									},
									"scope": 5801,
									"src": "34795:145:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5802,
							"src": "769:34173:17",
							"usedErrors": [
								4046,
								4051,
								4058,
								4063
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.1.0/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SafeCast": [
							5801
						],
						"SignedMath": [
							5945
						]
					},
					"id": 5946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 5805,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5946,
							"sourceUnit": 5802,
							"src": "135:40:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5804,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5801,
										"src": "143:8:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5806,
								"nodeType": "StructuredDocumentation",
								"src": "177:80:18",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 5945,
							"linearizedBaseContracts": [
								5945
							],
							"name": "SignedMath",
							"nameLocation": "266:10:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5835,
										"nodeType": "Block",
										"src": "746:215:18",
										"statements": [
											{
												"id": 5834,
												"nodeType": "UncheckedBlock",
												"src": "756:199:18",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5818,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5813,
																"src": "894:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 5821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 5819,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5811,
																						"src": "900:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 5820,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5813,
																						"src": "904:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "900:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 5822,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "899:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 5827,
																							"name": "condition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5809,
																							"src": "932:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"expression": {
																							"id": 5825,
																							"name": "SafeCast",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5801,
																							"src": "916:8:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeCast_$5801_$",
																								"typeString": "type(library SafeCast)"
																							}
																						},
																						"id": 5826,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "925:6:18",
																						"memberName": "toUint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 5800,
																						"src": "916:15:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																							"typeString": "function (bool) pure returns (uint256)"
																						}
																					},
																					"id": 5828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "916:26:18",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 5824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "909:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 5823,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "909:6:18",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 5829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "909:34:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "899:44:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "898:46:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "894:50:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 5817,
														"id": 5833,
														"nodeType": "Return",
														"src": "887:57:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5807,
										"nodeType": "StructuredDocumentation",
										"src": "283:374:18",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 5836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "671:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5809,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "684:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 5836,
												"src": "679:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5811,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "702:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5836,
												"src": "695:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5810,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5813,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "712:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5836,
												"src": "705:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5812,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "705:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:36:18"
									},
									"returnParameters": {
										"id": 5817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5836,
												"src": "738:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5815,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:8:18"
									},
									"scope": 5945,
									"src": "662:299:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5854,
										"nodeType": "Block",
										"src": "1102:44:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5847,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5839,
																"src": "1127:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 5848,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5841,
																"src": "1131:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1127:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5850,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5839,
															"src": "1134:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5851,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5841,
															"src": "1137:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5846,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5836,
														"src": "1119:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:20:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5845,
												"id": 5853,
												"nodeType": "Return",
												"src": "1112:27:18"
											}
										]
									},
									"documentation": {
										"id": 5837,
										"nodeType": "StructuredDocumentation",
										"src": "967:66:18",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 5855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1047:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5839,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5855,
												"src": "1051:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5838,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1068:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5855,
												"src": "1061:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5840,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:20:18"
									},
									"returnParameters": {
										"id": 5845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5855,
												"src": "1094:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5843,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:8:18"
									},
									"scope": 5945,
									"src": "1038:108:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5873,
										"nodeType": "Block",
										"src": "1288:44:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5866,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5858,
																"src": "1313:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 5867,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5860,
																"src": "1317:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1313:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5869,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5858,
															"src": "1320:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5870,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5860,
															"src": "1323:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5865,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5836,
														"src": "1305:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:20:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5864,
												"id": 5872,
												"nodeType": "Return",
												"src": "1298:27:18"
											}
										]
									},
									"documentation": {
										"id": 5856,
										"nodeType": "StructuredDocumentation",
										"src": "1152:67:18",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 5874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1233:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5858,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1244:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5874,
												"src": "1237:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5857,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5860,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1254:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5874,
												"src": "1247:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:20:18"
									},
									"returnParameters": {
										"id": 5864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5874,
												"src": "1280:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5862,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:8:18"
									},
									"scope": 5945,
									"src": "1224:108:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5917,
										"nodeType": "Block",
										"src": "1537:162:18",
										"statements": [
											{
												"assignments": [
													5885
												],
												"declarations": [
													{
														"constant": false,
														"id": 5885,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1606:1:18",
														"nodeType": "VariableDeclaration",
														"scope": 5917,
														"src": "1599:8:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5884,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1599:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5898,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5886,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5877,
																	"src": "1611:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 5887,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5879,
																	"src": "1615:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1611:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5889,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1610:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5890,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5877,
																				"src": "1622:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5891,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5879,
																				"src": "1626:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1622:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5893,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1621:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 5894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1632:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1621:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5896,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1620:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1610:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:35:18"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5899,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5885,
														"src": "1651:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 5904,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5885,
																						"src": "1671:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 5903,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1663:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 5902,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1663:7:18",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 5905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1663:10:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 5906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1677:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "1663:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 5901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1656:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 5900,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1656:6:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 5908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1656:25:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5909,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5877,
																				"src": "1685:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5910,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5879,
																				"src": "1689:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1685:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5912,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1684:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1656:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5914,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1655:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1651:41:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5883,
												"id": 5916,
												"nodeType": "Return",
												"src": "1644:48:18"
											}
										]
									},
									"documentation": {
										"id": 5875,
										"nodeType": "StructuredDocumentation",
										"src": "1338:126:18",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 5918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "1478:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5877,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1493:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5918,
												"src": "1486:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5876,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5879,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5918,
												"src": "1496:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5878,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:20:18"
									},
									"returnParameters": {
										"id": 5883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5918,
												"src": "1529:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5881,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:8:18"
									},
									"scope": 5945,
									"src": "1469:230:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5943,
										"nodeType": "Block",
										"src": "1843:767:18",
										"statements": [
											{
												"id": 5942,
												"nodeType": "UncheckedBlock",
												"src": "1853:751:18",
												"statements": [
													{
														"assignments": [
															5927
														],
														"declarations": [
															{
																"constant": false,
																"id": 5927,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "2424:4:18",
																"nodeType": "VariableDeclaration",
																"scope": 5942,
																"src": "2417:11:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 5926,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2417:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 5931,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5928,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5921,
																"src": "2431:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 5929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2436:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "2431:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2417:22:18"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 5939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 5936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 5934,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5921,
																					"src": "2576:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 5935,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5927,
																					"src": "2580:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "2576:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 5937,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2575:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 5938,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5927,
																		"src": "2588:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2575:17:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 5933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2567:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 5932,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2567:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 5940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2567:26:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 5925,
														"id": 5941,
														"nodeType": "Return",
														"src": "2560:33:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5919,
										"nodeType": "StructuredDocumentation",
										"src": "1705:78:18",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 5944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1797:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5921,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1808:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5944,
												"src": "1801:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5920,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:10:18"
									},
									"returnParameters": {
										"id": 5925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5944,
												"src": "1834:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:9:18"
									},
									"scope": 5945,
									"src": "1788:822:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5946,
							"src": "258:2354:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:2504:18"
				},
				"id": 18
			},
			"contract-a9e49ce8b8.sol": {
				"ast": {
					"absolutePath": "contract-a9e49ce8b8.sol",
					"exportedSymbols": {
						"Context": [
							1000
						],
						"ECDSA": [
							2129
						],
						"EIP712": [
							2356
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							908
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							934
						],
						"IERC20Permit": [
							970
						],
						"MyToken": [
							5965
						],
						"Nonces": [
							1068
						]
					},
					"id": 5966,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@5.1.0/token/ERC20/ERC20.sol",
							"id": 5948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5966,
							"sourceUnit": 677,
							"src": "107:61:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
							"file": "@openzeppelin/contracts@5.1.0/token/ERC20/extensions/ERC20Permit.sol",
							"id": 5949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5966,
							"sourceUnit": 909,
							"src": "169:78:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5950,
										"name": "ERC20",
										"nameLocations": [
											"269:5:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "269:5:19"
									},
									"id": 5951,
									"nodeType": "InheritanceSpecifier",
									"src": "269:5:19"
								},
								{
									"baseName": {
										"id": 5952,
										"name": "ERC20Permit",
										"nameLocations": [
											"276:11:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 908,
										"src": "276:11:19"
									},
									"id": 5953,
									"nodeType": "InheritanceSpecifier",
									"src": "276:11:19"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5965,
							"linearizedBaseContracts": [
								5965,
								908,
								1068,
								2356,
								24,
								970,
								676,
								66,
								934,
								754,
								1000
							],
							"name": "MyToken",
							"nameLocation": "258:7:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5963,
										"nodeType": "Block",
										"src": "355:2:19",
										"statements": []
									},
									"id": 5964,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 5956,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "314:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 5957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "325:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 5958,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 5955,
												"name": "ERC20",
												"nameLocations": [
													"308:5:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "308:5:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "308:23:19"
										},
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 5960,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "344:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												}
											],
											"id": 5961,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 5959,
												"name": "ERC20Permit",
												"nameLocations": [
													"332:11:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 908,
												"src": "332:11:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "332:22:19"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:19"
									},
									"returnParameters": {
										"id": 5962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:19"
									},
									"scope": 5965,
									"src": "294:63:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 5966,
							"src": "249:110:19",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								785,
								792,
								1010,
								1134,
								1136,
								1792,
								1797,
								1802
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "81:279:19"
				},
				"id": 19
			}
		}
	}
}