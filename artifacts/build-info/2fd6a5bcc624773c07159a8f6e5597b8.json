{
	"id": "2fd6a5bcc624773c07159a8f6e5597b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"TransferUSDCBasic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\n// Deploy this contract on Fuji\n\nimport {IRouterClient} from \"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {Client} from \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\";\nimport {IERC20} from \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n * DO NOT USE THIS CODE IN PRODUCTION.\n */\ncontract TransferUSDCBasic {\n    using SafeERC20 for IERC20;\n\n    error NotEnoughBalanceForFees(uint256 currentBalance, uint256 calculatedFees);\n    error NotEnoughBalanceUsdcForTransfer(uint256 currentBalance);\n    error NothingToWithdraw();\n\n    address public owner;\n    IRouterClient private immutable ccipRouter;\n    IERC20 private immutable linkToken;\n    IERC20 private immutable usdcToken;\n\n    // https://docs.chain.link/ccip/supported-networks/v1_2_0/testnet#avalanche-fuji\n    address ccipRouterAddress = 0xF694E193200268f9a4868e4Aa017A0118C9a8177;\n\n    // https://docs.chain.link/resources/link-token-contracts#fuji-testnet\n    address linkAddress = 0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846;\n\n    // https://developers.circle.com/stablecoins/docs/usdc-on-test-networks\n    address usdcAddress = 0x5425890298aed601595a70AB815c96711a31Bc65;\n\n    // https://docs.chain.link/ccip/supported-networks/v1_2_0/testnet#ethereum-sepolia\n    uint64 destinationChainSelector = 16015286601757825753;\n\n    event UsdcTransferred(\n        bytes32 messageId,\n        uint64 destinationChainSelector,\n        address receiver,\n        uint256 amount,\n        uint256 ccipFee\n    );\n\n    constructor() {\n        owner = msg.sender;\n        ccipRouter = IRouterClient(ccipRouterAddress);\n        linkToken = IERC20(linkAddress);\n        usdcToken = IERC20(usdcAddress);\n    }\n\n    function transferUsdcToSepolia(\n        address _receiver,\n        uint256 _amount\n    )\n        external\n        returns (bytes32 messageId)\n    {\n        Client.EVMTokenAmount[]\n            memory tokenAmounts = new Client.EVMTokenAmount[](1);\n        Client.EVMTokenAmount memory tokenAmount = Client.EVMTokenAmount({\n            token: address(usdcToken),\n            amount: _amount\n        });\n        tokenAmounts[0] = tokenAmount;\n\n        Client.EVM2AnyMessage memory message = Client.EVM2AnyMessage({\n            receiver: abi.encode(_receiver),\n            data: \"\",\n            tokenAmounts: tokenAmounts,\n            extraArgs: Client._argsToBytes(\n                Client.EVMExtraArgsV1({gasLimit: 0})\n            ),\n            feeToken: address(linkToken)\n        });\n\n        uint256 ccipFee = ccipRouter.getFee(\n            destinationChainSelector,\n            message\n        );\n\n        if (ccipFee > linkToken.balanceOf(address(this)))\n            revert NotEnoughBalanceForFees(linkToken.balanceOf(address(this)), ccipFee);\n        linkToken.approve(address(ccipRouter), ccipFee);\n\n        if (_amount > usdcToken.balanceOf(msg.sender))\n            revert NotEnoughBalanceUsdcForTransfer(usdcToken.balanceOf(msg.sender));\n        usdcToken.safeTransferFrom(msg.sender, address(this), _amount);\n        usdcToken.approve(address(ccipRouter), _amount);\n\n        // Send CCIP Message\n        messageId = ccipRouter.ccipSend(destinationChainSelector, message);\n\n        emit UsdcTransferred(\n            messageId,\n            destinationChainSelector,\n            _receiver,\n            _amount,\n            ccipFee\n        );\n    }\n\n    function allowanceUsdc() public view returns (uint256 usdcAmount) {\n        usdcAmount = usdcToken.allowance(msg.sender, address(this));\n    }\n\n    function balancesOf(address account) public view returns (uint256 linkBalance, uint256 usdcBalance) {\n        linkBalance =  linkToken.balanceOf(account);\n        usdcBalance = IERC20(usdcToken).balanceOf(account);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function withdrawToken(\n        address _beneficiary,\n        address _token\n    ) public onlyOwner {\n        uint256 amount = IERC20(_token).balanceOf(address(this));\n        if (amount == 0) revert NothingToWithdraw();\n        IERC20(_token).transfer(_beneficiary, amount);\n    }\n}"
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n  }\n\n  /**\n   * @dev Deprecated. This function has issues similar to the ones found in\n   * {IERC20-approve}, and its usage is discouraged.\n   *\n   * Whenever possible, use {safeIncreaseAllowance} and\n   * {safeDecreaseAllowance} instead.\n   */\n  function safeApprove(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    // safeApprove should only be called when setting an initial allowance,\n    // or when resetting it to zero. To increase and decrease it, use\n    // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      \"SafeERC20: approve from non-zero to non-zero allowance\"\n    );\n    _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function safeIncreaseAllowance(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    uint256 newAllowance = token.allowance(address(this), spender) + value;\n    _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n  }\n\n  function safeDecreaseAllowance(\n    IERC20 token,\n    address spender,\n    uint256 value\n  ) internal {\n    unchecked {\n      uint256 oldAllowance = token.allowance(address(this), spender);\n      require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n      uint256 newAllowance = oldAllowance - value;\n      _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n  }\n\n  function safePermit(\n    IERC20Permit token,\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) internal {\n    uint256 nonceBefore = token.nonces(owner);\n    token.permit(owner, spender, value, deadline, v, r, s);\n    uint256 nonceAfter = token.nonces(owner);\n    require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n  }\n\n  /**\n   * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n   * on the return value: the return value is optional (but if data is returned, it must not be false).\n   * @param token The token targeted by the call.\n   * @param data The call data (encoded using abi.encode or one of its variants).\n   */\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\n    // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n    // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n    // the target address contains contract code and also asserts for success in the low-level call.\n\n    bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n    if (returndata.length > 0) {\n      // Return data is optional\n      require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n  }\n}"
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `to`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address to, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `from` to `to` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address from,\n    address to,\n    uint256 amount\n  ) external returns (bool);\n}"
			},
			"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// End consumer library.\nlibrary Client {\n  /// @dev RMN depends on this struct, if changing, please notify the RMN maintainers.\n  struct EVMTokenAmount {\n    address token; // token address on the local chain.\n    uint256 amount; // Amount of tokens.\n  }\n\n  struct Any2EVMMessage {\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\n    uint64 sourceChainSelector; // Source chain selector.\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\n    bytes data; // payload sent in original message.\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\n  }\n\n  // If extraArgs is empty bytes, the default is 200k gas limit.\n  struct EVM2AnyMessage {\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\n    bytes data; // Data payload\n    EVMTokenAmount[] tokenAmounts; // Token transfers\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV2)\n  }\n\n  // bytes4(keccak256(\"CCIP EVMExtraArgsV1\"));\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\n\n  struct EVMExtraArgsV1 {\n    uint256 gasLimit;\n  }\n\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n\n  // bytes4(keccak256(\"CCIP EVMExtraArgsV2\"));\n  bytes4 public constant EVM_EXTRA_ARGS_V2_TAG = 0x181dcf10;\n\n  /// @param gasLimit: gas limit for the callback on the destination chain.\n  /// @param allowOutOfOrderExecution: if true, it indicates that the message can be executed in any order relative to other messages from the same sender.\n  /// This value's default varies by chain. On some chains, a particular value is enforced, meaning if the expected value\n  /// is not set, the message request will revert.\n  struct EVMExtraArgsV2 {\n    uint256 gasLimit;\n    bool allowOutOfOrderExecution;\n  }\n\n  function _argsToBytes(EVMExtraArgsV2 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V2_TAG, extraArgs);\n  }\n}\n"
			},
			"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {Client} from \"../libraries/Client.sol\";\n\ninterface IRouterClient {\n  error UnsupportedDestinationChain(uint64 destChainSelector);\n  error InsufficientFeeTokenAmount();\n  error InvalidMsgValue();\n\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\n  /// @param destChainSelector The chain to check.\n  /// @return supported is true if it is supported, false if not.\n  function isChainSupported(uint64 destChainSelector) external view returns (bool supported);\n\n  /// @param destinationChainSelector The destination chainSelector\n  /// @param message The cross-chain CCIP message including data and/or tokens\n  /// @return fee returns execution fee for the message\n  /// delivery to destination chain, denominated in the feeToken specified in the message.\n  /// @dev Reverts with appropriate reason upon invalid message.\n  function getFee(\n    uint64 destinationChainSelector,\n    Client.EVM2AnyMessage memory message\n  ) external view returns (uint256 fee);\n\n  /// @notice Request a message to be sent to the destination chain\n  /// @param destinationChainSelector The destination chain ID\n  /// @param message The cross-chain CCIP message including data and/or tokens\n  /// @return messageId The message ID\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\n  /// the overpayment with no refund.\n  /// @dev Reverts with appropriate reason upon invalid message.\n  function ccipSend(\n    uint64 destinationChainSelector,\n    Client.EVM2AnyMessage calldata message\n  ) external payable returns (bytes32);\n}\n"
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   *\n   * [IMPORTANT]\n   * ====\n   * You shouldn't rely on `isContract` to protect against flash loan attacks!\n   *\n   * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n   * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n   * constructor.\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // This method relies on extcodesize/address.code.length, which returns 0\n    // for contracts in construction, since the code is only stored at the end\n    // of the constructor execution.\n\n    return account.code.length > 0;\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n    (bool success, ) = recipient.call{value: amount}(\"\");\n    require(success, \"Address: unable to send value, recipient may have reverted\");\n  }\n\n  /**\n   * @dev Performs a Solidity function call using a low level `call`. A\n   * plain `call` is an unsafe replacement for a function call: use this\n   * function instead.\n   *\n   * If `target` reverts with a revert reason, it is bubbled up by this\n   * function (like regular Solidity function calls).\n   *\n   * Returns the raw returned data. To convert to the expected return value,\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n   *\n   * Requirements:\n   *\n   * - `target` must be a contract.\n   * - calling `target` with `data` must not revert.\n   *\n   * _Available since v3.1._\n   */\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n    return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n   * `errorMessage` as a fallback revert reason when `target` reverts.\n   *\n   * _Available since v3.1._\n   */\n  function functionCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    return functionCallWithValue(target, data, 0, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but also transferring `value` wei to `target`.\n   *\n   * Requirements:\n   *\n   * - the calling contract must have an ETH balance of at least `value`.\n   * - the called Solidity function must be `payable`.\n   *\n   * _Available since v3.1._\n   */\n  function functionCallWithValue(\n    address target,\n    bytes memory data,\n    uint256 value\n  ) internal returns (bytes memory) {\n    return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\n   *\n   * _Available since v3.1._\n   */\n  function functionCallWithValue(\n    address target,\n    bytes memory data,\n    uint256 value,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\n    return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but performing a static call.\n   *\n   * _Available since v3.3._\n   */\n  function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n    return functionStaticCall(target, data, \"Address: low-level static call failed\");\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n   * but performing a static call.\n   *\n   * _Available since v3.3._\n   */\n  function functionStaticCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal view returns (bytes memory) {\n    (bool success, bytes memory returndata) = target.staticcall(data);\n    return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but performing a delegate call.\n   *\n   * _Available since v3.4._\n   */\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n    return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n   * but performing a delegate call.\n   *\n   * _Available since v3.4._\n   */\n  function functionDelegateCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    (bool success, bytes memory returndata) = target.delegatecall(data);\n    return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n   * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n   *\n   * _Available since v4.8._\n   */\n  function verifyCallResultFromTarget(\n    address target,\n    bool success,\n    bytes memory returndata,\n    string memory errorMessage\n  ) internal view returns (bytes memory) {\n    if (success) {\n      if (returndata.length == 0) {\n        // only check isContract if the call was successful and the return data is empty\n        // otherwise we already know that it was a contract\n        require(isContract(target), \"Address: call to non-contract\");\n      }\n      return returndata;\n    } else {\n      _revert(returndata, errorMessage);\n    }\n  }\n\n  /**\n   * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n   * revert reason or using the provided one.\n   *\n   * _Available since v4.3._\n   */\n  function verifyCallResult(\n    bool success,\n    bytes memory returndata,\n    string memory errorMessage\n  ) internal pure returns (bytes memory) {\n    if (success) {\n      return returndata;\n    } else {\n      _revert(returndata, errorMessage);\n    }\n  }\n\n  function _revert(bytes memory returndata, string memory errorMessage) private pure {\n    // Look for revert reason and bubble it up if present\n    if (returndata.length > 0) {\n      // The easiest way to bubble the revert reason is using memory via assembly\n      /// @solidity memory-safe-assembly\n      assembly {\n        let returndata_size := mload(returndata)\n        revert(add(32, returndata), returndata_size)\n      }\n    } else {\n      revert(errorMessage);\n    }\n  }\n}"
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n  /**\n   * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n   * given ``owner``'s signed approval.\n   *\n   * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n   * ordering also apply here.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `deadline` must be a timestamp in the future.\n   * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n   * over the EIP712-formatted function arguments.\n   * - the signature must use ``owner``'s current nonce (see {nonces}).\n   *\n   * For more information on the signature format, see the\n   * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n   * section].\n   */\n  function permit(\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external;\n\n  /**\n   * @dev Returns the current nonce for `owner`. This value must be\n   * included whenever a signature is generated for {permit}.\n   *\n   * Every successful call to {permit} increases ``owner``'s nonce by one. This\n   * prevents a signature from being used multiple times.\n   */\n  function nonces(address owner) external view returns (uint256);\n\n  /**\n   * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n   */\n  // solhint-disable-next-line func-name-mixedcase\n  function DOMAIN_SEPARATOR() external view returns (bytes32);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol": {
				"IRouterClient": {
					"abi": [
						{
							"inputs": [],
							"name": "InsufficientFeeTokenAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidMsgValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainSelector",
									"type": "uint64"
								}
							],
							"name": "UnsupportedDestinationChain",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destinationChainSelector",
									"type": "uint64"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "receiver",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct Client.EVMTokenAmount[]",
											"name": "tokenAmounts",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "extraArgs",
											"type": "bytes"
										}
									],
									"internalType": "struct Client.EVM2AnyMessage",
									"name": "message",
									"type": "tuple"
								}
							],
							"name": "ccipSend",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destinationChainSelector",
									"type": "uint64"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "receiver",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct Client.EVMTokenAmount[]",
											"name": "tokenAmounts",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "extraArgs",
											"type": "bytes"
										}
									],
									"internalType": "struct Client.EVM2AnyMessage",
									"name": "message",
									"type": "tuple"
								}
							],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainSelector",
									"type": "uint64"
								}
							],
							"name": "isChainSupported",
							"outputs": [
								{
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
								"details": "Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.",
								"params": {
									"destinationChainSelector": "The destination chain ID",
									"message": "The cross-chain CCIP message including data and/or tokens"
								},
								"returns": {
									"_0": "messageId The message ID"
								}
							},
							"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
								"details": "Reverts with appropriate reason upon invalid message.",
								"params": {
									"destinationChainSelector": "The destination chainSelector",
									"message": "The cross-chain CCIP message including data and/or tokens"
								},
								"returns": {
									"fee": "returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message."
								}
							},
							"isChainSupported(uint64)": {
								"params": {
									"destChainSelector": "The chain to check."
								},
								"returns": {
									"supported": "is true if it is supported, false if not."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": "96f4e9f9",
							"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": "20487ded",
							"isChainSupported(uint64)": "a48a9058"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFeeTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"UnsupportedDestinationChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipSend\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"isChainSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chain ID\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"_0\":\"messageId The message ID\"}},\"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chainSelector\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"fee\":\"returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message.\"}},\"isChainSupported(uint64)\":{\"params\":{\"destChainSelector\":\"The chain to check.\"},\"returns\":{\"supported\":\"is true if it is supported, false if not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"notice\":\"Request a message to be sent to the destination chain\"},\"isChainSupported(uint64)\":{\"notice\":\"Checks if the given chain ID is supported for sending/receiving.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":\"IRouterClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x176bc6a1bec19d76464566d4becb68946e4c53b779e2019b34f95be4fee571f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f8abd3813d7acb8f5b510dbdc9f7eb9b0fe300ea4261ae9c4f843e0d3f0b24a\",\"dweb:/ipfs/QmSCmCC5wXYqgvLfpdqWxZTfo837DYVPLo9CYEKhgid1DA\"]},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
								"notice": "Request a message to be sent to the destination chain"
							},
							"isChainSupported(uint64)": {
								"notice": "Checks if the given chain ID is supported for sending/receiving."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
				"Client": {
					"abi": [
						{
							"inputs": [],
							"name": "EVM_EXTRA_ARGS_V1_TAG",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EVM_EXTRA_ARGS_V2_TAG",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":82:2234  library Client {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":82:2234  library Client {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ab8c0d0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8113c578\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1171:1228  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9 */\n    tag_2:\n      tag_4\n      shl(0xe0, 0x97a657c9)\n      dup2\n      jump\n    tag_4:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":184:217   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":166:218   */\n      dup2\n      mstore\n        /* \"#utility.yul\":154:156   */\n      0x20\n        /* \"#utility.yul\":139:157   */\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1171:1228  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9 */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1507:1564  bytes4 public constant EVM_EXTRA_ARGS_V2_TAG = 0x181dcf10 */\n    tag_3:\n      tag_4\n      shl(0xe4, 0x0181dcf1)\n      dup2\n      jump\n\n    auxdata: 0xa26469706673582212203c53c11f909cc3a87793cfefcf5009b601fa5d5d0ef2f7eaa119f2263678eacf64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60af610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80633ab8c0d01460425780638113c57814606c575b600080fd5b604f6397a657c960e01b81565b6040516001600160e01b0319909116815260200160405180910390f35b604f630181dcf160e41b8156fea26469706673582212203c53c11f909cc3a87793cfefcf5009b601fa5d5d0ef2f7eaa119f2263678eacf64736f6c63430008130033",
							"opcodes": "PUSH1 0xAF PUSH2 0x39 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AB8C0D0 EQ PUSH1 0x42 JUMPI DUP1 PUSH4 0x8113C578 EQ PUSH1 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4F PUSH4 0x97A657C9 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4F PUSH4 0x181DCF1 PUSH1 0xE4 SHL DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY MSTORE8 0xC1 0x1F SWAP1 SWAP13 0xC3 0xA8 PUSH24 0x93CFEFCF5009B601FA5D5D0EF2F7EAA119F2263678EACF64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "82:2152:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;82:2152:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EVM_EXTRA_ARGS_V1_TAG_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EVM_EXTRA_ARGS_V2_TAG_99": {
									"entryPoint": null,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:226:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "121:103:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "131:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "143:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "131:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "188:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "200:3:7",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "205:10:7",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "196:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "196:20:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "184:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:33:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:52:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "90:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "101:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "112:4:7",
														"type": ""
													}
												],
												"src": "14:210:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80633ab8c0d01460425780638113c57814606c575b600080fd5b604f6397a657c960e01b81565b6040516001600160e01b0319909116815260200160405180910390f35b604f630181dcf160e41b8156fea26469706673582212203c53c11f909cc3a87793cfefcf5009b601fa5d5d0ef2f7eaa119f2263678eacf64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AB8C0D0 EQ PUSH1 0x42 JUMPI DUP1 PUSH4 0x8113C578 EQ PUSH1 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4F PUSH4 0x97A657C9 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4F PUSH4 0x181DCF1 PUSH1 0xE4 SHL DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY MSTORE8 0xC1 0x1F SWAP1 SWAP13 0xC3 0xA8 PUSH24 0x93CFEFCF5009B601FA5D5D0EF2F7EAA119F2263678EACF64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "82:2152:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:57;;-1:-1:-1;;;1171:57:1;;;;;-1:-1:-1;;;;;;184:33:7;;;166:52;;154:2;139:18;1171:57:1;;;;;;;1507;;-1:-1:-1;;;1507:57:1;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "35000",
								"executionCost": "118",
								"totalCost": "35118"
							},
							"external": {
								"EVM_EXTRA_ARGS_V1_TAG()": "175",
								"EVM_EXTRA_ARGS_V2_TAG()": "197"
							},
							"internal": {
								"_argsToBytes(struct Client.EVMExtraArgsV1 memory)": "infinite",
								"_argsToBytes(struct Client.EVMExtraArgsV2 memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2234,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c53c11f909cc3a87793cfefcf5009b601fa5d5d0ef2f7eaa119f2263678eacf64736f6c63430008130033",
									".code": [
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "3AB8C0D0"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "8113C578"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "97A657C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 184,
											"end": 217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 184,
											"end": 217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 184,
											"end": 217,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 166,
											"end": 218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 166,
											"end": 218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 154,
											"end": 156,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1564,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1507,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181DCF1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1507,
											"end": 1564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1564,
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
								"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
								"TransferUSDCBasic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"EVM_EXTRA_ARGS_V1_TAG()": "3ab8c0d0",
							"EVM_EXTRA_ARGS_V2_TAG()": "8113c578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EVM_EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EVM_EXTRA_ARGS_V2_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":\"Client\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128\",\"dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xca8a1e219f7a427d02b93efd7a4f9ecd76a2e6776b5e196df0a5e4ccc175187b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53eb5ae6a9225130a6b4efc4cad8cc9fff2992e3a95bc1ed518dcb9db965e969\",\"dweb:/ipfs/QmSkLFh7WUYVr8VLkth7RaRQ5siQSw6P45Dc3KT2hFhNnX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":707:4155  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":707:4155  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220902eabb7174bd686c4239e76c612ef09a89f63ff55a4972c9bd6faecb7f162b564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220902eabb7174bd686c4239e76c612ef09a89f63ff55a4972c9bd6faecb7f162b564736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E 0xAB 0xB7 OR 0x4B 0xD6 DUP7 0xC4 0x23 SWAP15 PUSH23 0xC612EF09A89F63FF55A4972C9BD6FAECB7F162B564736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "707:3448:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3448:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220902eabb7174bd686c4239e76c612ef09a89f63ff55a4972c9bd6faecb7f162b564736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E 0xAB 0xB7 OR 0x4B 0xD6 DUP7 0xC4 0x23 SWAP15 PUSH23 0xC612EF09A89F63FF55A4972C9BD6FAECB7F162B564736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "707:3448:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4155,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902eabb7174bd686c4239e76c612ef09a89f63ff55a4972c9bd6faecb7f162b564736f6c63430008130033",
									".code": [
										{
											"begin": 707,
											"end": 4155,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4155,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
								"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
								"TransferUSDCBasic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128\",\"dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H\"]},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xca8a1e219f7a427d02b93efd7a4f9ecd76a2e6776b5e196df0a5e4ccc175187b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53eb5ae6a9225130a6b4efc4cad8cc9fff2992e3a95bc1ed518dcb9db965e969\",\"dweb:/ipfs/QmSkLFh7WUYVr8VLkth7RaRQ5siQSw6P45Dc3KT2hFhNnX\"]},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xd1668d9229b21a4630535ca2100c61e4a2905ea7e4e6077c27dfd1caa7d467ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6558c79b0459e0d8f98954af7f1fadf1c5c7809a873742e05ea3f88a5edcc20\",\"dweb:/ipfs/QmaY29cBPKADz8PqyR2M72QLqUgY7o3EYCwQknzpj9u6Da\"]},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":{\"keccak256\":\"0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b\",\"dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":194:8540  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":194:8540  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb43072486662fc3657b063952fb7498a594d134e206326e0c9fe600b77b4d2164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb43072486662fc3657b063952fb7498a594d134e206326e0c9fe600b77b4d2164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB NUMBER SMOD 0x24 DUP7 PUSH7 0x2FC3657B063952 0xFB PUSH21 0x98A594D134E206326E0C9FE600B77B4D2164736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "194:8346:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8346:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb43072486662fc3657b063952fb7498a594d134e206326e0c9fe600b77b4d2164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB NUMBER SMOD 0x24 DUP7 PUSH7 0x2FC3657B063952 0xFB PUSH21 0x98A594D134E206326E0C9FE600B77B4D2164736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "194:8346:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8540,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb43072486662fc3657b063952fb7498a594d134e206326e0c9fe600b77b4d2164736f6c63430008130033",
									".code": [
										{
											"begin": 194,
											"end": 8540,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8540,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
								"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
								"TransferUSDCBasic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":{\"keccak256\":\"0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b\",\"dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TransferUSDCBasic.sol": {
				"TransferUSDCBasic": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "calculatedFees",
									"type": "uint256"
								}
							],
							"name": "NotEnoughBalanceForFees",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentBalance",
									"type": "uint256"
								}
							],
							"name": "NotEnoughBalanceUsdcForTransfer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NothingToWithdraw",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "messageId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "destinationChainSelector",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ccipFee",
									"type": "uint256"
								}
							],
							"name": "UsdcTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "allowanceUsdc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balancesOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "linkBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "usdcBalance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferUsdcToSepolia",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "messageId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TransferUSDCBasic.sol\":700:4472  contract TransferUSDCBasic {... */\n  mstore(0x40, 0xe0)\n    /* \"TransferUSDCBasic.sol\":1188:1258  address ccipRouterAddress = 0xF694E193200268f9a4868e4Aa017A0118C9a8177 */\n  0x01\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"TransferUSDCBasic.sol\":1216:1258  0xF694E193200268f9a4868e4Aa017A0118C9a8177 */\n  0xf694e193200268f9a4868e4aa017a0118c9a8177\n    /* \"TransferUSDCBasic.sol\":1188:1258  address ccipRouterAddress = 0xF694E193200268f9a4868e4Aa017A0118C9a8177 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"TransferUSDCBasic.sol\":1340:1404  address linkAddress = 0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846 */\n  0x02\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"TransferUSDCBasic.sol\":1362:1404  0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846 */\n  0x0b9d5d9136855f6fec3c0993fee6e9ce8a297846\n    /* \"TransferUSDCBasic.sol\":1340:1404  address linkAddress = 0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846 */\n  or\n  swap1\n  sstore\n    /* \"TransferUSDCBasic.sol\":1487:1551  address usdcAddress = 0x5425890298aed601595a70AB815c96711a31Bc65 */\n  0x03\n  dup1\n  sload\n    /* \"TransferUSDCBasic.sol\":1645:1699  uint64 destinationChainSelector = 16015286601757825753 */\n  0xde41ba4fc9d91ad95425890298aed601595a70ab815c96711a31bc65\n  not(sub(shl(0xe0, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"TransferUSDCBasic.sol\":1883:2069  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TransferUSDCBasic.sol\":1907:1912  owner */\n  0x00\n    /* \"TransferUSDCBasic.sol\":1907:1925  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"TransferUSDCBasic.sol\":1915:1925  msg.sender */\n  caller\n    /* \"TransferUSDCBasic.sol\":1907:1925  owner = msg.sender */\n  or\n  swap1\n  sstore\n  0x01\n    /* \"TransferUSDCBasic.sol\":1962:1979  ccipRouterAddress */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"TransferUSDCBasic.sol\":1935:1980  ccipRouter = IRouterClient(ccipRouterAddress) */\n  0x80\n  mstore\n    /* \"TransferUSDCBasic.sol\":2009:2020  linkAddress */\n  sload(0x02)\n  dup2\n  and\n    /* \"TransferUSDCBasic.sol\":1990:2021  linkToken = IERC20(linkAddress) */\n  0xa0\n  mstore\n    /* \"TransferUSDCBasic.sol\":2050:2061  usdcAddress */\n  sload(0x03)\n  and\n    /* \"TransferUSDCBasic.sol\":2031:2062  usdcToken = IERC20(usdcAddress) */\n  0xc0\n  mstore\n    /* \"TransferUSDCBasic.sol\":700:4472  contract TransferUSDCBasic {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n  0x00\n  assignImmutable(\"0x51af0b011a8186c01f00efb4bfb18f2c7a1b6da2f988a2541d85684767c6542e\")\n  0x00\n  assignImmutable(\"0xf44e26cb6192c7a70f026ebae4c4bdf0822fd8ec199501187afd94cd2c3c7097\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"TransferUSDCBasic.sol\":700:4472  contract TransferUSDCBasic {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3aeac4e1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6392a51f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xed3bd5bc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfe2c5d36\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TransferUSDCBasic.sol\":4189:4470  function withdrawToken(... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"TransferUSDCBasic.sol\":3880:4100  function balancesOf(address account) public view returns (uint256 linkBalance, uint256 usdcBalance) {... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":822:847   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":878:880   */\n      0x20\n        /* \"#utility.yul\":863:881   */\n      dup4\n      add\n        /* \"#utility.yul\":856:890   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":795:813   */\n      add\n        /* \"TransferUSDCBasic.sol\":3880:4100  function balancesOf(address account) public view returns (uint256 linkBalance, uint256 usdcBalance) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TransferUSDCBasic.sol\":948:968  address public owner */\n    tag_5:\n      sload(0x00)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1174:1206   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1156:1207   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"TransferUSDCBasic.sol\":948:968  address public owner */\n      tag_16\n        /* \"#utility.yul\":1010:1213   */\n      jump\n        /* \"TransferUSDCBasic.sol\":3732:3874  function allowanceUsdc() public view returns (uint256 usdcAmount) {... */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1364:1389   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1352:1354   */\n      0x20\n        /* \"#utility.yul\":1337:1355   */\n      add\n        /* \"TransferUSDCBasic.sol\":3732:3874  function allowanceUsdc() public view returns (uint256 usdcAmount) {... */\n      tag_16\n        /* \"#utility.yul\":1218:1395   */\n      jump\n        /* \"TransferUSDCBasic.sol\":2075:3726  function transferUsdcToSepolia(... */\n    tag_7:\n      tag_22\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n        /* \"TransferUSDCBasic.sol\":4189:4470  function withdrawToken(... */\n    tag_11:\n        /* \"TransferUSDCBasic.sol\":4159:4164  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"TransferUSDCBasic.sol\":4145:4155  msg.sender */\n      caller\n        /* \"TransferUSDCBasic.sol\":4145:4164  msg.sender == owner */\n      eq\n        /* \"TransferUSDCBasic.sol\":4137:4165  require(msg.sender == owner) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"TransferUSDCBasic.sol\":4316:4355  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":4349:4353  this */\n      address\n        /* \"TransferUSDCBasic.sol\":4316:4355  IERC20(_token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":4299:4313  uint256 amount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":4316:4340  IERC20(_token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1129:1147   */\n      0x24\n      add\n        /* \"TransferUSDCBasic.sol\":4316:4355  IERC20(_token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"TransferUSDCBasic.sol\":4299:4355  uint256 amount = IERC20(_token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"TransferUSDCBasic.sol\":4369:4375  amount */\n      dup1\n        /* \"TransferUSDCBasic.sol\":4379:4380  0 */\n      0x00\n        /* \"TransferUSDCBasic.sol\":4369:4380  amount == 0 */\n      sub\n        /* \"TransferUSDCBasic.sol\":4365:4408  if (amount == 0) revert NothingToWithdraw() */\n      tag_40\n      jumpi\n        /* \"TransferUSDCBasic.sol\":4389:4408  NothingToWithdraw() */\n      mload(0x40)\n      shl(0xe5, 0x0686827b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"TransferUSDCBasic.sol\":4365:4408  if (amount == 0) revert NothingToWithdraw() */\n    tag_40:\n        /* \"TransferUSDCBasic.sol\":4418:4463  IERC20(_token).transfer(_beneficiary, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2222:2254   */\n      dup5\n      dup2\n      and\n        /* \"TransferUSDCBasic.sol\":4418:4463  IERC20(_token).transfer(_beneficiary, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2204:2255   */\n      mstore\n        /* \"#utility.yul\":2271:2289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2264:2298   */\n      dup4\n      swap1\n      mstore\n        /* \"TransferUSDCBasic.sol\":4418:4441  IERC20(_token).transfer */\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2177:2195   */\n      0x44\n      add\n        /* \"TransferUSDCBasic.sol\":4418:4463  IERC20(_token).transfer(_beneficiary, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      pop\n        /* \"TransferUSDCBasic.sol\":4289:4470  {... */\n      pop\n        /* \"TransferUSDCBasic.sol\":4189:4470  function withdrawToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"TransferUSDCBasic.sol\":3880:4100  function balancesOf(address account) public view returns (uint256 linkBalance, uint256 usdcBalance) {... */\n    tag_15:\n        /* \"TransferUSDCBasic.sol\":4005:4033  linkToken.balanceOf(account) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1174:1206   */\n      dup3\n      dup2\n      and\n        /* \"TransferUSDCBasic.sol\":4005:4033  linkToken.balanceOf(account) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":3938:3957  uint256 linkBalance */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"TransferUSDCBasic.sol\":4005:4014  linkToken */\n      immutable(\"0x51af0b011a8186c01f00efb4bfb18f2c7a1b6da2f988a2541d85684767c6542e\")\n        /* \"TransferUSDCBasic.sol\":4005:4024  linkToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1129:1147   */\n      0x24\n      add\n        /* \"TransferUSDCBasic.sol\":4005:4033  linkToken.balanceOf(account) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_51:\n        /* \"TransferUSDCBasic.sol\":4057:4093  IERC20(usdcToken).balanceOf(account) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1174:1206   */\n      dup6\n      dup2\n      and\n        /* \"TransferUSDCBasic.sol\":4057:4093  IERC20(usdcToken).balanceOf(account) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":3990:4033  linkBalance =  linkToken.balanceOf(account) */\n      swap2\n      swap4\n      pop\n        /* \"TransferUSDCBasic.sol\":4064:4073  usdcToken */\n      immutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n        /* \"TransferUSDCBasic.sol\":4057:4084  IERC20(usdcToken).balanceOf */\n      swap1\n      swap2\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1129:1147   */\n      0x24\n      add\n        /* \"TransferUSDCBasic.sol\":4057:4093  IERC20(usdcToken).balanceOf(account) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"TransferUSDCBasic.sol\":4043:4093  usdcBalance = IERC20(usdcToken).balanceOf(account) */\n      swap1\n      pop\n        /* \"TransferUSDCBasic.sol\":3880:4100  function balancesOf(address account) public view returns (uint256 linkBalance, uint256 usdcBalance) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"TransferUSDCBasic.sol\":3732:3874  function allowanceUsdc() public view returns (uint256 usdcAmount) {... */\n    tag_23:\n        /* \"TransferUSDCBasic.sol\":3821:3867  usdcToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":3841:3851  msg.sender */\n      caller\n        /* \"TransferUSDCBasic.sol\":3821:3867  usdcToken.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2803:2837   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":3861:3865  this */\n      address\n        /* \"#utility.yul\":2853:2871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2846:2889   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":3778:3796  uint256 usdcAmount */\n      0x00\n      swap1\n        /* \"TransferUSDCBasic.sol\":3821:3830  usdcToken */\n      immutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3821:3840  usdcToken.allowance */\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":2738:2756   */\n      0x44\n      add\n        /* \"TransferUSDCBasic.sol\":3821:3867  usdcToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"TransferUSDCBasic.sol\":3808:3867  usdcAmount = usdcToken.allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"TransferUSDCBasic.sol\":3732:3874  function allowanceUsdc() public view returns (uint256 usdcAmount) {... */\n      swap1\n      jump\t// out\n        /* \"TransferUSDCBasic.sol\":2075:3726  function transferUsdcToSepolia(... */\n    tag_29:\n        /* \"TransferUSDCBasic.sol\":2289:2319  new Client.EVMTokenAmount[](1) */\n      0x40\n      dup1\n      mload\n        /* \"TransferUSDCBasic.sol\":2317:2318  1 */\n      0x01\n        /* \"TransferUSDCBasic.sol\":2289:2319  new Client.EVMTokenAmount[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"TransferUSDCBasic.sol\":2198:2215  bytes32 messageId */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"TransferUSDCBasic.sol\":2289:2319  new Client.EVMTokenAmount[](1) */\n      swap1\n      dup2\n      0x20\n      add\n    tag_67:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_67\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"TransferUSDCBasic.sol\":2231:2319  Client.EVMTokenAmount[]... */\n      swap1\n      pop\n        /* \"TransferUSDCBasic.sol\":2329:2369  Client.EVMTokenAmount memory tokenAmount */\n      0x00\n        /* \"TransferUSDCBasic.sol\":2372:2473  Client.EVMTokenAmount({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"TransferUSDCBasic.sol\":2423:2432  usdcToken */\n      immutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":2372:2473  Client.EVMTokenAmount({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TransferUSDCBasic.sol\":2455:2462  _amount */\n      dup6\n        /* \"TransferUSDCBasic.sol\":2372:2473  Client.EVMTokenAmount({... */\n      dup2\n      mstore\n      pop\n        /* \"TransferUSDCBasic.sol\":2329:2473  Client.EVMTokenAmount memory tokenAmount = Client.EVMTokenAmount({... */\n      swap1\n      pop\n        /* \"TransferUSDCBasic.sol\":2501:2512  tokenAmount */\n      dup1\n        /* \"TransferUSDCBasic.sol\":2483:2495  tokenAmounts */\n      dup3\n        /* \"TransferUSDCBasic.sol\":2496:2497  0 */\n      0x00\n        /* \"TransferUSDCBasic.sol\":2483:2498  tokenAmounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_71\n      jumpi\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"TransferUSDCBasic.sol\":2483:2512  tokenAmounts[0] = tokenAmount */\n      mstore\n        /* \"TransferUSDCBasic.sol\":2562:2856  Client.EVM2AnyMessage({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1174:1206   */\n      dup7\n      and\n        /* \"TransferUSDCBasic.sol\":2608:2629  abi.encode(_receiver) */\n      0xc0\n      dup3\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":2523:2559  Client.EVM2AnyMessage memory message */\n      0x00\n      swap1\n        /* \"TransferUSDCBasic.sol\":2562:2856  Client.EVM2AnyMessage({... */\n      dup1\n        /* \"#utility.yul\":1129:1147   */\n      0xe0\n      dup2\n      add\n        /* \"TransferUSDCBasic.sol\":2608:2629  abi.encode(_receiver) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"TransferUSDCBasic.sol\":2562:2856  Client.EVM2AnyMessage({... */\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TransferUSDCBasic.sol\":2679:2691  tokenAmounts */\n      dup5\n        /* \"TransferUSDCBasic.sol\":2562:2856  Client.EVM2AnyMessage({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TransferUSDCBasic.sol\":2835:2844  linkToken */\n      immutable(\"0x51af0b011a8186c01f00efb4bfb18f2c7a1b6da2f988a2541d85684767c6542e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":2562:2856  Client.EVM2AnyMessage({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TransferUSDCBasic.sol\":2716:2803  Client._argsToBytes(... */\n      tag_74\n        /* \"TransferUSDCBasic.sol\":2753:2789  Client.EVMExtraArgsV1({gasLimit: 0}) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"TransferUSDCBasic.sol\":2786:2787  0 */\n      0x00\n        /* \"TransferUSDCBasic.sol\":2753:2789  Client.EVMExtraArgsV1({gasLimit: 0}) */\n      dup2\n      mstore\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1395:1451  abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6230:6243   */\n      swap2\n      mload\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1395:1451  abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs) */\n      0x24\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":6212:6244   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1395:1451  abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs) */\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":6185:6203   */\n      0x44\n      swap1\n      swap3\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1395:1451  abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs) */\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x97a657c9)\n      or\n      swap1\n      mstore\n      swap1\n        /* \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":1286:1456  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {... */\n      jump\n        /* \"TransferUSDCBasic.sol\":2716:2803  Client._argsToBytes(... */\n    tag_74:\n        /* \"TransferUSDCBasic.sol\":2562:2856  Client.EVM2AnyMessage({... */\n      swap1\n      mstore\n        /* \"TransferUSDCBasic.sol\":2916:2940  destinationChainSelector */\n      sload(0x03)\n        /* \"TransferUSDCBasic.sol\":2885:2971  ccipRouter.getFee(... */\n      mload(0x40)\n      shl(0xe0, 0x20487ded)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":2523:2856  Client.EVM2AnyMessage memory message = Client.EVM2AnyMessage({... */\n      swap2\n      swap3\n      pop\n        /* \"TransferUSDCBasic.sol\":2867:2882  uint256 ccipFee */\n      0x00\n      swap2\n        /* \"TransferUSDCBasic.sol\":2885:2895  ccipRouter */\n      immutable(\"0xf44e26cb6192c7a70f026ebae4c4bdf0822fd8ec199501187afd94cd2c3c7097\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":2885:2902  ccipRouter.getFee */\n      and\n      swap2\n      0x20487ded\n      swap2\n        /* \"TransferUSDCBasic.sol\":2885:2971  ccipRouter.getFee(... */\n      tag_76\n      swap2\n      shl(0xa0, 0x01)\n        /* \"TransferUSDCBasic.sol\":2916:2940  destinationChainSelector */\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n        /* \"TransferUSDCBasic.sol\":2523:2856  Client.EVM2AnyMessage memory message = Client.EVM2AnyMessage({... */\n      dup7\n      swap1\n        /* \"TransferUSDCBasic.sol\":2885:2971  ccipRouter.getFee(... */\n      0x04\n      add\n      tag_77\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_80:\n        /* \"TransferUSDCBasic.sol\":2996:3030  linkToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":3024:3028  this */\n      address\n        /* \"TransferUSDCBasic.sol\":2996:3030  linkToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":2867:2971  uint256 ccipFee = ccipRouter.getFee(... */\n      swap1\n      swap2\n      pop\n        /* \"TransferUSDCBasic.sol\":2996:3005  linkToken */\n      immutable(\"0x51af0b011a8186c01f00efb4bfb18f2c7a1b6da2f988a2541d85684767c6542e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":2996:3015  linkToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1129:1147   */\n      0x24\n      add\n        /* \"TransferUSDCBasic.sol\":2996:3030  linkToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_84:\n        /* \"TransferUSDCBasic.sol\":2986:2993  ccipFee */\n      dup2\n        /* \"TransferUSDCBasic.sol\":2986:3030  ccipFee > linkToken.balanceOf(address(this)) */\n      gt\n        /* \"TransferUSDCBasic.sol\":2982:3119  if (ccipFee > linkToken.balanceOf(address(this)))... */\n      iszero\n      tag_85\n      jumpi\n        /* \"TransferUSDCBasic.sol\":3075:3109  linkToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":3103:3107  this */\n      address\n        /* \"TransferUSDCBasic.sol\":3075:3109  linkToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":3075:3084  linkToken */\n      immutable(\"0x51af0b011a8186c01f00efb4bfb18f2c7a1b6da2f988a2541d85684767c6542e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3075:3094  linkToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1129:1147   */\n      0x24\n      add\n        /* \"TransferUSDCBasic.sol\":3075:3109  linkToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_89:\n        /* \"TransferUSDCBasic.sol\":3051:3119  NotEnoughBalanceForFees(linkToken.balanceOf(address(this)), ccipFee) */\n      mload(0x40)\n      shl(0xe0, 0x28fdcaa1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":822:847   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":863:881   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":856:890   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":795:813   */\n      0x44\n      add\n        /* \"TransferUSDCBasic.sol\":3051:3119  NotEnoughBalanceForFees(linkToken.balanceOf(address(this)), ccipFee) */\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"TransferUSDCBasic.sol\":2982:3119  if (ccipFee > linkToken.balanceOf(address(this)))... */\n    tag_85:\n        /* \"TransferUSDCBasic.sol\":3129:3176  linkToken.approve(address(ccipRouter), ccipFee) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3155:3165  ccipRouter */\n      immutable(\"0xf44e26cb6192c7a70f026ebae4c4bdf0822fd8ec199501187afd94cd2c3c7097\")\n        /* \"#utility.yul\":2222:2254   */\n      dup2\n      and\n        /* \"TransferUSDCBasic.sol\":3129:3176  linkToken.approve(address(ccipRouter), ccipFee) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2204:2255   */\n      mstore\n        /* \"#utility.yul\":2271:2289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2264:2298   */\n      dup4\n      swap1\n      mstore\n        /* \"TransferUSDCBasic.sol\":3129:3138  linkToken */\n      immutable(\"0x51af0b011a8186c01f00efb4bfb18f2c7a1b6da2f988a2541d85684767c6542e\")\n        /* \"TransferUSDCBasic.sol\":3129:3146  linkToken.approve */\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":2177:2195   */\n      0x44\n      add\n        /* \"TransferUSDCBasic.sol\":3129:3176  linkToken.approve(address(ccipRouter), ccipFee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_94:\n      pop\n        /* \"TransferUSDCBasic.sol\":3201:3232  usdcToken.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":3221:3231  msg.sender */\n      caller\n        /* \"TransferUSDCBasic.sol\":3201:3232  usdcToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":3201:3210  usdcToken */\n      immutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3201:3220  usdcToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1129:1147   */\n      0x24\n      add\n        /* \"TransferUSDCBasic.sol\":3201:3232  usdcToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_98:\n        /* \"TransferUSDCBasic.sol\":3191:3198  _amount */\n      dup7\n        /* \"TransferUSDCBasic.sol\":3191:3232  _amount > usdcToken.balanceOf(msg.sender) */\n      gt\n        /* \"TransferUSDCBasic.sol\":3187:3317  if (_amount > usdcToken.balanceOf(msg.sender))... */\n      iszero\n      tag_99\n      jumpi\n        /* \"TransferUSDCBasic.sol\":3285:3316  usdcToken.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":3305:3315  msg.sender */\n      caller\n        /* \"TransferUSDCBasic.sol\":3285:3316  usdcToken.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1156:1207   */\n      mstore\n        /* \"TransferUSDCBasic.sol\":3285:3294  usdcToken */\n      immutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3285:3304  usdcToken.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1129:1147   */\n      0x24\n      add\n        /* \"TransferUSDCBasic.sol\":3285:3316  usdcToken.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_103:\n        /* \"TransferUSDCBasic.sol\":3253:3317  NotEnoughBalanceUsdcForTransfer(usdcToken.balanceOf(msg.sender)) */\n      mload(0x40)\n      shl(0xe0, 0x6212cf3b)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n        /* \"#utility.yul\":1364:1389   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1352:1354   */\n      0x20\n        /* \"#utility.yul\":1337:1355   */\n      add\n      swap1\n        /* \"#utility.yul\":1218:1395   */\n      jump\n        /* \"TransferUSDCBasic.sol\":3187:3317  if (_amount > usdcToken.balanceOf(msg.sender))... */\n    tag_99:\n        /* \"TransferUSDCBasic.sol\":3327:3389  usdcToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_105\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3327:3336  usdcToken */\n      immutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n        /* \"TransferUSDCBasic.sol\":3327:3353  usdcToken.safeTransferFrom */\n      and\n        /* \"TransferUSDCBasic.sol\":3354:3364  msg.sender */\n      caller\n        /* \"TransferUSDCBasic.sol\":3374:3378  this */\n      address\n        /* \"TransferUSDCBasic.sol\":3381:3388  _amount */\n      dup10\n        /* \"TransferUSDCBasic.sol\":3327:3353  usdcToken.safeTransferFrom */\n      tag_106\n        /* \"TransferUSDCBasic.sol\":3327:3389  usdcToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_105:\n        /* \"TransferUSDCBasic.sol\":3399:3446  usdcToken.approve(address(ccipRouter), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3425:3435  ccipRouter */\n      immutable(\"0xf44e26cb6192c7a70f026ebae4c4bdf0822fd8ec199501187afd94cd2c3c7097\")\n        /* \"#utility.yul\":2222:2254   */\n      dup2\n      and\n        /* \"TransferUSDCBasic.sol\":3399:3446  usdcToken.approve(address(ccipRouter), _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2204:2255   */\n      mstore\n        /* \"#utility.yul\":2271:2289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2264:2298   */\n      dup9\n      swap1\n      mstore\n        /* \"TransferUSDCBasic.sol\":3399:3408  usdcToken */\n      immutable(\"0xed5982c3d05e794784cff21558897eecbae249eb7518af5506bc91284dc3b788\")\n        /* \"TransferUSDCBasic.sol\":3399:3416  usdcToken.approve */\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":2177:2195   */\n      0x44\n      add\n        /* \"TransferUSDCBasic.sol\":3399:3446  usdcToken.approve(address(ccipRouter), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_110:\n      pop\n        /* \"TransferUSDCBasic.sol\":3518:3542  destinationChainSelector */\n      sload(0x03)\n        /* \"TransferUSDCBasic.sol\":3498:3552  ccipRouter.ccipSend(destinationChainSelector, message) */\n      mload(0x40)\n      shl(0xe0, 0x96f4e9f9)\n      dup2\n      mstore\n        /* \"TransferUSDCBasic.sol\":3498:3508  ccipRouter */\n      immutable(\"0xf44e26cb6192c7a70f026ebae4c4bdf0822fd8ec199501187afd94cd2c3c7097\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TransferUSDCBasic.sol\":3498:3517  ccipRouter.ccipSend */\n      and\n      swap2\n      0x96f4e9f9\n      swap2\n        /* \"TransferUSDCBasic.sol\":3498:3552  ccipRouter.ccipSend(destinationChainSelector, message) */\n      tag_111\n      swap2\n      shl(0xa0, 0x01)\n        /* \"TransferUSDCBasic.sol\":3518:3542  destinationChainSelector */\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n        /* \"TransferUSDCBasic.sol\":3544:3551  message */\n      dup7\n      swap1\n        /* \"TransferUSDCBasic.sol\":3498:3552  ccipRouter.ccipSend(destinationChainSelector, message) */\n      0x04\n      add\n      tag_77\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_114:\n        /* \"TransferUSDCBasic.sol\":3620:3644  destinationChainSelector */\n      sload(0x03)\n        /* \"TransferUSDCBasic.sol\":3568:3719  UsdcTransferred(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5746:5771   */\n      dup4\n      dup2\n      mstore\n      shl(0xa0, 0x01)\n        /* \"TransferUSDCBasic.sol\":3620:3644  destinationChainSelector */\n      swap1\n      swap3\n      div\n      0xffffffffffffffff\n      and\n        /* \"#utility.yul\":5802:5804   */\n      0x20\n        /* \"#utility.yul\":5787:5805   */\n      dup4\n      add\n        /* \"#utility.yul\":5780:5839   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5875:5907   */\n      dup11\n      and\n        /* \"#utility.yul\":5855:5873   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5848:5908   */\n      mstore\n        /* \"#utility.yul\":5939:5941   */\n      0x60\n        /* \"#utility.yul\":5924:5942   */\n      dup2\n      add\n        /* \"#utility.yul\":5917:5951   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":5982:5985   */\n      0x80\n        /* \"#utility.yul\":5967:5986   */\n      dup2\n      add\n        /* \"#utility.yul\":5960:5995   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5746:5771   */\n      swap1\n      swap6\n      pop\n        /* \"TransferUSDCBasic.sol\":3568:3719  UsdcTransferred(... */\n      0xb55a3d3f1ccd1c10f00aff03ad884028d98fa1d478fae03acecbf884ce8e8fbc\n      swap1\n        /* \"#utility.yul\":5733:5736   */\n      0xa0\n        /* \"#utility.yul\":5718:5737   */\n      add\n        /* \"TransferUSDCBasic.sol\":3568:3719  UsdcTransferred(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"TransferUSDCBasic.sol\":2221:3726  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"TransferUSDCBasic.sol\":2075:3726  function transferUsdcToSepolia(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":948:1165  function safeTransferFrom(... */\n    tag_106:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1091:1159  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6513:6528   */\n      dup6\n      dup2\n      and\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1091:1159  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6495:6529   */\n      mstore\n        /* \"#utility.yul\":6565:6580   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":6545:6563   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":6538:6581   */\n      mstore\n        /* \"#utility.yul\":6597:6615   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":6590:6624   */\n      dup6\n      swap1\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1091:1159  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":6430:6448   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1091:1159  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3914:3983  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      swap1\n      dup5\n      add\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1064:1160  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_45\n      swap3\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1084:1089  token */\n      dup8\n      swap3\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1091:1159  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap2\n      0x00\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3914:3983  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_127\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3914:3941  address(token).functionCall */\n      dup6\n      and\n      swap1\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":1091:1159  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup5\n      swap1\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3914:3941  address(token).functionCall */\n      tag_128\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3914:3983  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      jump\t// in\n    tag_127:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3993:4010  returndata.length */\n      dup1\n      mload\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3888:3983  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3993:4014  returndata.length > 0 */\n      iszero\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3989:4149  if (returndata.length > 0) {... */\n      tag_131\n      jumpi\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":4076:4086  returndata */\n      dup1\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":4065:4095  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_130:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":4057:4142  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6837:6839   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":4057:4142  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6819:6840   */\n      mstore\n        /* \"#utility.yul\":6876:6878   */\n      0x2a\n        /* \"#utility.yul\":6856:6874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6849:6879   */\n      mstore\n        /* \"#utility.yul\":6915:6949   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":6895:6913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6888:6950   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":6966:6984   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6959:6999   */\n      mstore\n        /* \"#utility.yul\":7016:7035   */\n      0x84\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":4057:4142  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_90\n        /* \"#utility.yul\":6635:7041   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":4057:4142  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n    tag_131:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3555:4153  {... */\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":3485:4153  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3695:3898  function functionCall(... */\n    tag_128:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3814:3826  bytes memory */\n      0x60\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3841:3893  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_135\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3863:3869  target */\n      dup5\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3871:3875  data */\n      dup5\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3877:3878  0 */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3880:3892  errorMessage */\n      dup6\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3841:3862  functionCallWithValue */\n      tag_136\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3841:3893  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_135:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3834:3893  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":3695:3898  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4704:5118  function functionCallWithValue(... */\n    tag_136:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4851:4863  bytes memory */\n      0x60\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4904:4909  value */\n      dup3\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4879:4900  address(this).balance */\n      selfbalance\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4879:4909  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4871:4952  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7248:7250   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4871:4952  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7230:7251   */\n      mstore\n        /* \"#utility.yul\":7287:7289   */\n      0x26\n        /* \"#utility.yul\":7267:7285   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7260:7290   */\n      mstore\n        /* \"#utility.yul\":7326:7360   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":7306:7324   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7299:7361   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":7377:7395   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7370:7406   */\n      mstore\n        /* \"#utility.yul\":7423:7442   */\n      0x84\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4871:4952  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_90\n        /* \"#utility.yul\":7046:7448   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4871:4952  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_138:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4959:4971  bool success */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4973:4996  bytes memory returndata */\n      dup1\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5000:5006  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5000:5011  target.call */\n      and\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5019:5024  value */\n      dup6\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5026:5030  data */\n      dup8\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5000:5031  target.call{value: value}(data) */\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_145\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_144)\n    tag_145:\n      0x60\n      swap2\n      pop\n    tag_144:\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4958:5031  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5044:5113  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_146\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5071:5077  target */\n      dup8\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5079:5086  success */\n      dup4\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5088:5098  returndata */\n      dup4\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5100:5112  errorMessage */\n      dup8\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5044:5070  verifyCallResultFromTarget */\n      tag_147\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5044:5113  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_146:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":5037:5113  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":4704:5118  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7048:7596  function verifyCallResultFromTarget(... */\n    tag_147:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7210:7222  bytes memory */\n      0x60\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7230:7592  if (success) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7255:7265  returndata */\n      dup3\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7255:7272  returndata.length */\n      mload\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7276:7277  0 */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7255:7277  returndata.length == 0 */\n      sub\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7251:7507  if (returndata.length == 0) {... */\n      tag_153\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":1395:1414  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7438:7498  require(isContract(target), \"Address: call to non-contract\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7947:7949   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7438:7498  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7929:7950   */\n      mstore\n        /* \"#utility.yul\":7986:7988   */\n      0x1d\n        /* \"#utility.yul\":7966:7984   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7959:7989   */\n      mstore\n        /* \"#utility.yul\":8025:8056   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":8005:8023   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7998:8057   */\n      mstore\n        /* \"#utility.yul\":8074:8092   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7438:7498  require(isContract(target), \"Address: call to non-contract\") */\n      tag_90\n        /* \"#utility.yul\":7745:8098   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7438:7498  require(isContract(target), \"Address: call to non-contract\") */\n    tag_153:\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7521:7531  returndata */\n      dup2\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7514:7531  return returndata */\n      jump(tag_135)\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7230:7592  if (success) {... */\n    tag_149:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7552:7585  _revert(returndata, errorMessage) */\n      tag_135\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7560:7570  returndata */\n      dup4\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":7572:7584  errorMessage */\n      dup4\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8213:8230  returndata.length */\n      dup2\n      mload\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8213:8234  returndata.length > 0 */\n      iszero\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8209:8534  if (returndata.length > 0) {... */\n      tag_161\n      jumpi\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8415:8425  returndata */\n      dup2\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8409:8426  mload(returndata) */\n      mload\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8463:8478  returndata_size */\n      dup1\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8450:8460  returndata */\n      dup4\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8446:8448  32 */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8442:8461  add(32, returndata) */\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8435:8479  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8209:8534  if (returndata.length > 0) {... */\n    tag_161:\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8514:8526  errorMessage */\n      dup1\n        /* \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":8507:8527  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_165:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_171:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:452   */\n    tag_10:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_173:\n        /* \"#utility.yul\":360:389   */\n      tag_174\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_165\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":350:389   */\n      swap2\n      pop\n        /* \"#utility.yul\":408:446   */\n      tag_175\n        /* \"#utility.yul\":442:444   */\n      0x20\n        /* \"#utility.yul\":431:440   */\n      dup5\n        /* \"#utility.yul\":427:445   */\n      add\n        /* \"#utility.yul\":408:446   */\n      tag_165\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":398:446   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:452   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":457:643   */\n    tag_14:\n        /* \"#utility.yul\":516:522   */\n      0x00\n        /* \"#utility.yul\":569:571   */\n      0x20\n        /* \"#utility.yul\":557:566   */\n      dup3\n        /* \"#utility.yul\":548:555   */\n      dup5\n        /* \"#utility.yul\":544:567   */\n      sub\n        /* \"#utility.yul\":540:572   */\n      slt\n        /* \"#utility.yul\":537:589   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":585:586   */\n      0x00\n        /* \"#utility.yul\":582:583   */\n      dup1\n        /* \"#utility.yul\":575:587   */\n      revert\n        /* \"#utility.yul\":537:589   */\n    tag_177:\n        /* \"#utility.yul\":608:637   */\n      tag_178\n        /* \"#utility.yul\":627:636   */\n      dup3\n        /* \"#utility.yul\":608:637   */\n      tag_165\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":598:637   */\n      swap4\n        /* \"#utility.yul\":457:643   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1400:1654   */\n    tag_28:\n        /* \"#utility.yul\":1468:1474   */\n      0x00\n        /* \"#utility.yul\":1476:1482   */\n      dup1\n        /* \"#utility.yul\":1529:1531   */\n      0x40\n        /* \"#utility.yul\":1517:1526   */\n      dup4\n        /* \"#utility.yul\":1508:1515   */\n      dup6\n        /* \"#utility.yul\":1504:1527   */\n      sub\n        /* \"#utility.yul\":1500:1532   */\n      slt\n        /* \"#utility.yul\":1497:1549   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":1545:1546   */\n      0x00\n        /* \"#utility.yul\":1542:1543   */\n      dup1\n        /* \"#utility.yul\":1535:1547   */\n      revert\n        /* \"#utility.yul\":1497:1549   */\n    tag_184:\n        /* \"#utility.yul\":1568:1597   */\n      tag_185\n        /* \"#utility.yul\":1587:1596   */\n      dup4\n        /* \"#utility.yul\":1568:1597   */\n      tag_165\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1558:1597   */\n      swap5\n        /* \"#utility.yul\":1644:1646   */\n      0x20\n        /* \"#utility.yul\":1629:1647   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1616:1648   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1400:1654   */\n      jump\t// out\n        /* \"#utility.yul\":1841:2025   */\n    tag_39:\n        /* \"#utility.yul\":1911:1917   */\n      0x00\n        /* \"#utility.yul\":1964:1966   */\n      0x20\n        /* \"#utility.yul\":1952:1961   */\n      dup3\n        /* \"#utility.yul\":1943:1950   */\n      dup5\n        /* \"#utility.yul\":1939:1962   */\n      sub\n        /* \"#utility.yul\":1935:1967   */\n      slt\n        /* \"#utility.yul\":1932:1984   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1980:1981   */\n      0x00\n        /* \"#utility.yul\":1977:1978   */\n      dup1\n        /* \"#utility.yul\":1970:1982   */\n      revert\n        /* \"#utility.yul\":1932:1984   */\n    tag_188:\n      pop\n        /* \"#utility.yul\":2003:2019   */\n      mload\n      swap2\n        /* \"#utility.yul\":1841:2025   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2586   */\n    tag_46:\n        /* \"#utility.yul\":2376:2382   */\n      0x00\n        /* \"#utility.yul\":2429:2431   */\n      0x20\n        /* \"#utility.yul\":2417:2426   */\n      dup3\n        /* \"#utility.yul\":2408:2415   */\n      dup5\n        /* \"#utility.yul\":2404:2427   */\n      sub\n        /* \"#utility.yul\":2400:2432   */\n      slt\n        /* \"#utility.yul\":2397:2449   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2445:2446   */\n      0x00\n        /* \"#utility.yul\":2442:2443   */\n      dup1\n        /* \"#utility.yul\":2435:2447   */\n      revert\n        /* \"#utility.yul\":2397:2449   */\n    tag_191:\n        /* \"#utility.yul\":2477:2486   */\n      dup2\n        /* \"#utility.yul\":2471:2487   */\n      mload\n        /* \"#utility.yul\":2530:2535   */\n      dup1\n        /* \"#utility.yul\":2523:2536   */\n      iszero\n        /* \"#utility.yul\":2516:2537   */\n      iszero\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2538   */\n      eq\n        /* \"#utility.yul\":2496:2556   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":2552:2553   */\n      0x00\n        /* \"#utility.yul\":2549:2550   */\n      dup1\n        /* \"#utility.yul\":2542:2554   */\n      revert\n        /* \"#utility.yul\":3032:3159   */\n    tag_72:\n        /* \"#utility.yul\":3093:3103   */\n      0x4e487b71\n        /* \"#utility.yul\":3088:3091   */\n      0xe0\n        /* \"#utility.yul\":3084:3104   */\n      shl\n        /* \"#utility.yul\":3081:3082   */\n      0x00\n        /* \"#utility.yul\":3074:3105   */\n      mstore\n        /* \"#utility.yul\":3124:3128   */\n      0x32\n        /* \"#utility.yul\":3121:3122   */\n      0x04\n        /* \"#utility.yul\":3114:3129   */\n      mstore\n        /* \"#utility.yul\":3148:3152   */\n      0x24\n        /* \"#utility.yul\":3145:3146   */\n      0x00\n        /* \"#utility.yul\":3138:3153   */\n      revert\n        /* \"#utility.yul\":3164:3414   */\n    tag_167:\n        /* \"#utility.yul\":3249:3250   */\n      0x00\n        /* \"#utility.yul\":3259:3372   */\n    tag_197:\n        /* \"#utility.yul\":3273:3279   */\n      dup4\n        /* \"#utility.yul\":3270:3271   */\n      dup2\n        /* \"#utility.yul\":3267:3280   */\n      lt\n        /* \"#utility.yul\":3259:3372   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3349:3360   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3343:3361   */\n      mload\n        /* \"#utility.yul\":3330:3341   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3323:3362   */\n      mstore\n        /* \"#utility.yul\":3295:3297   */\n      0x20\n        /* \"#utility.yul\":3288:3298   */\n      add\n        /* \"#utility.yul\":3259:3372   */\n      jump(tag_197)\n    tag_199:\n      pop\n      pop\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3388:3404   */\n      swap2\n      add\n        /* \"#utility.yul\":3381:3408   */\n      mstore\n        /* \"#utility.yul\":3164:3414   */\n      jump\t// out\n        /* \"#utility.yul\":3419:3689   */\n    tag_168:\n        /* \"#utility.yul\":3460:3463   */\n      0x00\n        /* \"#utility.yul\":3498:3503   */\n      dup2\n        /* \"#utility.yul\":3492:3504   */\n      mload\n        /* \"#utility.yul\":3525:3531   */\n      dup1\n        /* \"#utility.yul\":3520:3523   */\n      dup5\n        /* \"#utility.yul\":3513:3532   */\n      mstore\n        /* \"#utility.yul\":3541:3617   */\n      tag_201\n        /* \"#utility.yul\":3610:3616   */\n      dup2\n        /* \"#utility.yul\":3603:3607   */\n      0x20\n        /* \"#utility.yul\":3598:3601   */\n      dup7\n        /* \"#utility.yul\":3594:3608   */\n      add\n        /* \"#utility.yul\":3587:3591   */\n      0x20\n        /* \"#utility.yul\":3580:3585   */\n      dup7\n        /* \"#utility.yul\":3576:3592   */\n      add\n        /* \"#utility.yul\":3541:3617   */\n      tag_167\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3671:3673   */\n      0x1f\n        /* \"#utility.yul\":3650:3665   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3646:3675   */\n      and\n        /* \"#utility.yul\":3637:3676   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3678:3682   */\n      0x20\n        /* \"#utility.yul\":3633:3683   */\n      add\n      swap3\n        /* \"#utility.yul\":3419:3689   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3694:5295   */\n    tag_77:\n        /* \"#utility.yul\":3872:3876   */\n      0x00\n        /* \"#utility.yul\":3901:3903   */\n      0x40\n        /* \"#utility.yul\":3942:3960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3934:3940   */\n      dup6\n        /* \"#utility.yul\":3930:3961   */\n      and\n        /* \"#utility.yul\":3919:3928   */\n      dup4\n        /* \"#utility.yul\":3912:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"#utility.yul\":4019:4021   */\n      dup2\n        /* \"#utility.yul\":4014:4016   */\n      dup2\n        /* \"#utility.yul\":4003:4012   */\n      dup6\n        /* \"#utility.yul\":3999:4017   */\n      add\n        /* \"#utility.yul\":3992:4022   */\n      mstore\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4051:4064   */\n      mload\n        /* \"#utility.yul\":4100:4104   */\n      0xa0\n        /* \"#utility.yul\":4095:4097   */\n      dup4\n        /* \"#utility.yul\":4084:4093   */\n      dup7\n        /* \"#utility.yul\":4080:4098   */\n      add\n        /* \"#utility.yul\":4073:4105   */\n      mstore\n        /* \"#utility.yul\":4128:4179   */\n      tag_203\n        /* \"#utility.yul\":4174:4177   */\n      0xe0\n        /* \"#utility.yul\":4163:4172   */\n      dup7\n        /* \"#utility.yul\":4159:4178   */\n      add\n        /* \"#utility.yul\":4145:4157   */\n      dup3\n        /* \"#utility.yul\":4128:4179   */\n      tag_168\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4114:4179   */\n      swap1\n      pop\n        /* \"#utility.yul\":4228:4230   */\n      dup2\n        /* \"#utility.yul\":4220:4226   */\n      dup7\n        /* \"#utility.yul\":4216:4231   */\n      add\n        /* \"#utility.yul\":4210:4232   */\n      mload\n        /* \"#utility.yul\":4255:4257   */\n      0x3f\n        /* \"#utility.yul\":4251:4258   */\n      not\n        /* \"#utility.yul\":4322:4324   */\n      dup1\n        /* \"#utility.yul\":4310:4319   */\n      dup8\n        /* \"#utility.yul\":4302:4308   */\n      dup5\n        /* \"#utility.yul\":4298:4320   */\n      sub\n        /* \"#utility.yul\":4294:4325   */\n      add\n        /* \"#utility.yul\":4289:4291   */\n      0x60\n        /* \"#utility.yul\":4278:4287   */\n      dup9\n        /* \"#utility.yul\":4274:4292   */\n      add\n        /* \"#utility.yul\":4267:4326   */\n      mstore\n        /* \"#utility.yul\":4349:4389   */\n      tag_204\n        /* \"#utility.yul\":4382:4388   */\n      dup4\n        /* \"#utility.yul\":4366:4380   */\n      dup4\n        /* \"#utility.yul\":4349:4389   */\n      tag_168\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4426:4441   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":4420:4442   */\n      mload\n        /* \"#utility.yul\":4483:4505   */\n      dup9\n      dup3\n      sub\n        /* \"#utility.yul\":4479:4510   */\n      dup4\n      add\n        /* \"#utility.yul\":4473:4476   */\n      0x80\n        /* \"#utility.yul\":4458:4477   */\n      dup11\n      add\n        /* \"#utility.yul\":4451:4511   */\n      mstore\n        /* \"#utility.yul\":4560:4581   */\n      dup1\n      mload\n        /* \"#utility.yul\":4590:4612   */\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":4666:4689   */\n      swap1\n      dup7\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n      swap4\n      pop\n        /* \"#utility.yul\":4628:4643   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4717:4997   */\n    tag_205:\n        /* \"#utility.yul\":4731:4737   */\n      dup1\n        /* \"#utility.yul\":4728:4729   */\n      dup5\n        /* \"#utility.yul\":4725:4738   */\n      lt\n        /* \"#utility.yul\":4717:4997   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":4790:4803   */\n      dup5\n      mload\n        /* \"#utility.yul\":4832:4841   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4828:4863   */\n      and\n        /* \"#utility.yul\":4816:4864   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4904:4915   */\n      dup7\n      add\n        /* \"#utility.yul\":4898:4916   */\n      mload\n        /* \"#utility.yul\":4884:4896   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":4877:4917   */\n      mstore\n        /* \"#utility.yul\":4972:4987   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":4860:4861   */\n      0x01\n        /* \"#utility.yul\":4746:4755   */\n      swap4\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":4937:4949   */\n      swap1\n      dup7\n      add\n      swap1\n        /* \"#utility.yul\":4717:4997   */\n      jump(tag_205)\n    tag_207:\n      pop\n        /* \"#utility.yul\":5046:5048   */\n      0x60\n        /* \"#utility.yul\":5034:5049   */\n      dup10\n      add\n        /* \"#utility.yul\":5028:5050   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":967:998   */\n      and\n        /* \"#utility.yul\":5109:5113   */\n      0xa0\n        /* \"#utility.yul\":5094:5114   */\n      dup10\n      add\n        /* \"#utility.yul\":955:999   */\n      mstore\n        /* \"#utility.yul\":5164:5167   */\n      0x80\n        /* \"#utility.yul\":5152:5168   */\n      dup10\n      add\n        /* \"#utility.yul\":5146:5169   */\n      mload\n        /* \"#utility.yul\":5210:5229   */\n      dup9\n      dup3\n      sub\n        /* \"#utility.yul\":5206:5234   */\n      dup4\n      add\n        /* \"#utility.yul\":5200:5203   */\n      0xc0\n        /* \"#utility.yul\":5185:5204   */\n      dup11\n      add\n        /* \"#utility.yul\":5178:5235   */\n      mstore\n        /* \"#utility.yul\":5146:5169   */\n      swap6\n      pop\n        /* \"#utility.yul\":5252:5289   */\n      tag_209\n        /* \"#utility.yul\":5214:5217   */\n      dup2\n        /* \"#utility.yul\":5146:5169   */\n      dup8\n        /* \"#utility.yul\":5252:5289   */\n      tag_168\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5244:5289   */\n      swap11\n        /* \"#utility.yul\":3694:5295   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7453:7740   */\n    tag_142:\n        /* \"#utility.yul\":7582:7585   */\n      0x00\n        /* \"#utility.yul\":7620:7626   */\n      dup3\n        /* \"#utility.yul\":7614:7627   */\n      mload\n        /* \"#utility.yul\":7636:7702   */\n      tag_218\n        /* \"#utility.yul\":7695:7701   */\n      dup2\n        /* \"#utility.yul\":7690:7693   */\n      dup5\n        /* \"#utility.yul\":7683:7687   */\n      0x20\n        /* \"#utility.yul\":7675:7681   */\n      dup8\n        /* \"#utility.yul\":7671:7688   */\n      add\n        /* \"#utility.yul\":7636:7702   */\n      tag_167\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7718:7734   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":7453:7740   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8103:8322   */\n    tag_164:\n        /* \"#utility.yul\":8252:8254   */\n      0x20\n        /* \"#utility.yul\":8241:8250   */\n      dup2\n        /* \"#utility.yul\":8234:8255   */\n      mstore\n        /* \"#utility.yul\":8215:8219   */\n      0x00\n        /* \"#utility.yul\":8272:8316   */\n      tag_178\n        /* \"#utility.yul\":8312:8314   */\n      0x20\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8289:8295   */\n      dup5\n        /* \"#utility.yul\":8272:8316   */\n      tag_168\n      jump\t// in\n\n    auxdata: 0xa26469706673582212207144d716101e2cbe9484aa00a67484e9ec19179f05eed314cd704e43da03962964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_934": {
									"entryPoint": null,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60e0604052600180546001600160a01b031990811673f694e193200268f9a4868e4aa017a0118c9a81771790915560028054909116730b9d5d9136855f6fec3c0993fee6e9ce8a297846179055600380547bde41ba4fc9d91ad95425890298aed601595a70ab815c96711a31bc656001600160e01b031990911617905534801561008857600080fd5b50600080546001600160a01b031916331790556001546001600160a01b03908116608052600254811660a0526003541660c05260805160a05160c05161103c610145600039600081816102c1015281816103530152818161041d015281816107f50152818161088401528181610920015261098e015260008181610234015281816104c201528181610601015281816106900152610772015260008181610559015281816107430152818161095f0152610a0e015261103c6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633aeac4e11461005c5780636392a51f146100715780638da5cb5b1461009e578063ed3bd5bc146100c9578063fe2c5d36146100df575b600080fd5b61006f61006a366004610ddd565b6100f2565b005b61008461007f366004610e10565b610210565b604080519283526020830191909152015b60405180910390f35b6000546100b1906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b6100d1610335565b604051908152602001610095565b6100d16100ed366004610e32565b6103cb565b6000546001600160a01b0316331461010957600080fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101749190610e5c565b90508060000361019757604051630686827b60e51b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af11580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a9190610e75565b50505050565b6040516370a0823160e01b81526001600160a01b03828116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f9190610e5c565b6040516370a0823160e01b81526001600160a01b0385811660048301529193507f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa15801561030a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032e9190610e5c565b9050915091565b604051636eb1769f60e11b81523360048201523060248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c69190610e5c565b905090565b604080516001808252818301909252600091829190816020015b60408051808201909152600080825260208201528152602001906001900390816103e5579050509050600060405180604001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001858152509050808260008151811061046457610464610e97565b60209081029190910101526040805160a081019091526001600160a01b03861660c08201526000908060e0810160405160208183030381529060405281526020016040518060200160405280600081525081526020018481526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316815260200161053f6040518060200160405280600081525060408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b90526003546040516320487ded60e01b81529192506000917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916320487ded916105a891600160a01b900467ffffffffffffffff16908690600401610efd565b602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190610e5c565b6040516370a0823160e01b81523060048201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106749190610e5c565b81111561072c576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107039190610e5c565b6040516328fdcaa160e01b81526004810191909152602481018290526044015b60405180910390fd5b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156107bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107df9190610e75565b506040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610844573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108689190610e5c565b861115610913576040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190610e5c565b604051636212cf3b60e01b815260040161072391815260200190565b6109486001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333089610b17565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018890527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb9190610e75565b506003546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916396f4e9f991610a5d91600160a01b900467ffffffffffffffff16908690600401610efd565b6020604051808303816000875af1158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa09190610e5c565b60035460408051838152600160a01b90920467ffffffffffffffff1660208301526001600160a01b038a169082015260608101889052608081018390529095507fb55a3d3f1ccd1c10f00aff03ad884028d98fa1d478fae03acecbf884ce8e8fbc9060a00160405180910390a15050505092915050565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261020a92879291600091610baf918516908490610c31565b805190915015610c2c5780806020019051810190610bcd9190610e75565b610c2c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610723565b505050565b6060610c408484600085610c48565b949350505050565b606082471015610ca95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610723565b600080866001600160a01b03168587604051610cc59190610fd7565b60006040518083038185875af1925050503d8060008114610d02576040519150601f19603f3d011682016040523d82523d6000602084013e610d07565b606091505b5091509150610d1887838387610d23565b979650505050505050565b60608315610d92578251600003610d8b576001600160a01b0385163b610d8b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610723565b5081610c40565b610c408383815115610da75781518083602001fd5b8060405162461bcd60e51b81526004016107239190610ff3565b80356001600160a01b0381168114610dd857600080fd5b919050565b60008060408385031215610df057600080fd5b610df983610dc1565b9150610e0760208401610dc1565b90509250929050565b600060208284031215610e2257600080fd5b610e2b82610dc1565b9392505050565b60008060408385031215610e4557600080fd5b610e4e83610dc1565b946020939093013593505050565b600060208284031215610e6e57600080fd5b5051919050565b600060208284031215610e8757600080fd5b81518015158114610e2b57600080fd5b634e487b7160e01b600052603260045260246000fd5b60005b83811015610ec8578181015183820152602001610eb0565b50506000910152565b60008151808452610ee9816020860160208601610ead565b601f01601f19169290920160200192915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152610f2a60e0860182610ed1565b905081860151603f1980878403016060880152610f478383610ed1565b88860151888203830160808a01528051808352908601945060009350908501905b80841015610f9a57845180516001600160a01b0316835286015186830152938501936001939093019290860190610f68565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550610fc98187610ed1565b9a9950505050505050505050565b60008251610fe9818460208701610ead565b9190910192915050565b602081526000610e2b6020830184610ed156fea26469706673582212207144d716101e2cbe9484aa00a67484e9ec19179f05eed314cd704e43da03962964736f6c63430008130033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xF694E193200268F9A4868E4AA017A0118C9A8177 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xB9D5D9136855F6FEC3C0993FEE6E9CE8A297846 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH28 0xDE41BA4FC9D91AD95425890298AED601595A70AB815C96711A31BC65 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x2 SLOAD DUP2 AND PUSH1 0xA0 MSTORE PUSH1 0x3 SLOAD AND PUSH1 0xC0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x103C PUSH2 0x145 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2C1 ADD MSTORE DUP2 DUP2 PUSH2 0x353 ADD MSTORE DUP2 DUP2 PUSH2 0x41D ADD MSTORE DUP2 DUP2 PUSH2 0x7F5 ADD MSTORE DUP2 DUP2 PUSH2 0x884 ADD MSTORE DUP2 DUP2 PUSH2 0x920 ADD MSTORE PUSH2 0x98E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x234 ADD MSTORE DUP2 DUP2 PUSH2 0x4C2 ADD MSTORE DUP2 DUP2 PUSH2 0x601 ADD MSTORE DUP2 DUP2 PUSH2 0x690 ADD MSTORE PUSH2 0x772 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x559 ADD MSTORE DUP2 DUP2 PUSH2 0x743 ADD MSTORE DUP2 DUP2 PUSH2 0x95F ADD MSTORE PUSH2 0xA0E ADD MSTORE PUSH2 0x103C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AEAC4E1 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6392A51F EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xED3BD5BC EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xFE2C5D36 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP4 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E5 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH2 0x464 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP1 PUSH1 0xE0 DUP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53F PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD SWAP2 MLOAD PUSH1 0x24 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x97A657C9 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20487DED SWAP2 PUSH2 0x5A8 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x650 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x703 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x28FDCAA1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x844 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6212CF3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x948 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x96F4E9F9 SWAP2 PUSH2 0xA5D SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP6 POP PUSH32 0xB55A3D3F1CCD1C10F00AFF03AD884028D98FA1D478FAE03ACECBF884CE8E8FBC SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0x20A SWAP3 DUP8 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xBAF SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0xC31 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC2C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x723 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC40 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xC48 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x723 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xCC5 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD18 DUP8 DUP4 DUP4 DUP8 PUSH2 0xD23 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xD92 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xD8B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xD8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x723 JUMP JUMPDEST POP DUP2 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0xC40 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0xDA7 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF9 DUP4 PUSH2 0xDC1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 PUSH1 0x20 DUP5 ADD PUSH2 0xDC1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2B DUP3 PUSH2 0xDC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4E DUP4 PUSH2 0xDC1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xEE9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0xA0 DUP4 DUP7 ADD MSTORE PUSH2 0xF2A PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP DUP2 DUP7 ADD MLOAD PUSH1 0x3F NOT DUP1 DUP8 DUP5 SUB ADD PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0xF47 DUP4 DUP4 PUSH2 0xED1 JUMP JUMPDEST DUP9 DUP7 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0x80 DUP11 ADD MSTORE DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 DUP7 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 DUP6 ADD SWAP1 JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0xF9A JUMPI DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP7 ADD MLOAD DUP7 DUP4 ADD MSTORE SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST POP PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0xC0 DUP11 ADD MSTORE SWAP6 POP PUSH2 0xFC9 DUP2 DUP8 PUSH2 0xED1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xFE9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE2B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x44D716101E2CBE9484AA00A67484E9EC1917 SWAP16 SDIV 0xEE 0xD3 EQ 0xCD PUSH17 0x4E43DA03962964736F6C63430008130033 ",
							"sourceMap": "700:3772:6:-:0;;;1188:70;;;-1:-1:-1;;;;;;1188:70:6;;;1216:42;1188:70;;;;1340:64;;;;;;1362:42;1340:64;;;1487;;;1645:54;-1:-1:-1;;;;;;1645:54:6;;;;;;1883:186;;;;;;;;;-1:-1:-1;1907:5:6;:18;;-1:-1:-1;;;;;;1907:18:6;1915:10;1907:18;;;;1962:17;-1:-1:-1;;;;;1962:17:6;;;1935:45;;2009:11;;;;1990:31;;2050:11;;;2031:31;;700:3772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_argsToBytes_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_callOptionalReturn_514": {
									"entryPoint": null,
									"id": 514,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_844": {
									"entryPoint": null,
									"id": 844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowanceUsdc_1114": {
									"entryPoint": 821,
									"id": 1114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balancesOf_1140": {
									"entryPoint": 528,
									"id": 1140,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@functionCallWithValue_669": {
									"entryPoint": 3144,
									"id": 669,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_605": {
									"entryPoint": 3121,
									"id": 605,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_533": {
									"entryPoint": null,
									"id": 533,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_292": {
									"entryPoint": 2839,
									"id": 292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferUsdcToSepolia_1096": {
									"entryPoint": 971,
									"id": 1096,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_800": {
									"entryPoint": 3363,
									"id": 800,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawToken_1188": {
									"entryPoint": 242,
									"id": 1188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bytes": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint64_t_address_t_uint256_t_uint256__to_t_bytes32_t_uint64_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_EVMExtraArgsV1_$81_memory_ptr__to_t_struct$_EVMExtraArgsV1_$81_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_struct$_EVM2AnyMessage_$75_memory_ptr__to_t_uint64_t_struct$_EVM2AnyMessage_$75_memory_ptr__fromStack_reversed": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8324:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:7"
															},
															"nodeType": "YulIf",
															"src": "289:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "431:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "442:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "427:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "427:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "408:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:7",
														"type": ""
													}
												],
												"src": "192:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "582:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "585:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "575:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "575:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "575:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "548:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "557:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "569:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "540:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:32:7"
															},
															"nodeType": "YulIf",
															"src": "537:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "598:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "627:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "608:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "493:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "504:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "516:6:7",
														"type": ""
													}
												],
												"src": "457:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "777:119:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "787:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "799:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "810:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "787:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "829:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "840:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "822:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "867:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "878:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "863:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "863:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "856:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "738:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "757:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "768:4:7",
														"type": ""
													}
												],
												"src": "648:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "945:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "962:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "971:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "986:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "991:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "982:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "982:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "995:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "978:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "978:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "967:31:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "955:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "955:44:7"
														}
													]
												},
												"name": "abi_encode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "929:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "936:3:7",
														"type": ""
													}
												],
												"src": "901:104:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1121:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1133:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1129:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1121:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1178:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1194:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1199:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1190:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1190:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1203:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1186:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1186:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1174:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1174:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1156:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1080:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1102:4:7",
														"type": ""
													}
												],
												"src": "1010:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1319:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1329:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1341:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1337:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1329:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1371:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1382:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1364:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1364:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1288:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1299:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1310:4:7",
														"type": ""
													}
												],
												"src": "1218:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1487:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1533:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1542:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1535:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1535:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1535:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1508:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1504:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:32:7"
															},
															"nodeType": "YulIf",
															"src": "1497:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1558:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1587:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1568:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1558:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1606:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1633:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1644:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1629:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1616:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1445:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1456:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1468:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1476:6:7",
														"type": ""
													}
												],
												"src": "1400:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1760:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1770:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1782:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1793:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1778:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1770:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1812:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1729:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1740:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1751:4:7",
														"type": ""
													}
												],
												"src": "1659:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1922:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1968:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1977:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1980:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1970:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1970:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:32:7"
															},
															"nodeType": "YulIf",
															"src": "1932:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1993:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2009:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2003:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2003:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1888:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1899:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1911:6:7",
														"type": ""
													}
												],
												"src": "1841:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2181:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2192:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2169:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2211:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2242:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2247:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2238:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2238:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2251:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2234:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2222:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2222:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2275:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2286:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2271:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2291:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2120:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2131:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2139:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2150:4:7",
														"type": ""
													}
												],
												"src": "2030:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2387:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2433:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2442:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2445:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2435:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2408:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2417:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2429:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:32:7"
															},
															"nodeType": "YulIf",
															"src": "2397:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2458:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2477:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2471:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2462:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2540:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2549:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2542:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2542:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2542:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2530:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2523:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2523:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2516:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:40:7"
															},
															"nodeType": "YulIf",
															"src": "2496:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2565:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2575:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2353:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2364:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2376:6:7",
														"type": ""
													}
												],
												"src": "2309:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2720:175:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2730:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2742:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2730:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2765:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2788:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2775:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2769:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2810:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2825:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2833:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2803:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2803:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2857:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2868:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2885:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2873:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2873:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2846:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2846:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2681:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2692:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2700:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2711:4:7",
														"type": ""
													}
												],
												"src": "2591:304:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2932:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2949:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2956:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2961:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2942:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2942:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2989:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2982:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3013:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3016:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3006:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2900:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3064:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3081:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3088:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3093:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3084:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3084:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3074:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3074:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3121:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3124:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3145:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3148:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3138:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3032:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3230:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3240:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3249:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3244:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3309:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3334:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3339:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3330:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3330:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3353:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3358:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3349:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3349:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3343:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3343:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3323:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3323:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3323:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3270:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3273:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3267:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3281:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3283:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3292:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3295:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3288:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3283:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3263:3:7",
																"statements": []
															},
															"src": "3259:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3392:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3397:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3381:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3208:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3213:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3218:6:7",
														"type": ""
													}
												],
												"src": "3164:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3468:221:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3498:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3492:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:12:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3482:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3520:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3525:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3513:19:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3580:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3587:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3576:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3576:16:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3598:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3603:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3594:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:14:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3610:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3541:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:76:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:76:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3626:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3641:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3654:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3662:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3650:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3650:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3671:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3667:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3667:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3646:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3646:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:39:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3678:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3626:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3445:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3452:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3460:3:7",
														"type": ""
													}
												],
												"src": "3419:270:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3881:1414:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3891:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3901:2:7",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3895:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3919:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3934:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3942:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3930:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3930:31:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3912:50:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3971:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3981:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3975:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4014:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:18:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4019:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3992:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3992:30:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4031:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4057:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4051:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:13:7"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "4035:12:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4084:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4095:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4080:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4080:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4100:4:7",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4073:32:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4114:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:12:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4163:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4174:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4159:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4159:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4128:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:51:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4118:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4188:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4228:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4216:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4216:15:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:22:7"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "4192:14:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4241:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:2:7",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4251:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4245:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4278:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4289:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4274:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tail_1",
																						"nodeType": "YulIdentifier",
																						"src": "4302:6:7"
																					},
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4310:9:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4298:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4298:22:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4322:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4294:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4294:31:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4267:59:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:54:7",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "4366:14:7"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4382:6:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4349:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:40:7"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4398:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4430:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4438:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4426:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:15:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4420:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:22:7"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "4402:14:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4462:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4473:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4458:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tail_2",
																						"nodeType": "YulIdentifier",
																						"src": "4487:6:7"
																					},
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4495:9:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4483:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4483:22:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4507:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4479:31:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4451:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4451:60:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4520:17:7",
															"value": {
																"name": "tail_2",
																"nodeType": "YulIdentifier",
																"src": "4531:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4524:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4546:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "4566:14:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4560:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4560:21:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4550:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "4597:6:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4605:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4590:22:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4621:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4640:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:15:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4652:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "4670:14:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4686:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4666:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:23:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4656:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4698:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4707:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4702:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4766:231:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4780:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4796:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4790:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4790:13:7"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "4784:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4823:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "4838:2:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4832:5:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4832:9:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4851:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4856:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4847:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4847:11:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4860:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4843:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4843:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4828:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4828:35:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4816:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4816:48:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4816:48:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "4888:3:7"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "4893:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4884:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4884:12:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "4908:2:7"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "4912:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4904:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4904:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4898:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4898:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4877:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:40:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:40:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4930:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4941:3:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4946:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4937:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4937:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4930:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4962:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4976:6:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4984:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4972:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4972:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4962:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4728:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4731:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4725:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4739:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4741:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4750:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4753:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4746:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4746:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4741:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4721:3:7",
																"statements": []
															},
															"src": "4717:280:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5006:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5038:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5046:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5034:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5034:15:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5028:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:22:7"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "5010:14:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "5078:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5098:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5109:4:7",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5094:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5094:20:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5059:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:56:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5059:56:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5124:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5156:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5164:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5152:16:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5146:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:23:7"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "5128:14:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5189:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5200:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5214:3:7"
																					},
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5219:9:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5210:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5210:19:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5231:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:28:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5178:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5178:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5244:45:7",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "5269:14:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5285:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5252:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:37:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5244:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_struct$_EVM2AnyMessage_$75_memory_ptr__to_t_uint64_t_struct$_EVM2AnyMessage_$75_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3842:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3853:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3861:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3872:4:7",
														"type": ""
													}
												],
												"src": "3694:1601:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5381:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5427:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5436:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5439:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5429:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5429:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5429:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5411:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5423:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5394:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:32:7"
															},
															"nodeType": "YulIf",
															"src": "5391:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5452:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5468:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5462:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5347:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5358:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5370:6:7",
														"type": ""
													}
												],
												"src": "5300:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5700:301:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5710:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5722:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5733:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5710:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5753:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5764:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5746:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5746:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5791:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5802:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5787:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5787:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5811:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5819:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5807:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5807:31:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5780:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5780:59:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5859:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5870:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5855:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5855:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5879:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5895:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5900:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5891:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5891:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5904:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5887:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5887:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5875:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5875:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5848:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5848:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5928:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5939:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5924:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5944:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5917:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5917:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5917:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5971:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5982:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:19:7"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5988:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint64_t_address_t_uint256_t_uint256__to_t_bytes32_t_uint64_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5637:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5648:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5656:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5664:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5672:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5680:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5691:4:7",
														"type": ""
													}
												],
												"src": "5489:512:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6167:83:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6177:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6189:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6185:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6177:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6219:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6236:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6230:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6230:13:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6212:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6212:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6212:32:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_EVMExtraArgsV1_$81_memory_ptr__to_t_struct$_EVMExtraArgsV1_$81_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6136:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6147:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6158:4:7",
														"type": ""
													}
												],
												"src": "6006:244:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6412:218:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6422:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6434:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6445:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6430:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6422:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6457:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6475:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6480:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6471:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6471:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6484:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6467:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6467:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6461:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6502:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6517:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6525:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6513:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6495:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6549:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6560:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6545:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6545:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6569:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6577:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6565:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6538:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6538:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6538:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6601:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6612:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6597:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6597:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6617:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6365:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6376:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6384:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6392:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6403:4:7",
														"type": ""
													}
												],
												"src": "6255:375:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6809:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6826:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6837:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6819:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6819:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6860:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6871:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6856:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6856:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6876:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6849:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6849:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6849:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6899:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6910:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6895:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6895:18:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6915:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6888:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6888:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6981:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:18:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6986:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7008:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7020:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7031:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7008:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6786:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6800:4:7",
														"type": ""
													}
												],
												"src": "6635:406:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7220:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7237:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7271:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7282:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7267:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7287:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7260:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7260:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7321:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7306:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7306:18:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7326:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7299:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7299:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7392:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:18:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7397:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7370:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7370:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7415:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7427:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7438:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7423:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7415:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7197:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7211:4:7",
														"type": ""
													}
												],
												"src": "7046:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7590:150:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7600:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7620:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7614:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7614:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7604:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7675:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7683:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7671:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7690:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7636:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7636:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7636:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7711:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7722:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7727:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7718:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7711:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7566:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7571:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7582:3:7",
														"type": ""
													}
												],
												"src": "7453:287:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7919:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7936:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7947:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7929:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7929:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7929:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7970:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7981:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7966:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7986:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7959:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7959:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8009:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8020:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8005:18:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8025:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7998:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7998:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8066:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8078:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8089:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8074:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8066:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7896:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7910:4:7",
														"type": ""
													}
												],
												"src": "7745:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8224:98:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8241:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8252:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8264:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8289:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8272:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8272:44:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8264:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8193:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8204:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8215:4:7",
														"type": ""
													}
												],
												"src": "8103:219:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint64_t_struct$_EVM2AnyMessage_$75_memory_ptr__to_t_uint64_t_struct$_EVM2AnyMessage_$75_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let _1 := 64\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        let _2 := 32\n        mstore(add(headStart, _2), _1)\n        let memberValue0 := mload(value1)\n        mstore(add(headStart, _1), 0xa0)\n        let tail_1 := abi_encode_bytes(memberValue0, add(headStart, 224))\n        let memberValue0_1 := mload(add(value1, _2))\n        let _3 := not(63)\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), _3))\n        let tail_2 := abi_encode_bytes(memberValue0_1, tail_1)\n        let memberValue0_2 := mload(add(value1, _1))\n        mstore(add(headStart, 128), add(sub(tail_2, headStart), _3))\n        let pos := tail_2\n        let length := mload(memberValue0_2)\n        mstore(tail_2, length)\n        pos := add(tail_2, _2)\n        let srcPtr := add(memberValue0_2, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _4 := mload(srcPtr)\n            mstore(pos, and(mload(_4), sub(shl(160, 1), 1)))\n            mstore(add(pos, _2), mload(add(_4, _2)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _2)\n        }\n        let memberValue0_3 := mload(add(value1, 96))\n        abi_encode_address(memberValue0_3, add(headStart, 0xa0))\n        let memberValue0_4 := mload(add(value1, 128))\n        mstore(add(headStart, 192), add(sub(pos, headStart), _3))\n        tail := abi_encode_bytes(memberValue0_4, pos)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint64_t_address_t_uint256_t_uint256__to_t_bytes32_t_uint64_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_struct$_EVMExtraArgsV1_$81_memory_ptr__to_t_struct$_EVMExtraArgsV1_$81_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, mload(value0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"877": [
									{
										"length": 32,
										"start": 1369
									},
									{
										"length": 32,
										"start": 1859
									},
									{
										"length": 32,
										"start": 2399
									},
									{
										"length": 32,
										"start": 2574
									}
								],
								"880": [
									{
										"length": 32,
										"start": 564
									},
									{
										"length": 32,
										"start": 1218
									},
									{
										"length": 32,
										"start": 1537
									},
									{
										"length": 32,
										"start": 1680
									},
									{
										"length": 32,
										"start": 1906
									}
								],
								"883": [
									{
										"length": 32,
										"start": 705
									},
									{
										"length": 32,
										"start": 851
									},
									{
										"length": 32,
										"start": 1053
									},
									{
										"length": 32,
										"start": 2037
									},
									{
										"length": 32,
										"start": 2180
									},
									{
										"length": 32,
										"start": 2336
									},
									{
										"length": 32,
										"start": 2446
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AEAC4E1 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6392A51F EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xED3BD5BC EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xFE2C5D36 EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP4 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E5 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH2 0x464 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP1 PUSH1 0xE0 DUP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53F PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 DUP1 MLOAD SWAP2 MLOAD PUSH1 0x24 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x97A657C9 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20487DED SWAP2 PUSH2 0x5A8 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x650 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x703 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x28FDCAA1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x844 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP7 GT ISZERO PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6212CF3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x948 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x96F4E9F9 SWAP2 PUSH2 0xA5D SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP6 POP PUSH32 0xB55A3D3F1CCD1C10F00AFF03AD884028D98FA1D478FAE03ACECBF884CE8E8FBC SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0x20A SWAP3 DUP8 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xBAF SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0xC31 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC2C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x723 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC40 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xC48 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x723 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xCC5 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD18 DUP8 DUP4 DUP4 DUP8 PUSH2 0xD23 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xD92 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xD8B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xD8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x723 JUMP JUMPDEST POP DUP2 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0xC40 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0xDA7 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF9 DUP4 PUSH2 0xDC1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 PUSH1 0x20 DUP5 ADD PUSH2 0xDC1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2B DUP3 PUSH2 0xDC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4E DUP4 PUSH2 0xDC1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xEE9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0xA0 DUP4 DUP7 ADD MSTORE PUSH2 0xF2A PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP DUP2 DUP7 ADD MLOAD PUSH1 0x3F NOT DUP1 DUP8 DUP5 SUB ADD PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0xF47 DUP4 DUP4 PUSH2 0xED1 JUMP JUMPDEST DUP9 DUP7 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0x80 DUP11 ADD MSTORE DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 DUP7 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 DUP6 ADD SWAP1 JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0xF9A JUMPI DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP7 ADD MLOAD DUP7 DUP4 ADD MSTORE SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH2 0xF68 JUMP JUMPDEST POP PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0xC0 DUP11 ADD MSTORE SWAP6 POP PUSH2 0xFC9 DUP2 DUP8 PUSH2 0xED1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xFE9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE2B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xED1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x44D716101E2CBE9484AA00A67484E9EC1917 SWAP16 SDIV 0xEE 0xD3 EQ 0xCD PUSH17 0x4E43DA03962964736F6C63430008130033 ",
							"sourceMap": "700:3772:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4189:281;;;;;;:::i;:::-;;:::i;:::-;;3880:220;;;;;;:::i;:::-;;:::i;:::-;;;;822:25:7;;;878:2;863:18;;856:34;;;;795:18;3880:220:6;;;;;;;;948:20;;;;;-1:-1:-1;;;;;948:20:6;;;;;;-1:-1:-1;;;;;1174:32:7;;;1156:51;;1144:2;1129:18;948:20:6;1010:203:7;3732:142:6;;;:::i;:::-;;;1364:25:7;;;1352:2;1337:18;3732:142:6;1218:177:7;2075:1651:6;;;;;;:::i;:::-;;:::i;4189:281::-;4159:5;;-1:-1:-1;;;;;4159:5:6;4145:10;:19;4137:28;;;;;;4316:39:::1;::::0;-1:-1:-1;;;4316:39:6;;4349:4:::1;4316:39;::::0;::::1;1156:51:7::0;4299:14:6::1;::::0;-1:-1:-1;;;;;4316:24:6;::::1;::::0;::::1;::::0;1129:18:7;;4316:39:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4299:56;;4369:6;4379:1;4369:11:::0;4365:43:::1;;4389:19;;-1:-1:-1::0;;;4389:19:6::1;;;;;;;;;;;4365:43;4418:45;::::0;-1:-1:-1;;;4418:45:6;;-1:-1:-1;;;;;2222:32:7;;;4418:45:6::1;::::0;::::1;2204:51:7::0;2271:18;;;2264:34;;;4418:23:6;::::1;::::0;::::1;::::0;2177:18:7;;4418:45:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4289:181;4189:281:::0;;:::o;3880:220::-;4005:28;;-1:-1:-1;;;4005:28:6;;-1:-1:-1;;;;;1174:32:7;;;4005:28:6;;;1156:51:7;3938:19:6;;;;4005:9;:19;;;;1129:18:7;;4005:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4057:36;;-1:-1:-1;;;4057:36:6;;-1:-1:-1;;;;;1174:32:7;;;4057:36:6;;;1156:51:7;3990:43:6;;-1:-1:-1;4064:9:6;4057:27;;;;;;1129:18:7;;4057:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4043:50;;3880:220;;;:::o;3732:142::-;3821:46;;-1:-1:-1;;;3821:46:6;;3841:10;3821:46;;;2803:34:7;3861:4:6;2853:18:7;;;2846:43;3778:18:6;;3821:9;-1:-1:-1;;;;;3821:19:6;;;;2738:18:7;;3821:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3808:59;;3732:142;:::o;2075:1651::-;2289:30;;;2317:1;2289:30;;;;;;;;;2198:17;;;;2289:30;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2289:30:6;;;;;;;;;;;;;;;2231:88;;2329:40;2372:101;;;;;;;;2423:9;-1:-1:-1;;;;;2372:101:6;;;;;2455:7;2372:101;;;2329:144;;2501:11;2483:12;2496:1;2483:15;;;;;;;;:::i;:::-;;;;;;;;;;:29;2562:294;;;;;;;;;-1:-1:-1;;;;;1174:32:7;;2608:21:6;;;1156:51:7;2523:36:6;;2562:294;1129:18:7;;;2608:21:6;;;;;;;;;;;;2562:294;;;;;;;;;;;;;;;;;;;;2679:12;2562:294;;;;2835:9;-1:-1:-1;;;;;2562:294:6;;;;;2716:87;2753:36;;;;;;;;2786:1;2753:36;;;1395:56:1;;;6230:13:7;;1395:56:1;;;;6212:32:7;;;;1395:56:1;;;;;;;;;;6185:18:7;;;;1395:56:1;;;;;;;-1:-1:-1;;;;;1395:56:1;-1:-1:-1;;;1395:56:1;;;;1286:170;2716:87:6;2562:294;;2916:24;;2885:86;;-1:-1:-1;;;2885:86:6;;2523:333;;-1:-1:-1;2867:15:6;;2885:10;-1:-1:-1;;;;;2885:17:6;;;;:86;;-1:-1:-1;;;2916:24:6;;;;;2523:333;;2885:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2996:34;;-1:-1:-1;;;2996:34:6;;3024:4;2996:34;;;1156:51:7;2867:104:6;;-1:-1:-1;2996:9:6;-1:-1:-1;;;;;2996:19:6;;;;1129:18:7;;2996:34:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2986:7;:44;2982:137;;;3075:34;;-1:-1:-1;;;3075:34:6;;3103:4;3075:34;;;1156:51:7;3075:9:6;-1:-1:-1;;;;;3075:19:6;;;;1129:18:7;;3075:34:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3051:68;;-1:-1:-1;;;3051:68:6;;;;;822:25:7;;;;863:18;;;856:34;;;795:18;;3051:68:6;;;;;;;;2982:137;3129:47;;-1:-1:-1;;;3129:47:6;;-1:-1:-1;;;;;3155:10:6;2222:32:7;;3129:47:6;;;2204:51:7;2271:18;;;2264:34;;;3129:9:6;:17;;;;2177:18:7;;3129:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3201:31:6;;-1:-1:-1;;;3201:31:6;;3221:10;3201:31;;;1156:51:7;3201:9:6;-1:-1:-1;;;;;3201:19:6;;;;1129:18:7;;3201:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3191:7;:41;3187:130;;;3285:31;;-1:-1:-1;;;3285:31:6;;3305:10;3285:31;;;1156:51:7;3285:9:6;-1:-1:-1;;;;;3285:19:6;;;;1129:18:7;;3285:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3253:64;;-1:-1:-1;;;3253:64:6;;;;;;1364:25:7;;1352:2;1337:18;;1218:177;3187:130:6;3327:62;-1:-1:-1;;;;;3327:9:6;:26;3354:10;3374:4;3381:7;3327:26;:62::i;:::-;3399:47;;-1:-1:-1;;;3399:47:6;;-1:-1:-1;;;;;3425:10:6;2222:32:7;;3399:47:6;;;2204:51:7;2271:18;;;2264:34;;;3399:9:6;:17;;;;2177:18:7;;3399:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3518:24:6;;3498:54;;-1:-1:-1;;;3498:54:6;;:10;-1:-1:-1;;;;;3498:19:6;;;;:54;;-1:-1:-1;;;3518:24:6;;;;;3544:7;;3498:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3620:24;;3568:151;;;5746:25:7;;;-1:-1:-1;;;3620:24:6;;;;;5802:2:7;5787:18;;5780:59;-1:-1:-1;;;;;5875:32:7;;5855:18;;;5848:60;5939:2;5924:18;;5917:34;;;5982:3;5967:19;;5960:35;;;5746:25;;-1:-1:-1;3568:151:6;;5733:3:7;5718:19;3568:151:6;;;;;;;2221:1505;;;;2075:1651;;;;:::o;948:217:4:-;1091:68;;;-1:-1:-1;;;;;6513:15:7;;;1091:68:4;;;6495:34:7;6565:15;;;6545:18;;;6538:43;6597:18;;;;6590:34;;;1091:68:4;;;;;;;;;;6430:18:7;;;;1091:68:4;;;;;;;;-1:-1:-1;;;;;1091:68:4;-1:-1:-1;;;1091:68:4;;;3914:69;;;;;;;;;;;;;;;;1064:96;;1084:5;;1091:68;-1:-1:-1;;3914:69:4;;:27;;;1091:68;;3914:27;:69::i;:::-;3993:17;;3888:95;;-1:-1:-1;3993:21:4;3989:160;;4076:10;4065:30;;;;;;;;;;;;:::i;:::-;4057:85;;;;-1:-1:-1;;;4057:85:4;;6837:2:7;4057:85:4;;;6819:21:7;6876:2;6856:18;;;6849:30;6915:34;6895:18;;;6888:62;-1:-1:-1;;;6966:18:7;;;6959:40;7016:19;;4057:85:4;6635:406:7;4057:85:4;3555:598;3485:668;;:::o;3695:203:5:-;3814:12;3841:52;3863:6;3871:4;3877:1;3880:12;3841:21;:52::i;:::-;3834:59;3695:203;-1:-1:-1;;;;3695:203:5:o;4704:414::-;4851:12;4904:5;4879:21;:30;;4871:81;;;;-1:-1:-1;;;4871:81:5;;7248:2:7;4871:81:5;;;7230:21:7;7287:2;7267:18;;;7260:30;7326:34;7306:18;;;7299:62;-1:-1:-1;;;7377:18:7;;;7370:36;7423:19;;4871:81:5;7046:402:7;4871:81:5;4959:12;4973:23;5000:6;-1:-1:-1;;;;;5000:11:5;5019:5;5026:4;5000:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4958:73;;;;5044:69;5071:6;5079:7;5088:10;5100:12;5044:26;:69::i;:::-;5037:76;4704:414;-1:-1:-1;;;;;;;4704:414:5:o;7048:548::-;7210:12;7234:7;7230:362;;;7255:10;:17;7276:1;7255:22;7251:256;;-1:-1:-1;;;;;1395:19:5;;;7438:60;;;;-1:-1:-1;;;7438:60:5;;7947:2:7;7438:60:5;;;7929:21:7;7986:2;7966:18;;;7959:30;8025:31;8005:18;;;7998:59;8074:18;;7438:60:5;7745:353:7;7438:60:5;-1:-1:-1;7521:10:5;7514:17;;7230:362;7552:33;7560:10;7572:12;8213:17;;:21;8209:325;;8415:10;8409:17;8463:15;8450:10;8446:2;8442:19;8435:44;8209:325;8514:12;8507:20;;-1:-1:-1;;;8507:20:5;;;;;;;;:::i;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;457:186::-;516:6;569:2;557:9;548:7;544:23;540:32;537:52;;;585:1;582;575:12;537:52;608:29;627:9;608:29;:::i;:::-;598:39;457:186;-1:-1:-1;;;457:186:7:o;1400:254::-;1468:6;1476;1529:2;1517:9;1508:7;1504:23;1500:32;1497:52;;;1545:1;1542;1535:12;1497:52;1568:29;1587:9;1568:29;:::i;:::-;1558:39;1644:2;1629:18;;;;1616:32;;-1:-1:-1;;;1400:254:7:o;1841:184::-;1911:6;1964:2;1952:9;1943:7;1939:23;1935:32;1932:52;;;1980:1;1977;1970:12;1932:52;-1:-1:-1;2003:16:7;;1841:184;-1:-1:-1;1841:184:7:o;2309:277::-;2376:6;2429:2;2417:9;2408:7;2404:23;2400:32;2397:52;;;2445:1;2442;2435:12;2397:52;2477:9;2471:16;2530:5;2523:13;2516:21;2509:5;2506:32;2496:60;;2552:1;2549;2542:12;3032:127;3093:10;3088:3;3084:20;3081:1;3074:31;3124:4;3121:1;3114:15;3148:4;3145:1;3138:15;3164:250;3249:1;3259:113;3273:6;3270:1;3267:13;3259:113;;;3349:11;;;3343:18;3330:11;;;3323:39;3295:2;3288:10;3259:113;;;-1:-1:-1;;3406:1:7;3388:16;;3381:27;3164:250::o;3419:270::-;3460:3;3498:5;3492:12;3525:6;3520:3;3513:19;3541:76;3610:6;3603:4;3598:3;3594:14;3587:4;3580:5;3576:16;3541:76;:::i;:::-;3671:2;3650:15;-1:-1:-1;;3646:29:7;3637:39;;;;3678:4;3633:50;;3419:270;-1:-1:-1;;3419:270:7:o;3694:1601::-;3872:4;3901:2;3942:18;3934:6;3930:31;3919:9;3912:50;3981:2;4019;4014;4003:9;3999:18;3992:30;4057:6;4051:13;4100:4;4095:2;4084:9;4080:18;4073:32;4128:51;4174:3;4163:9;4159:19;4145:12;4128:51;:::i;:::-;4114:65;;4228:2;4220:6;4216:15;4210:22;4255:2;4251:7;4322:2;4310:9;4302:6;4298:22;4294:31;4289:2;4278:9;4274:18;4267:59;4349:40;4382:6;4366:14;4349:40;:::i;:::-;4426:15;;;4420:22;4483;;;4479:31;;4473:3;4458:19;;4451:60;4560:21;;4590:22;;;4666:23;;;;-1:-1:-1;4707:1:7;;-1:-1:-1;4628:15:7;;;;4717:280;4731:6;4728:1;4725:13;4717:280;;;4790:13;;4832:9;;-1:-1:-1;;;;;4828:35:7;4816:48;;4904:11;;4898:18;4884:12;;;4877:40;4972:15;;;;4860:1;4746:9;;;;;4937:12;;;;4717:280;;;-1:-1:-1;5046:2:7;5034:15;;5028:22;-1:-1:-1;;;;;967:31:7;5109:4;5094:20;;955:44;5164:3;5152:16;;5146:23;5210:19;;;5206:28;;5200:3;5185:19;;5178:57;5146:23;-1:-1:-1;5252:37:7;5214:3;5146:23;5252:37;:::i;:::-;5244:45;3694:1601;-1:-1:-1;;;;;;;;;;3694:1601:7:o;7453:287::-;7582:3;7620:6;7614:13;7636:66;7695:6;7690:3;7683:4;7675:6;7671:17;7636:66;:::i;:::-;7718:16;;;;;7453:287;-1:-1:-1;;7453:287:7:o;8103:219::-;8252:2;8241:9;8234:21;8215:4;8272:44;8312:2;8301:9;8297:18;8289:6;8272:44;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "831200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowanceUsdc()": "infinite",
								"balancesOf(address)": "infinite",
								"owner()": "2359",
								"transferUsdcToSepolia(address,uint256)": "infinite",
								"withdrawToken(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1258,
									"name": "PUSH",
									"source": 6,
									"value": "F694E193200268F9A4868E4AA017A0118C9A8177"
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1258,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1362,
									"end": 1404,
									"name": "PUSH",
									"source": 6,
									"value": "B9D5D9136855F6FEC3C0993FEE6E9CE8A297846"
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1487,
									"end": 1551,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1699,
									"name": "PUSH",
									"source": 6,
									"value": "DE41BA4FC9D91AD95425890298AED601595A70AB815C96711A31BC65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1645,
									"end": 1699,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1699,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1699,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1699,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1699,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1699,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1883,
									"end": 2069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1907,
									"end": 1912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 1925,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1979,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1935,
									"end": 1980,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1935,
									"end": 1980,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2020,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2009,
									"end": 2020,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2020,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2020,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 2021,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1990,
									"end": 2021,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2050,
									"end": 2061,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2050,
									"end": 2061,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2050,
									"end": 2061,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2031,
									"end": 2062,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 2031,
									"end": 2062,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "883"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "880"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "877"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 4472,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207144d716101e2cbe9484aa00a67484e9ec19179f05eed314cd704e43da03962964736f6c63430008130033",
									".code": [
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "3AEAC4E1"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "6392A51F"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "ED3BD5BC"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "FE2C5D36"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 700,
											"end": 4472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4189,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4189,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3880,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3880,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 822,
											"end": 847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 822,
											"end": 847,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 822,
											"end": 847,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 863,
											"end": 881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 856,
											"end": 890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 856,
											"end": 890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 856,
											"end": 890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 856,
											"end": 890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 795,
											"end": 813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 948,
											"end": 968,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 948,
											"end": 968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 948,
											"end": 968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 968,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 948,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 948,
											"end": 968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 948,
											"end": 968,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 948,
											"end": 968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 948,
											"end": 968,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 948,
											"end": 968,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 948,
											"end": 968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 948,
											"end": 968,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 968,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1010,
											"end": 1213,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3732,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1218,
											"end": 1395,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2075,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2075,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4164,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4155,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4164,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4137,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4353,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4299,
											"end": 4313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4316,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4316,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4375,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4380,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4408,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "686827B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4408,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4418,
											"end": 4463,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4463,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4463,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4441,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4418,
											"end": 4441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2195,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2177,
											"end": 2195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4463,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4418,
											"end": 4463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4014,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "880"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4005,
											"end": 4033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4005,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4033,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4073,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "883"
										},
										{
											"begin": 4057,
											"end": 4084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 4057,
											"end": 4084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4057,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4057,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 4100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3851,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2837,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3865,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3821,
											"end": 3840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3840,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 3821,
											"end": 3840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3821,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2432,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2483,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2691,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "880"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6243,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6243,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "97A657C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1456,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2803,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2716,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2940,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2916,
											"end": 2940,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20487DED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2856,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2882,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2895,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "877"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2885,
											"end": 2902,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2902,
											"name": "PUSH",
											"source": 6,
											"value": "20487DED"
										},
										{
											"begin": 2885,
											"end": 2902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2940,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2940,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2916,
											"end": 2940,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2856,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2885,
											"end": 2971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2885,
											"end": 2971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3028,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "880"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2996,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2996,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3030,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 3119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2982,
											"end": 3119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3107,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "880"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3075,
											"end": 3094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3075,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3075,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28FDCAA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 822,
											"end": 847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 822,
											"end": 847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 822,
											"end": 847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 822,
											"end": 847,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 863,
											"end": 881,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 863,
											"end": 881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 863,
											"end": 881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 856,
											"end": 890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 856,
											"end": 890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 856,
											"end": 890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 795,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 795,
											"end": 813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3119,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2982,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3155,
											"end": 3165,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "877"
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "880"
										},
										{
											"begin": 3129,
											"end": 3146,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3146,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 3129,
											"end": 3146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2195,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2177,
											"end": 2195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3129,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3129,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3231,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3201,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3201,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3198,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3232,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3317,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3187,
											"end": 3317,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3294,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "883"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3285,
											"end": 3304,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3304,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3285,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3285,
											"end": 3316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3285,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6212CF3B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3253,
											"end": 3317,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1395,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3317,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3187,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "883"
										},
										{
											"begin": 3327,
											"end": 3353,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3364,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3327,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3389,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3327,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3435,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "877"
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2254,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "883"
										},
										{
											"begin": 3399,
											"end": 3416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3416,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 3399,
											"end": 3416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2195,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2177,
											"end": 2195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3399,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3399,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "96F4E9F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3508,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "877"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3498,
											"end": 3517,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3517,
											"name": "PUSH",
											"source": 6,
											"value": "96F4E9F9"
										},
										{
											"begin": 3498,
											"end": 3517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3551,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3498,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3498,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3498,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5746,
											"end": 5771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5771,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5804,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5805,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5839,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5875,
											"end": 5907,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5907,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5855,
											"end": 5873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5855,
											"end": 5873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5855,
											"end": 5873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5924,
											"end": 5942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5924,
											"end": 5942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5951,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 5985,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5967,
											"end": 5986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 5986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5995,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5771,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "PUSH",
											"source": 6,
											"value": "B55A3D3F1CCD1C10F00AFF03AD884028D98FA1D478FAE03ACECBF884CE8E8FBC"
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 5736,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5718,
											"end": 5737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3719,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 3726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 3726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 3726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 3726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 3726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1165,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 948,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6528,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6580,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6580,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6580,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6538,
											"end": 6581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1064,
											"end": 1160,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3941,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3914,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3914,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 4010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 4010,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3993,
											"end": 4014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3989,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3989,
											"end": 4149,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4065,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4065,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6837,
											"end": 6839,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6819,
											"end": 6840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6878,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 6856,
											"end": 6874,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6856,
											"end": 6874,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 6874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 6949,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6888,
											"end": 6950,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7035,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7016,
											"end": 7035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6635,
											"end": 7041,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4057,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 4153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 4153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 4153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3898,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3695,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3841,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3892,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3841,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3841,
											"end": 3893,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3841,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3893,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3898,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3695,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 5118,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4704,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4904,
											"end": 4909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4900,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7287,
											"end": 7289,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7360,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7423,
											"end": 7442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7046,
											"end": 7448,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4871,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5006,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5000,
											"end": 5011,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5024,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5030,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5000,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5086,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5098,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5112,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5044,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5113,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5044,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5037,
											"end": 5113,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 5118,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4704,
											"end": 5118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 7048,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7210,
											"end": 7222,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7592,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7230,
											"end": 7592,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7265,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7272,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7255,
											"end": 7277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7251,
											"end": 7507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7947,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 7950,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 7988,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7989,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8056,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 8005,
											"end": 8023,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8005,
											"end": 8023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8005,
											"end": 8023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8057,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7745,
											"end": 8098,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7438,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7521,
											"end": 7531,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7514,
											"end": 7531,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7592,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7230,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7552,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7584,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8234,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8209,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8209,
											"end": 8534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8463,
											"end": 8478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8435,
											"end": 8479,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8209,
											"end": 8534,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8209,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8507,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 452,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 350,
											"end": 389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 440,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 427,
											"end": 445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 408,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 408,
											"end": 446,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 408,
											"end": 446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 398,
											"end": 446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 398,
											"end": 446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 457,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 571,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 548,
											"end": 555,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 544,
											"end": 567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 540,
											"end": 572,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 589,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 537,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 537,
											"end": 589,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 575,
											"end": 587,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 589,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 537,
											"end": 589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 608,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 627,
											"end": 636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 608,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 608,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 608,
											"end": 637,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 608,
											"end": 637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 637,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 457,
											"end": 643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 457,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1654,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1400,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1531,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1515,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1527,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1532,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1549,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1497,
											"end": 1549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1547,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1549,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1497,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1587,
											"end": 1596,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1568,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1597,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1568,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1597,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1648,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1648,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 2025,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1841,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 1967,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1982,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2019,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 2025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1841,
											"end": 2025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2586,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2309,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2432,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2449,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2397,
											"end": 2449,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2449,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2397,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2487,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2536,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2537,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2496,
											"end": 2556,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2554,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3032,
											"end": 3159,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3032,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3103,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3088,
											"end": 3091,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3084,
											"end": 3104,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3128,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3114,
											"end": 3129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3153,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3414,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3164,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3267,
											"end": 3280,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3361,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3341,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3323,
											"end": 3362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3297,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3259,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 3419,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3532,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3607,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3598,
											"end": 3601,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3594,
											"end": 3608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3587,
											"end": 3591,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3585,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3541,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3541,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3673,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3650,
											"end": 3665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3676,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3676,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3633,
											"end": 3683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3633,
											"end": 3683,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3694,
											"end": 5295,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3694,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3992,
											"end": 4022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4051,
											"end": 4064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4163,
											"end": 4172,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4128,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4179,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4128,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4228,
											"end": 4230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 4251,
											"end": 4258,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4291,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4278,
											"end": 4287,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4326,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4380,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4349,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4389,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4349,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4420,
											"end": 4442,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4505,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4505,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4510,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4458,
											"end": 4477,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4612,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4612,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4612,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4689,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4689,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4628,
											"end": 4643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4729,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4738,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4864,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4987,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4987,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4987,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4949,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4717,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5048,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5034,
											"end": 5049,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5049,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 967,
											"end": 998,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5109,
											"end": 5113,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 955,
											"end": 999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5167,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5152,
											"end": 5168,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5168,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5169,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5229,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5229,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5200,
											"end": 5203,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 5185,
											"end": 5204,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5235,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5169,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5252,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5214,
											"end": 5217,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5169,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5252,
											"end": 5289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5289,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5252,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5289,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 3694,
											"end": 5295,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3694,
											"end": 5295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7740,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 7453,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7627,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7690,
											"end": 7693,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7687,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7636,
											"end": 7702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7702,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7636,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7453,
											"end": 7740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8322,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 8103,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8250,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8215,
											"end": 8219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 8272,
											"end": 8316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
								"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
								"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
								"TransferUSDCBasic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowanceUsdc()": "ed3bd5bc",
							"balancesOf(address)": "6392a51f",
							"owner()": "8da5cb5b",
							"transferUsdcToSepolia(address,uint256)": "fe2c5d36",
							"withdrawToken(address,address)": "3aeac4e1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calculatedFees\",\"type\":\"uint256\"}],\"name\":\"NotEnoughBalanceForFees\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"}],\"name\":\"NotEnoughBalanceUsdcForTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ccipFee\",\"type\":\"uint256\"}],\"name\":\"UsdcTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowanceUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balancesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"linkBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferUsdcToSepolia\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY. THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE. DO NOT USE THIS CODE IN PRODUCTION.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TransferUSDCBasic.sol\":\"TransferUSDCBasic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x176bc6a1bec19d76464566d4becb68946e4c53b779e2019b34f95be4fee571f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f8abd3813d7acb8f5b510dbdc9f7eb9b0fe300ea4261ae9c4f843e0d3f0b24a\",\"dweb:/ipfs/QmSCmCC5wXYqgvLfpdqWxZTfo837DYVPLo9CYEKhgid1DA\"]},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128\",\"dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H\"]},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xca8a1e219f7a427d02b93efd7a4f9ecd76a2e6776b5e196df0a5e4ccc175187b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53eb5ae6a9225130a6b4efc4cad8cc9fff2992e3a95bc1ed518dcb9db965e969\",\"dweb:/ipfs/QmSkLFh7WUYVr8VLkth7RaRQ5siQSw6P45Dc3KT2hFhNnX\"]},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xd1668d9229b21a4630535ca2100c61e4a2905ea7e4e6077c27dfd1caa7d467ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6558c79b0459e0d8f98954af7f1fadf1c5c7809a873742e05ea3f88a5edcc20\",\"dweb:/ipfs/QmaY29cBPKADz8PqyR2M72QLqUgY7o3EYCwQknzpj9u6Da\"]},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":{\"keccak256\":\"0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b\",\"dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF\"]},\"TransferUSDCBasic.sol\":{\"keccak256\":\"0xfd313d6aaf46c414e98a3200a57affd996a671ae8b3a5a242ccc0d42c96e9829\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3b698d83ee2aacfefd57caf6fa893fd0f621aa22ab3564ebf5056d1bdbd0f39\",\"dweb:/ipfs/Qmf7WzgVnX9nKsib5k1VucWqS7kcgPMscmSzCwcT1dJ5QA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 874,
								"contract": "TransferUSDCBasic.sol:TransferUSDCBasic",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 886,
								"contract": "TransferUSDCBasic.sol:TransferUSDCBasic",
								"label": "ccipRouterAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 889,
								"contract": "TransferUSDCBasic.sol:TransferUSDCBasic",
								"label": "linkAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 892,
								"contract": "TransferUSDCBasic.sol:TransferUSDCBasic",
								"label": "usdcAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 895,
								"contract": "TransferUSDCBasic.sol:TransferUSDCBasic",
								"label": "destinationChainSelector",
								"offset": 20,
								"slot": "3",
								"type": "t_uint64"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY. THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE. DO NOT USE THIS CODE IN PRODUCTION.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
					"exportedSymbols": {
						"Client": [
							120
						],
						"IRouterClient": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
							"file": "../libraries/Client.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 43,
							"sourceUnit": 121,
							"src": "57:47:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Client",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 120,
										"src": "65:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRouterClient",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "IRouterClient",
							"nameLocation": "116:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "ae236d9c",
									"id": 7,
									"name": "UnsupportedDestinationChain",
									"nameLocation": "140:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "destChainSelector",
												"nameLocation": "175:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "168:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:26:0"
									},
									"src": "134:60:0"
								},
								{
									"errorSelector": "07da6ee6",
									"id": 9,
									"name": "InsufficientFeeTokenAmount",
									"nameLocation": "203:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:2:0"
									},
									"src": "197:35:0"
								},
								{
									"errorSelector": "1841b4e1",
									"id": 11,
									"name": "InvalidMsgValue",
									"nameLocation": "241:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "256:2:0"
									},
									"src": "235:24:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "263:193:0",
										"text": "@notice Checks if the given chain ID is supported for sending/receiving.\n @param destChainSelector The chain to check.\n @return supported is true if it is supported, false if not."
									},
									"functionSelector": "a48a9058",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isChainSupported",
									"nameLocation": "468:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "destChainSelector",
												"nameLocation": "492:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "485:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 13,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "485:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:26:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "supported",
												"nameLocation": "539:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "534:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "534:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:16:0"
									},
									"scope": 42,
									"src": "459:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "554:356:0",
										"text": "@param destinationChainSelector The destination chainSelector\n @param message The cross-chain CCIP message including data and/or tokens\n @return fee returns execution fee for the message\n delivery to destination chain, denominated in the feeToken specified in the message.\n @dev Reverts with appropriate reason upon invalid message."
									},
									"functionSelector": "20487ded",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "922:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "destinationChainSelector",
												"nameLocation": "941:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "934:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "934:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1000:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "971:36:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_memory_ptr",
													"typeString": "struct Client.EVM2AnyMessage"
												},
												"typeName": {
													"id": 24,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 23,
														"name": "Client.EVM2AnyMessage",
														"nameLocations": [
															"971:6:0",
															"978:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 75,
														"src": "971:21:0"
													},
													"referencedDeclaration": 75,
													"src": "971:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_storage_ptr",
														"typeString": "struct Client.EVM2AnyMessage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:83:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1043:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1035:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:13:0"
									},
									"scope": 42,
									"src": "913:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1052:434:0",
										"text": "@notice Request a message to be sent to the destination chain\n @param destinationChainSelector The destination chain ID\n @param message The cross-chain CCIP message including data and/or tokens\n @return messageId The message ID\n @dev Note if msg.value is larger than the required fee (from getFee) we accept\n the overpayment with no refund.\n @dev Reverts with appropriate reason upon invalid message."
									},
									"functionSelector": "96f4e9f9",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ccipSend",
									"nameLocation": "1498:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "destinationChainSelector",
												"nameLocation": "1519:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1512:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 32,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1549:38:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_calldata_ptr",
													"typeString": "struct Client.EVM2AnyMessage"
												},
												"typeName": {
													"id": 35,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 34,
														"name": "Client.EVM2AnyMessage",
														"nameLocations": [
															"1549:6:0",
															"1556:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 75,
														"src": "1549:21:0"
													},
													"referencedDeclaration": 75,
													"src": "1549:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_storage_ptr",
														"typeString": "struct Client.EVM2AnyMessage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:85:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 38,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:9:0"
									},
									"scope": 42,
									"src": "1489:138:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "106:1523:0",
							"usedErrors": [
								7,
								9,
								11
							]
						}
					],
					"src": "32:1598:0"
				},
				"id": 0
			},
			"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
					"exportedSymbols": {
						"Client": [
							120
						]
					},
					"id": 121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 44,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Client",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 120,
							"linearizedBaseContracts": [
								120
							],
							"name": "Client",
							"nameLocation": "90:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Client.EVMTokenAmount",
									"id": 49,
									"members": [
										{
											"constant": false,
											"id": 46,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "224:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 49,
											"src": "216:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 45,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "216:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "280:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 49,
											"src": "272:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 47,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "272:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVMTokenAmount",
									"nameLocation": "195:14:1",
									"nodeType": "StructDefinition",
									"scope": 120,
									"src": "188:124:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Client.Any2EVMMessage",
									"id": 62,
									"members": [
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "messageId",
											"nameLocation": "352:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 62,
											"src": "344:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 50,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "344:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "sourceChainSelector",
											"nameLocation": "424:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 62,
											"src": "417:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 52,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "417:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "481:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 62,
											"src": "475:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 54,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "475:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 57,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "550:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 62,
											"src": "544:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 56,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "544:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 61,
											"mutability": "mutable",
											"name": "destTokenAmounts",
											"nameLocation": "614:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 62,
											"src": "597:33:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_storage_$dyn_storage_ptr",
												"typeString": "struct Client.EVMTokenAmount[]"
											},
											"typeName": {
												"baseType": {
													"id": 59,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 58,
														"name": "EVMTokenAmount",
														"nameLocations": [
															"597:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "597:14:1"
													},
													"referencedDeclaration": 49,
													"src": "597:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMTokenAmount_$49_storage_ptr",
														"typeString": "struct Client.EVMTokenAmount"
													}
												},
												"id": 60,
												"nodeType": "ArrayTypeName",
												"src": "597:16:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_storage_$dyn_storage_ptr",
													"typeString": "struct Client.EVMTokenAmount[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Any2EVMMessage",
									"nameLocation": "323:14:1",
									"nodeType": "StructDefinition",
									"scope": 120,
									"src": "316:390:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Client.EVM2AnyMessage",
									"id": 75,
									"members": [
										{
											"constant": false,
											"id": 64,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "809:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 75,
											"src": "803:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 63,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "803:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "881:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 75,
											"src": "875:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 65,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "875:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "tokenAmounts",
											"nameLocation": "924:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 75,
											"src": "907:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_storage_$dyn_storage_ptr",
												"typeString": "struct Client.EVMTokenAmount[]"
											},
											"typeName": {
												"baseType": {
													"id": 68,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 67,
														"name": "EVMTokenAmount",
														"nameLocations": [
															"907:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "907:14:1"
													},
													"referencedDeclaration": 49,
													"src": "907:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMTokenAmount_$49_storage_ptr",
														"typeString": "struct Client.EVMTokenAmount"
													}
												},
												"id": 69,
												"nodeType": "ArrayTypeName",
												"src": "907:16:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_storage_$dyn_storage_ptr",
													"typeString": "struct Client.EVMTokenAmount[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "feeToken",
											"nameLocation": "969:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 75,
											"src": "961:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "961:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "extraArgs",
											"nameLocation": "1055:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 75,
											"src": "1049:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 73,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1049:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVM2AnyMessage",
									"nameLocation": "782:14:1",
									"nodeType": "StructDefinition",
									"scope": 120,
									"src": "775:345:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3ab8c0d0",
									"id": 78,
									"mutability": "constant",
									"name": "EVM_EXTRA_ARGS_V1_TAG",
									"nameLocation": "1194:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "1171:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 76,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1171:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783937613635376339",
										"id": 77,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1218:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2544261065_by_1",
											"typeString": "int_const 2544261065"
										},
										"value": "0x97a657c9"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Client.EVMExtraArgsV1",
									"id": 81,
									"members": [
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "1269:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "1261:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 79,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1261:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVMExtraArgsV1",
									"nameLocation": "1240:14:1",
									"nodeType": "StructDefinition",
									"scope": 120,
									"src": "1233:49:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1382:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"name": "EVM_EXTRA_ARGS_V1_TAG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1418:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 92,
															"name": "extraArgs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1441:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVMExtraArgsV1_$81_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV1 memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_struct$_EVMExtraArgsV1_$81_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV1 memory"
															}
														],
														"expression": {
															"id": 89,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1395:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1399:18:1",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "1395:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1395:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 88,
												"id": 94,
												"nodeType": "Return",
												"src": "1388:63:1"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_argsToBytes",
									"nameLocation": "1295:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "extraArgs",
												"nameLocation": "1330:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1308:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVMExtraArgsV1_$81_memory_ptr",
													"typeString": "struct Client.EVMExtraArgsV1"
												},
												"typeName": {
													"id": 83,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 82,
														"name": "EVMExtraArgsV1",
														"nameLocations": [
															"1308:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "1308:14:1"
													},
													"referencedDeclaration": 81,
													"src": "1308:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMExtraArgsV1_$81_storage_ptr",
														"typeString": "struct Client.EVMExtraArgsV1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:33:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "bts",
												"nameLocation": "1377:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1364:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 86,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:18:1"
									},
									"scope": 120,
									"src": "1286:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "8113c578",
									"id": 99,
									"mutability": "constant",
									"name": "EVM_EXTRA_ARGS_V2_TAG",
									"nameLocation": "1530:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "1507:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 97,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1507:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783138316463663130",
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1554:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_404606736_by_1",
											"typeString": "int_const 404606736"
										},
										"value": "0x181dcf10"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Client.EVMExtraArgsV2",
									"id": 104,
									"members": [
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "2010:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 104,
											"src": "2002:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 100,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2002:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "allowOutOfOrderExecution",
											"nameLocation": "2029:24:1",
											"nodeType": "VariableDeclaration",
											"scope": 104,
											"src": "2024:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 102,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2024:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVMExtraArgsV2",
									"nameLocation": "1981:14:1",
									"nodeType": "StructDefinition",
									"scope": 120,
									"src": "1974:84:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2158:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 114,
															"name": "EVM_EXTRA_ARGS_V2_TAG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "2194:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 115,
															"name": "extraArgs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "2217:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVMExtraArgsV2_$104_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV2 memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_struct$_EVMExtraArgsV2_$104_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV2 memory"
															}
														],
														"expression": {
															"id": 112,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2171:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2175:18:1",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "2171:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "2164:63:1"
											}
										]
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_argsToBytes",
									"nameLocation": "2071:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "extraArgs",
												"nameLocation": "2106:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "2084:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVMExtraArgsV2_$104_memory_ptr",
													"typeString": "struct Client.EVMExtraArgsV2"
												},
												"typeName": {
													"id": 106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 105,
														"name": "EVMExtraArgsV2",
														"nameLocations": [
															"2084:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 104,
														"src": "2084:14:1"
													},
													"referencedDeclaration": 104,
													"src": "2084:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMExtraArgsV2_$104_storage_ptr",
														"typeString": "struct Client.EVMExtraArgsV2"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:33:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "bts",
												"nameLocation": "2153:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "2140:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2140:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:18:1"
									},
									"scope": 120,
									"src": "2062:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 121,
							"src": "82:2152:1",
							"usedErrors": []
						}
					],
					"src": "32:2203:1"
				},
				"id": 1
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							198
						]
					},
					"id": 199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 198,
							"linearizedBaseContracts": [
								198
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "223:148:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 132,
									"name": "Transfer",
									"nameLocation": "380:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "405:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "389:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "427:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "411:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "439:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "431:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:57:2"
									},
									"src": "374:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "450:142:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 141,
									"name": "Approval",
									"nameLocation": "601:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "626:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "610:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "649:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "633:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "666:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "658:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:63:2"
									},
									"src": "595:78:2"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "677:62:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "751:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:2:2"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "788:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:9:2"
									},
									"scope": 198,
									"src": "742:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "801:68:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "881:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:17:2"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "931:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:9:2"
									},
									"scope": 198,
									"src": "872:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "944:190:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1146:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1163:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1155:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1175:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1167:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:28:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1201:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:6:2"
									},
									"scope": 198,
									"src": "1137:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "1211:252:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1475:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1493:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1485:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1508:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1500:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:32:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1540:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1539:9:2"
									},
									"scope": 198,
									"src": "1466:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "1553:616:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2181:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2197:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2189:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2214:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2206:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:33:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2240:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2240:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:6:2"
									},
									"scope": 198,
									"src": "2172:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2250:271:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2533:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2559:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2551:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2577:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2569:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2593:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2585:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:58:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2622:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2621:6:2"
									},
									"scope": 198,
									"src": "2524:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 199,
							"src": "202:2428:2",
							"usedErrors": []
						}
					],
					"src": "106:2524:2"
				},
				"id": 2
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							234
						]
					},
					"id": 235,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 200,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 201,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 234,
							"linearizedBaseContracts": [
								234
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "647:752:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1411:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1431:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1423:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1450:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1442:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1471:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1463:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1490:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1482:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1510:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1504:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 211,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1525:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1517:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1540:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1532:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:128:3"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1554:0:3"
									},
									"scope": 234,
									"src": "1402:153:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "1559:282:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1853:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1868:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1860:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:15:3"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1898:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:9:3"
									},
									"scope": 234,
									"src": "1844:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1911:124:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2098:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2114:2:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2140:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:9:3"
									},
									"scope": 234,
									"src": "2089:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 235,
							"src": "620:1531:3",
							"usedErrors": []
						}
					],
					"src": "114:2037:3"
				},
				"id": 3
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							845
						],
						"IERC20": [
							198
						],
						"IERC20Permit": [
							234
						],
						"SafeERC20": [
							515
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 236,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 199,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 235,
							"src": "164:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 846,
							"src": "211:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 243,
									"libraryName": {
										"id": 241,
										"name": "Address",
										"nameLocations": [
											"735:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "735:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "729:26:4",
									"typeName": {
										"id": 242,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "747:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "847:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 254,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "873:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 257,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "903:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$198",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "909:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 165,
																		"src": "903:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "918:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "903:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 260,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "928:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 261,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "932:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 255,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "880:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "884:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "880:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "880:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 253,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "853:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$198_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "853:86:4"
											}
										]
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "768:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "793:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "786:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 245,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 244,
														"name": "IERC20",
														"nameLocations": [
															"786:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 198,
														"src": "786:6:4"
													},
													"referencedDeclaration": 198,
													"src": "786:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "812:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "804:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "828:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "820:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:57:4"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:0:4"
									},
									"scope": 515,
									"src": "759:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1058:107:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "1084:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 282,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "1114:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$198",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1120:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 197,
																		"src": "1114:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1133:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1114:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 285,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "1143:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 286,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "1149:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "1153:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 280,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1091:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1095:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1091:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1091:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 278,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1064:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$198_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1064:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1064:96:4"
											}
										]
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "957:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "986:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "979:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"979:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 198,
														"src": "979:6:4"
													},
													"referencedDeclaration": 198,
													"src": "979:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1005:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "997:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1023:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1015:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1039:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1031:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:75:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1058:0:4"
									},
									"scope": 515,
									"src": "948:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1501:459:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 304,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "1728:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1737:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1728:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 307,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1727:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 312,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1768:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$515",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$515",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 311,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1760:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 310,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1760:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 313,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1760:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 314,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 298,
																					"src": "1775:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 308,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "1744:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$198",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1750:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 175,
																				"src": "1744:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1744:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1787:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1744:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1743:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1727:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1797:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1712:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:147:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "1712:147:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "1885:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 327,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "1915:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$198",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1921:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 185,
																		"src": "1915:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1929:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1915:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 330,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "1939:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "1948:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 325,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1892:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1896:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1892:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1892:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 323,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1865:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$198_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1865:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1865:90:4"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1169:237:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1418:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1442:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1435:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 295,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 294,
														"name": "IERC20",
														"nameLocations": [
															"1435:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 198,
														"src": "1435:6:4"
													},
													"referencedDeclaration": 198,
													"src": "1435:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1461:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1453:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1482:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1474:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:62:4"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1501:0:4"
									},
									"scope": 515,
									"src": "1409:551:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2066:184:4",
										"statements": [
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2080:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 371,
														"src": "2072:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2072:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 352,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2119:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$515",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$515",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 350,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 354,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2126:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 348,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "2095:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$198",
																	"typeString": "contract IERC20"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2101:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2095:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2095:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 356,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "2137:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2095:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2072:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "2168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 363,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "2198:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$198",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2204:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 185,
																		"src": "2198:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2212:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2198:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 366,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "2222:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 367,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "2231:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 361,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2175:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2179:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2175:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2175:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 359,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2148:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$198_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2148:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "2148:97:4"
											}
										]
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1973:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2000:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 337,
														"name": "IERC20",
														"nameLocations": [
															"2000:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 198,
														"src": "2000:6:4"
													},
													"referencedDeclaration": 198,
													"src": "2000:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2026:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2018:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:62:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:4"
									},
									"scope": 515,
									"src": "1964:286:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2356:336:4",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "2362:326:4",
												"statements": [
													{
														"assignments": [
															383
														],
														"declarations": [
															{
																"constant": false,
																"id": 383,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2388:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 418,
																"src": "2380:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2380:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 392,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 388,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$515",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$515",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 386,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 390,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "2434:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 384,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2403:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2409:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 175,
																"src": "2403:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2403:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2380:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 394,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "2458:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 395,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2474:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2458:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2481:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 393,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2450:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2450:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 399,
														"nodeType": "ExpressionStatement",
														"src": "2450:75:4"
													},
													{
														"assignments": [
															401
														],
														"declarations": [
															{
																"constant": false,
																"id": 401,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2541:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 418,
																"src": "2533:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 400,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2533:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 402,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2556:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "2571:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2556:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2533:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 407,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2604:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 410,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 375,
																					"src": "2634:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$198",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2640:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 185,
																				"src": "2634:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2648:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2634:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 413,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "2658:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 414,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "2667:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 408,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2611:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2615:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2611:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2611:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 406,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "2584:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$198_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2584:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 417,
														"nodeType": "ExpressionStatement",
														"src": "2584:97:4"
													}
												]
											}
										]
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2263:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2297:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2290:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 374,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 373,
														"name": "IERC20",
														"nameLocations": [
															"2290:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 198,
														"src": "2290:6:4"
													},
													"referencedDeclaration": 198,
													"src": "2290:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2316:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2308:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2337:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2329:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:62:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:0:4"
									},
									"scope": 515,
									"src": "2254:438:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2877:239:4",
										"statements": [
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "2891:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "2883:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2883:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"id": 444,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "2918:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 442,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2905:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$234",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2911:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "2905:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2905:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2883:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "2943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2950:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2959:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 453,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "2966:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 454,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "2976:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 455,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "2979:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 456,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "2982:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 447,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2930:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$234",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2936:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "2930:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2930:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "2930:54:4"
											},
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "2998:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "2990:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2990:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [
														{
															"id": 463,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3024:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 461,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3011:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$234",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "3011:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3011:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2990:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "3044:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 468,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "3058:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3072:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3058:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3044:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3075:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3036:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3036:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "3036:75:4"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2705:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2734:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2721:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$234",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 421,
														"name": "IERC20Permit",
														"nameLocations": [
															"2721:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 234,
														"src": "2721:12:4"
													},
													"referencedDeclaration": 234,
													"src": "2721:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$234",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2753:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2745:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2772:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2764:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2793:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2785:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2812:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2804:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2832:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2826:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 432,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2826:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2847:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2839:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 434,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2862:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2854:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2715:152:4"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2877:0:4"
									},
									"scope": 515,
									"src": "2696:420:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "3555:598:4",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3901:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "3888:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 485,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3888:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [
														{
															"id": 492,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3942:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3948:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 489,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "3922:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3914:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 487,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3914:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3914:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3929:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 605,
														"src": "3914:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3914:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3888:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 496,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3993:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4004:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3993:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4013:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3993:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "IfStatement",
												"src": "3989:160:4",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "4016:133:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 503,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 486,
																				"src": "4076:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 505,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4089:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 504,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4089:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 506,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4088:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 501,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4065:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4069:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4065:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4065:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4097:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 500,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4057:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4057:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "4057:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "3120:362:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3494:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3521:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "3514:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 479,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 478,
														"name": "IERC20",
														"nameLocations": [
															"3514:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 198,
														"src": "3514:6:4"
													},
													"referencedDeclaration": 198,
													"src": "3514:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3541:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "3528:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3528:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:33:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3555:0:4"
									},
									"scope": 515,
									"src": "3485:668:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 516,
							"src": "707:3448:4",
							"usedErrors": []
						}
					],
					"src": "115:4040:4"
				},
				"id": 4
			},
			"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							845
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 845,
							"linearizedBaseContracts": [
								845
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "1187:236:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 526,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "1395:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1403:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1395:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1408:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1395:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1417:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1395:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 525,
												"id": 531,
												"nodeType": "Return",
												"src": "1388:30:5"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "214:904:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1130:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1149:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1141:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:17:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "1181:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1181:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:6:5"
									},
									"scope": 845,
									"src": "1121:302:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "2377:227:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 544,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2399:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$845",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$845",
																				"typeString": "library Address"
																			}
																		],
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 542,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2405:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2391:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 547,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "2416:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2391:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2424:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2383:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2383:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "2383:73:5"
											},
											{
												"assignments": [
													553,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2469:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "2464:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 552,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2464:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 560,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2512:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 554,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "2482:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2492:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2482:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 556,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "2504:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2482:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2482:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2463:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 562,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "2529:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2538:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2521:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "2521:78:5"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1427:876:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2315:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2341:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2325:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2360:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2352:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:43:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:0:5"
									},
									"scope": 845,
									"src": "2306:298:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3397:90:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 578,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3432:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3440:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 577,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															625,
															669
														],
														"referencedDeclaration": 669,
														"src": "3410:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3410:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 576,
												"id": 583,
												"nodeType": "Return",
												"src": "3403:79:5"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "2608:697:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3317:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3338:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3330:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3359:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3346:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 571,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3346:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:35:5"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3383:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3383:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:14:5"
									},
									"scope": 845,
									"src": "3308:179:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3828:70:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 598,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "3871:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3877:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "3880:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 597,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															625,
															669
														],
														"referencedDeclaration": 669,
														"src": "3841:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 596,
												"id": 603,
												"nodeType": "Return",
												"src": "3834:59:5"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3491:201:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3704:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3730:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3722:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3755:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3742:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3742:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3779:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3765:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3765:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3716:79:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3814:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3814:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3813:14:5"
									},
									"scope": 845,
									"src": "3695:203:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "4365:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4400:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4408:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 620,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4414:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4421:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 617,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															625,
															669
														],
														"referencedDeclaration": 669,
														"src": "4378:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 616,
												"id": 623,
												"nodeType": "Return",
												"src": "4371:94:5"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3902:331:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4245:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4280:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4272:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4305:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4292:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4292:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4323:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4315:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4266:66:5"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4351:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4351:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4350:14:5"
									},
									"scope": 845,
									"src": "4236:234:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "4865:253:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 642,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4887:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$845",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$845",
																				"typeString": "library Address"
																			}
																		],
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4879:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 640,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4879:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4879:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4893:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4879:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 645,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "4904:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4879:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4911:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4871:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4871:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4871:81:5"
											},
											{
												"assignments": [
													651,
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4964:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "4959:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 650,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4959:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4986:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "4973:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 652,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4973:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"arguments": [
														{
															"id": 658,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5026:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 654,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "5000:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5007:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5000:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 656,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "5019:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5000:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4958:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5071:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5079:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 664,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5088:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 665,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5100:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 661,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5044:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5044:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 638,
												"id": 667,
												"nodeType": "Return",
												"src": "5037:76:5"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "4474:227:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4748:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4740:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4773:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4760:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4791:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4783:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4783:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4816:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4802:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4802:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:98:5"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4851:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4850:14:5"
									},
									"scope": 845,
									"src": "4704:414:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "5381:91:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5413:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 679,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															686,
															715
														],
														"referencedDeclaration": 715,
														"src": "5394:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 678,
												"id": 684,
												"nodeType": "Return",
												"src": "5387:80:5"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "5122:156:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5290:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5317:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "5309:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5338:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "5325:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:35:5"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "5367:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:14:5"
									},
									"scope": 845,
									"src": "5281:191:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "5786:158:5",
										"statements": [
											{
												"assignments": [
													699,
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5798:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "5793:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 698,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5793:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5820:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "5807:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 700,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5807:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "5852:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 702,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "5834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5841:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5834:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5792:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "5897:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "5905:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 710,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "5914:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 711,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "5926:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 707,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5870:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 697,
												"id": 713,
												"nodeType": "Return",
												"src": "5863:76:5"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "5476:163:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5651:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5683:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5675:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5708:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5695:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5732:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5718:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 692,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5718:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5669:79:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5772:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5772:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5771:14:5"
									},
									"scope": 845,
									"src": "5642:302:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "6206:95:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 726,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "6240:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "6248:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 725,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															761
														],
														"referencedDeclaration": 761,
														"src": "6219:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 724,
												"id": 730,
												"nodeType": "Return",
												"src": "6212:84:5"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "5948:158:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6118:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "6139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6168:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "6155:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6155:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6138:35:5"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "6192:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6192:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6191:14:5"
									},
									"scope": 845,
									"src": "6109:192:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "6614:160:5",
										"statements": [
											{
												"assignments": [
													745,
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6626:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "6621:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 744,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6621:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6648:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "6635:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 746,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6635:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"arguments": [
														{
															"id": 750,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "6682:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 748,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "6662:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6669:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6662:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6662:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6620:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "6727:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "6735:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 756,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6744:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 757,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6756:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 753,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6700:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 743,
												"id": 759,
												"nodeType": "Return",
												"src": "6693:76:5"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "6305:165:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6482:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6516:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6508:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6541:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6528:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6528:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6565:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6551:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6551:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:79:5"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6600:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6600:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:14:5"
									},
									"scope": 845,
									"src": "6473:301:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "7224:372:5",
										"statements": [
											{
												"condition": {
													"id": 775,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "7234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 797,
													"nodeType": "Block",
													"src": "7544:48:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 793,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "7560:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 794,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "7572:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 792,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "7552:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7552:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 796,
															"nodeType": "ExpressionStatement",
															"src": "7552:33:5"
														}
													]
												},
												"id": 798,
												"nodeType": "IfStatement",
												"src": "7230:362:5",
												"trueBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "7243:295:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "7255:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7266:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7255:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7276:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7255:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 788,
															"nodeType": "IfStatement",
															"src": "7251:256:5",
															"trueBody": {
																"id": 787,
																"nodeType": "Block",
																"src": "7279:228:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 782,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 764,
																							"src": "7457:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 781,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 533,
																						"src": "7446:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 783,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7446:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 784,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7466:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 780,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7438:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7438:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 786,
																		"nodeType": "ExpressionStatement",
																		"src": "7438:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 789,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "7521:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 774,
															"id": 790,
															"nodeType": "Return",
															"src": "7514:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "6778:267:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7057:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7097:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7089:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7089:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7114:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7109:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7109:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7140:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7127:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7127:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7170:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7156:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7156:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7083:103:5"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7210:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:5"
									},
									"scope": 845,
									"src": "7048:548:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "7949:109:5",
										"statements": [
											{
												"condition": {
													"id": 812,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 803,
													"src": "7959:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "8006:48:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "8022:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 818,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "8034:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 816,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "8014:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8014:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 820,
															"nodeType": "ExpressionStatement",
															"src": "8014:33:5"
														}
													]
												},
												"id": 822,
												"nodeType": "IfStatement",
												"src": "7955:99:5",
												"trueBody": {
													"id": 815,
													"nodeType": "Block",
													"src": "7968:32:5",
													"statements": [
														{
															"expression": {
																"id": 813,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "7983:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 811,
															"id": 814,
															"nodeType": "Return",
															"src": "7976:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "7600:200:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7812:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7839:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7834:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7834:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7865:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7852:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7852:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7895:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7881:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7881:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7828:83:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7935:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7935:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7934:14:5"
									},
									"scope": 845,
									"src": "7803:255:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "8145:393:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 831,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "8213:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8224:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8213:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8233:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8213:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "8499:35:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 838,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "8514:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 837,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8507:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8507:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 840,
															"nodeType": "ExpressionStatement",
															"src": "8507:20:5"
														}
													]
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "8209:325:5",
												"trueBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "8236:257:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8376:111:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8386:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8415:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8409:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8409:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8390:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8446:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8450:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8442:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8442:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8463:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8435:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8435:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8435:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 826,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8415:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 826,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8450:10:5",
																	"valueSize": 1
																}
															],
															"id": 835,
															"nodeType": "InlineAssembly",
															"src": "8367:120:5"
														}
													]
												}
											}
										]
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8071:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8092:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "8079:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 825,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8079:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8118:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "8104:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8104:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8078:53:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8145:0:5"
									},
									"scope": 845,
									"src": "8062:476:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 846,
							"src": "194:8346:5",
							"usedErrors": []
						}
					],
					"src": "101:8439:5"
				},
				"id": 5
			},
			"TransferUSDCBasic.sol": {
				"ast": {
					"absolutePath": "TransferUSDCBasic.sol",
					"exportedSymbols": {
						"Client": [
							120
						],
						"IERC20": [
							198
						],
						"IRouterClient": [
							42
						],
						"SafeERC20": [
							515
						],
						"TransferUSDCBasic": [
							1189
						]
					},
					"id": 1190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
							"file": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol",
							"id": 849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 43,
							"src": "90:99:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 848,
										"name": "IRouterClient",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 42,
										"src": "98:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
							"file": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
							"id": 851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 121,
							"src": "190:84:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 850,
										"name": "Client",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 120,
										"src": "198:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
							"file": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
							"id": 853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 199,
							"src": "275:117:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 852,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 198,
										"src": "283:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
							"file": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
							"id": 855,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 516,
							"src": "393:129:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 854,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 515,
										"src": "401:9:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferUSDCBasic",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 856,
								"nodeType": "StructuredDocumentation",
								"src": "524:175:6",
								"text": " THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n DO NOT USE THIS CODE IN PRODUCTION."
							},
							"fullyImplemented": true,
							"id": 1189,
							"linearizedBaseContracts": [
								1189
							],
							"name": "TransferUSDCBasic",
							"nameLocation": "709:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 860,
									"libraryName": {
										"id": 857,
										"name": "SafeERC20",
										"nameLocations": [
											"739:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 515,
										"src": "739:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "733:27:6",
									"typeName": {
										"id": 859,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 858,
											"name": "IERC20",
											"nameLocations": [
												"753:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 198,
											"src": "753:6:6"
										},
										"referencedDeclaration": 198,
										"src": "753:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$198",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"errorSelector": "28fdcaa1",
									"id": 866,
									"name": "NotEnoughBalanceForFees",
									"nameLocation": "772:23:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "currentBalance",
												"nameLocation": "804:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "796:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "calculatedFees",
												"nameLocation": "828:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "820:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:48:6"
									},
									"src": "766:78:6"
								},
								{
									"errorSelector": "6212cf3b",
									"id": 870,
									"name": "NotEnoughBalanceUsdcForTransfer",
									"nameLocation": "855:31:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "currentBalance",
												"nameLocation": "895:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "887:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:24:6"
									},
									"src": "849:62:6"
								},
								{
									"errorSelector": "d0d04f60",
									"id": 872,
									"name": "NothingToWithdraw",
									"nameLocation": "922:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "939:2:6"
									},
									"src": "916:26:6"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 874,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "963:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "948:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 873,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 877,
									"mutability": "immutable",
									"name": "ccipRouter",
									"nameLocation": "1006:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "974:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRouterClient_$42",
										"typeString": "contract IRouterClient"
									},
									"typeName": {
										"id": 876,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 875,
											"name": "IRouterClient",
											"nameLocations": [
												"974:13:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 42,
											"src": "974:13:6"
										},
										"referencedDeclaration": 42,
										"src": "974:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRouterClient_$42",
											"typeString": "contract IRouterClient"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 880,
									"mutability": "immutable",
									"name": "linkToken",
									"nameLocation": "1047:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1022:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$198",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 879,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 878,
											"name": "IERC20",
											"nameLocations": [
												"1022:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 198,
											"src": "1022:6:6"
										},
										"referencedDeclaration": 198,
										"src": "1022:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$198",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 883,
									"mutability": "immutable",
									"name": "usdcToken",
									"nameLocation": "1087:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1062:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$198",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 882,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 881,
											"name": "IERC20",
											"nameLocations": [
												"1062:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 198,
											"src": "1062:6:6"
										},
										"referencedDeclaration": 198,
										"src": "1062:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$198",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 886,
									"mutability": "mutable",
									"name": "ccipRouterAddress",
									"nameLocation": "1196:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1188:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 884,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1188:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307846363934453139333230303236386639613438363865344161303137413031313843396138313737",
										"id": 885,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1216:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xF694E193200268f9a4868e4Aa017A0118C9a8177"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "linkAddress",
									"nameLocation": "1348:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1340:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 887,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1340:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830623964354439313336383535663646456333633039393366654536453943453861323937383436",
										"id": 888,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1362:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 892,
									"mutability": "mutable",
									"name": "usdcAddress",
									"nameLocation": "1495:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1487:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 890,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1487:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835343235383930323938616564363031353935613730414238313563393637313161333142633635",
										"id": 891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1509:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5425890298aed601595a70AB815c96711a31Bc65"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 895,
									"mutability": "mutable",
									"name": "destinationChainSelector",
									"nameLocation": "1652:24:6",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1645:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 893,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1645:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "3136303135323836363031373537383235373533",
										"id": 894,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1679:20:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16015286601757825753_by_1",
											"typeString": "int_const 16015286601757825753"
										},
										"value": "16015286601757825753"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "b55a3d3f1ccd1c10f00aff03ad884028d98fa1d478fae03acecbf884ce8e8fbc",
									"id": 907,
									"name": "UsdcTransferred",
									"nameLocation": "1712:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"indexed": false,
												"mutability": "mutable",
												"name": "messageId",
												"nameLocation": "1745:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1737:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 896,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "destinationChainSelector",
												"nameLocation": "1771:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1764:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 898,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1764:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1813:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1805:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1839:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1831:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": false,
												"mutability": "mutable",
												"name": "ccipFee",
												"nameLocation": "1863:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1855:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:149:6"
									},
									"src": "1706:171:6"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "1897:172:6",
										"statements": [
											{
												"expression": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "1907:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 911,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1915:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1919:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1915:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1907:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "1907:18:6"
											},
											{
												"expression": {
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "ccipRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1935:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouterClient_$42",
															"typeString": "contract IRouterClient"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 917,
																"name": "ccipRouterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "1962:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 916,
															"name": "IRouterClient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1948:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRouterClient_$42_$",
																"typeString": "type(contract IRouterClient)"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1948:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouterClient_$42",
															"typeString": "contract IRouterClient"
														}
													},
													"src": "1935:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRouterClient_$42",
														"typeString": "contract IRouterClient"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1935:45:6"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 921,
														"name": "linkToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "1990:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$198",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 923,
																"name": "linkAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "2009:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 922,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2002:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$198_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2002:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$198",
															"typeString": "contract IERC20"
														}
													},
													"src": "1990:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "1990:31:6"
											},
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 927,
														"name": "usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2031:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$198",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 929,
																"name": "usdcAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "2050:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 928,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2043:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$198_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2043:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$198",
															"typeString": "contract IERC20"
														}
													},
													"src": "2031:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$198",
														"typeString": "contract IERC20"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "2031:31:6"
											}
										]
									},
									"id": 934,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:6"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:0:6"
									},
									"scope": 1189,
									"src": "1883:186:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "2221:1505:6",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "tokenAmounts",
														"nameLocation": "2274:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "2231:55:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Client.EVMTokenAmount[]"
														},
														"typeName": {
															"baseType": {
																"id": 946,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 945,
																	"name": "Client.EVMTokenAmount",
																	"nameLocations": [
																		"2231:6:6",
																		"2238:14:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 49,
																	"src": "2231:21:6"
																},
																"referencedDeclaration": 49,
																"src": "2231:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EVMTokenAmount_$49_storage_ptr",
																	"typeString": "struct Client.EVMTokenAmount"
																}
															},
															"id": 947,
															"nodeType": "ArrayTypeName",
															"src": "2231:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_storage_$dyn_storage_ptr",
																"typeString": "struct Client.EVMTokenAmount[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2317:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2289:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$49_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 950,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 949,
																	"name": "Client.EVMTokenAmount",
																	"nameLocations": [
																		"2293:6:6",
																		"2300:14:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 49,
																	"src": "2293:21:6"
																},
																"referencedDeclaration": 49,
																"src": "2293:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EVMTokenAmount_$49_storage_ptr",
																	"typeString": "struct Client.EVMTokenAmount"
																}
															},
															"id": 951,
															"nodeType": "ArrayTypeName",
															"src": "2293:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_storage_$dyn_storage_ptr",
																"typeString": "struct Client.EVMTokenAmount[]"
															}
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2289:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Client.EVMTokenAmount memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2231:88:6"
											},
											{
												"assignments": [
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "2358:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "2329:40:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EVMTokenAmount_$49_memory_ptr",
															"typeString": "struct Client.EVMTokenAmount"
														},
														"typeName": {
															"id": 959,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 958,
																"name": "Client.EVMTokenAmount",
																"nameLocations": [
																	"2329:6:6",
																	"2336:14:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 49,
																"src": "2329:21:6"
															},
															"referencedDeclaration": 49,
															"src": "2329:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVMTokenAmount_$49_storage_ptr",
																"typeString": "struct Client.EVMTokenAmount"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 965,
																	"name": "usdcToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "2423:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2415:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2415:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2415:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "2455:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 961,
															"name": "Client",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2372:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Client_$120_$",
																"typeString": "type(library Client)"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2379:14:6",
														"memberName": "EVMTokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "2372:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_EVMTokenAmount_$49_storage_ptr_$",
															"typeString": "type(struct Client.EVMTokenAmount storage pointer)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2408:5:6",
														"2447:6:6"
													],
													"names": [
														"token",
														"amount"
													],
													"nodeType": "FunctionCall",
													"src": "2372:101:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMTokenAmount_$49_memory_ptr",
														"typeString": "struct Client.EVMTokenAmount memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2329:144:6"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 970,
															"name": "tokenAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2483:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Client.EVMTokenAmount memory[] memory"
															}
														},
														"id": 972,
														"indexExpression": {
															"hexValue": "30",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2496:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2483:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EVMTokenAmount_$49_memory_ptr",
															"typeString": "struct Client.EVMTokenAmount memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2501:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EVMTokenAmount_$49_memory_ptr",
															"typeString": "struct Client.EVMTokenAmount memory"
														}
													},
													"src": "2483:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMTokenAmount_$49_memory_ptr",
														"typeString": "struct Client.EVMTokenAmount memory"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "2483:29:6"
											},
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "2552:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "2523:36:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_memory_ptr",
															"typeString": "struct Client.EVM2AnyMessage"
														},
														"typeName": {
															"id": 979,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 978,
																"name": "Client.EVM2AnyMessage",
																"nameLocations": [
																	"2523:6:6",
																	"2530:14:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 75,
																"src": "2523:21:6"
															},
															"referencedDeclaration": 75,
															"src": "2523:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_storage_ptr",
																"typeString": "struct Client.EVM2AnyMessage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 985,
																	"name": "_receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "2619:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 983,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2608:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2612:6:6",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2608:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2608:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2649:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"id": 988,
															"name": "tokenAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2679:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Client.EVMTokenAmount memory[] memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2786:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"expression": {
																			"id": 991,
																			"name": "Client",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 120,
																			"src": "2753:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Client_$120_$",
																				"typeString": "type(library Client)"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2760:14:6",
																		"memberName": "EVMExtraArgsV1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 81,
																		"src": "2753:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$81_storage_ptr_$",
																			"typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
																		}
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"2776:8:6"
																	],
																	"names": [
																		"gasLimit"
																	],
																	"nodeType": "FunctionCall",
																	"src": "2753:36:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_EVMExtraArgsV1_$81_memory_ptr",
																		"typeString": "struct Client.EVMExtraArgsV1 memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_EVMExtraArgsV1_$81_memory_ptr",
																		"typeString": "struct Client.EVMExtraArgsV1 memory"
																	}
																],
																"expression": {
																	"id": 989,
																	"name": "Client",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2716:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Client_$120_$",
																		"typeString": "type(library Client)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2723:12:6",
																"memberName": "_argsToBytes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 96,
																"src": "2716:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$81_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2716:87:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 998,
																	"name": "linkToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "2835:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$198",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2827:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 996,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2827:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2827:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$49_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Client.EVMTokenAmount memory[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 981,
															"name": "Client",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Client_$120_$",
																"typeString": "type(library Client)"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2569:14:6",
														"memberName": "EVM2AnyMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 75,
														"src": "2562:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$75_storage_ptr_$",
															"typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2598:8:6",
														"2643:4:6",
														"2665:12:6",
														"2705:9:6",
														"2817:8:6"
													],
													"names": [
														"receiver",
														"data",
														"tokenAmounts",
														"extraArgs",
														"feeToken"
													],
													"nodeType": "FunctionCall",
													"src": "2562:294:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_memory_ptr",
														"typeString": "struct Client.EVM2AnyMessage memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2523:333:6"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "ccipFee",
														"nameLocation": "2875:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "2867:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1006,
															"name": "destinationChainSelector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "2916:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1007,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_memory_ptr",
																"typeString": "struct Client.EVM2AnyMessage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_memory_ptr",
																"typeString": "struct Client.EVM2AnyMessage memory"
															}
														],
														"expression": {
															"id": 1004,
															"name": "ccipRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "2885:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRouterClient_$42",
																"typeString": "contract IRouterClient"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2896:6:6",
														"memberName": "getFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "2885:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$75_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:104:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "ccipFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "2986:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1015,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3024:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																			"typeString": "contract TransferUSDCBasic"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																			"typeString": "contract TransferUSDCBasic"
																		}
																	],
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3016:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1013,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3016:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3016:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1011,
																"name": "linkToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "2996:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$198",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3006:9:6",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "2996:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2996:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2986:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "2982:137:6",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1024,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3103:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																					"typeString": "contract TransferUSDCBasic"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																					"typeString": "contract TransferUSDCBasic"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3095:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3095:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3095:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1020,
																		"name": "linkToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "3075:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$198",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3085:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 155,
																	"src": "3075:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3075:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1027,
																"name": "ccipFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "3111:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1019,
															"name": "NotEnoughBalanceForFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "3051:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																"typeString": "function (uint256,uint256) pure"
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3051:68:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1029,
													"nodeType": "RevertStatement",
													"src": "3044:75:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1036,
																	"name": "ccipRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3155:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRouterClient_$42",
																		"typeString": "contract IRouterClient"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRouterClient_$42",
																		"typeString": "contract IRouterClient"
																	}
																],
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3147:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3147:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3147:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "ccipFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "3168:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1031,
															"name": "linkToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3129:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3139:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 185,
														"src": "3129:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3129:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "3129:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3191:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1044,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3221:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3225:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3221:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1042,
																"name": "usdcToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "3201:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$198",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3211:9:6",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "3201:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3201:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3191:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1056,
												"nodeType": "IfStatement",
												"src": "3187:130:6",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1051,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3305:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3309:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3305:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1049,
																		"name": "usdcToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "3285:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$198",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3295:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 155,
																	"src": "3285:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3285:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1048,
															"name": "NotEnoughBalanceUsdcForTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "3253:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3253:64:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1055,
													"nodeType": "RevertStatement",
													"src": "3246:71:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1060,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3354:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3358:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3354:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1064,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3374:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																		"typeString": "contract TransferUSDCBasic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																		"typeString": "contract TransferUSDCBasic"
																	}
																],
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3366:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1062,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3366:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3366:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "3381:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1057,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3327:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3337:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3327:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$198_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$198_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3327:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "3327:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1074,
																	"name": "ccipRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3425:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRouterClient_$42",
																		"typeString": "contract IRouterClient"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRouterClient_$42",
																		"typeString": "contract IRouterClient"
																	}
																],
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3417:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1072,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3417:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "3438:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1069,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3399:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3409:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 185,
														"src": "3399:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3399:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "3399:47:6"
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1079,
														"name": "messageId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3486:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1082,
																"name": "destinationChainSelector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "3518:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1083,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "3544:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_memory_ptr",
																	"typeString": "struct Client.EVM2AnyMessage memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_struct$_EVM2AnyMessage_$75_memory_ptr",
																	"typeString": "struct Client.EVM2AnyMessage memory"
																}
															],
															"expression": {
																"id": 1080,
																"name": "ccipRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "3498:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IRouterClient_$42",
																	"typeString": "contract IRouterClient"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3509:8:6",
															"memberName": "ccipSend",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 41,
															"src": "3498:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$75_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3498:54:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3486:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "3486:66:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1088,
															"name": "messageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "3597:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1089,
															"name": "destinationChainSelector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "3620:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1090,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "3658:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "3681:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1092,
															"name": "ccipFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "3702:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "UsdcTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3568:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint64,address,uint256,uint256)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3568:151:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "EmitStatement",
												"src": "3563:156:6"
											}
										]
									},
									"functionSelector": "fe2c5d36",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferUsdcToSepolia",
									"nameLocation": "2084:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "2123:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2115:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2150:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2142:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:58:6"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "messageId",
												"nameLocation": "2206:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2198:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 940,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:19:6"
									},
									"scope": 1189,
									"src": "2075:1651:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "3798:76:6",
										"statements": [
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "usdcAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "3808:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1104,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3841:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3845:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3841:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1108,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3861:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																			"typeString": "contract TransferUSDCBasic"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																			"typeString": "contract TransferUSDCBasic"
																		}
																	],
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3853:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1106,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3853:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3853:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1102,
																"name": "usdcToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "3821:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$198",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3831:9:6",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "3821:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3821:46:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3808:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "3808:59:6"
											}
										]
									},
									"functionSelector": "ed3bd5bc",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowanceUsdc",
									"nameLocation": "3741:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3754:2:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "3786:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3778:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3777:20:6"
									},
									"scope": 1189,
									"src": "3732:142:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "3980:120:6",
										"statements": [
											{
												"expression": {
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1123,
														"name": "linkBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "3990:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1126,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "4025:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1124,
																"name": "linkToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "4005:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$198",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4015:9:6",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "4005:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4005:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3990:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "3990:43:6"
											},
											{
												"expression": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1130,
														"name": "usdcBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "4043:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1135,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "4085:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1132,
																		"name": "usdcToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "4064:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$198",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$198",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1131,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "4057:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$198_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4057:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$198",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4075:9:6",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "4057:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4057:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4043:50:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "4043:50:6"
											}
										]
									},
									"functionSelector": "6392a51f",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balancesOf",
									"nameLocation": "3889:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3908:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "3900:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3899:17:6"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "linkBalance",
												"nameLocation": "3946:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "3938:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3938:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "usdcBalance",
												"nameLocation": "3967:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "3959:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3937:42:6"
									},
									"scope": 1189,
									"src": "3880:220:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "4127:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1143,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4145:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4149:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4145:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1145,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "4159:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4145:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4137:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "4137:28:6"
											},
											{
												"id": 1149,
												"nodeType": "PlaceholderStatement",
												"src": "4175:1:6"
											}
										]
									},
									"id": 1151,
									"name": "onlyOwner",
									"nameLocation": "4115:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4124:2:6"
									},
									"src": "4106:77:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "4289:181:6",
										"statements": [
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4307:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "4299:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4299:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1168,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4349:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																		"typeString": "contract TransferUSDCBasic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TransferUSDCBasic_$1189",
																		"typeString": "contract TransferUSDCBasic"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4341:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4341:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4341:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1163,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "4323:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1162,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "4316:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$198_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4316:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4331:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 155,
														"src": "4316:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4316:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4299:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "4369:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4379:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4369:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "4365:43:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1175,
															"name": "NothingToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "4389:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4389:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1177,
													"nodeType": "RevertStatement",
													"src": "4382:26:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1183,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "4442:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1184,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "4456:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1180,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "4425:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1179,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "4418:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$198_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4418:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$198",
																"typeString": "contract IERC20"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4433:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 165,
														"src": "4418:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4418:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "4418:45:6"
											}
										]
									},
									"functionSelector": "3aeac4e1",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1157,
												"name": "onlyOwner",
												"nameLocations": [
													"4279:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1151,
												"src": "4279:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4279:9:6"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "4198:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "4229:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4221:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4259:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "4251:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:60:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4289:0:6"
									},
									"scope": 1189,
									"src": "4189:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1190,
							"src": "700:3772:6",
							"usedErrors": [
								866,
								870,
								872
							]
						}
					],
					"src": "32:4440:6"
				},
				"id": 6
			}
		}
	}
}